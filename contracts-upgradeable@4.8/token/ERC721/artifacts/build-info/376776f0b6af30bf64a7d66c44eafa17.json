{
	"id": "376776f0b6af30bf64a7d66c44eafa17",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.13",
	"solcLongVersion": "0.8.13+commit.abaa5c0e",
	"input": {
		"language": "Solidity",
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		},
		"sources": {
			"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.2) (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC721Upgradeable.sol\";\nimport \"./IERC721ReceiverUpgradeable.sol\";\nimport \"./extensions/IERC721MetadataUpgradeable.sol\";\nimport \"../../utils/AddressUpgradeable.sol\";\nimport \"../../utils/ContextUpgradeable.sol\";\nimport \"../../utils/StringsUpgradeable.sol\";\nimport \"../../utils/introspection/ERC165Upgradeable.sol\";\nimport \"../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\ncontract ERC721Upgradeable is Initializable, ContextUpgradeable, ERC165Upgradeable, IERC721Upgradeable, IERC721MetadataUpgradeable {\n    using AddressUpgradeable for address;\n    using StringsUpgradeable for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    // Mapping from token ID to owner address\n    mapping(uint256 => address) private _owners;\n\n    // Mapping owner address to token count\n    mapping(address => uint256) private _balances;\n\n    // Mapping from token ID to approved address\n    mapping(uint256 => address) private _tokenApprovals;\n\n    // Mapping from owner to operator approvals\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\n\n    address manager;\n\n    bool isBounded;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    function __ERC721_init(string memory name_, string memory symbol_, address _manager) internal onlyInitializing {\n        manager = _manager;\n        __ERC721_init_unchained(name_, symbol_);\n    }\n\n    function __ERC721_init_unchained(string memory name_, string memory symbol_) internal onlyInitializing {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165Upgradeable, IERC165Upgradeable) returns (bool) {\n        return\n            interfaceId == type(IERC721Upgradeable).interfaceId ||\n            interfaceId == type(IERC721MetadataUpgradeable).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view virtual override returns (uint256) {\n        require(owner != address(0), \"ERC721: address zero is not a valid owner\");\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\n        address owner = _ownerOf(tokenId);\n        require(owner != address(0), \"ERC721: invalid token ID\");\n        return owner;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        _requireMinted(tokenId);\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n\n    modifier onlyManager() {\n        require(msg.sender == manager, \"Caller is not the owner\");\n        _;\n    } \n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual override {\n        address owner = ERC721Upgradeable.ownerOf(tokenId);\n        require(to != owner, \"ERC721: approval to current owner\");\n\n        require(\n            _msgSender() == owner || isApprovedForAll(owner, _msgSender()),\n            \"ERC721: approve caller is not token owner or approved for all\"\n        );\n\n        _approve(to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\n        _requireMinted(tokenId);\n\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual override {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    function setIsBounded(bool _flag) public onlyManager{\n        isBounded = _flag;\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public virtual override {\n        //solhint-disable-next-line max-line-length\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: caller is not token owner or approved\");\n\n        _transfer(from, to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public virtual override {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) public virtual override {\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: caller is not token owner or approved\");\n        _safeTransfer(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) internal virtual {\n        _transfer(from, to, tokenId);\n        require(_checkOnERC721Received(from, to, tokenId, data), \"ERC721: transfer to non ERC721Receiver implementer\");\n    }\n\n    /**\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n     */\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\n        return _owners[tokenId];\n    }\n\n    /**\n     * @dev Returns whether `tokenId` exists.\n     *\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n     *\n     * Tokens start existing when they are minted (`_mint`),\n     * and stop existing when they are burned (`_burn`).\n     */\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\n        return _ownerOf(tokenId) != address(0);\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {\n        address owner = ERC721Upgradeable.ownerOf(tokenId);\n        return (spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender);\n    }\n\n    /**\n     * @dev Safely mints `tokenId` and transfers it to `to`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal virtual {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) internal virtual {\n        _mint(to, tokenId);\n        require(\n            _checkOnERC721Received(address(0), to, tokenId, data),\n            \"ERC721: transfer to non ERC721Receiver implementer\"\n        );\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal virtual {\n        require(to != address(0), \"ERC721: mint to the zero address\");\n        require(!_exists(tokenId), \"ERC721: token already minted\");\n\n        _beforeTokenTransfer(address(0), to, tokenId, 1);\n\n        // Check that tokenId was not minted by `_beforeTokenTransfer` hook\n        require(!_exists(tokenId), \"ERC721: token already minted\");\n\n        unchecked {\n            // Will not overflow unless all 2**256 token ids are minted to the same owner.\n            // Given that tokens are minted one by one, it is impossible in practice that\n            // this ever happens. Might change if we allow batch minting.\n            // The ERC fails to describe this case.\n            _balances[to] += 1;\n        }\n\n        _owners[tokenId] = to;\n\n        emit Transfer(address(0), to, tokenId);\n\n        _afterTokenTransfer(address(0), to, tokenId, 1);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal virtual {\n        address owner = ERC721Upgradeable.ownerOf(tokenId);\n\n        _beforeTokenTransfer(owner, address(0), tokenId, 1);\n\n        // Update ownership in case tokenId was transferred by `_beforeTokenTransfer` hook\n        owner = ERC721Upgradeable.ownerOf(tokenId);\n\n        // Clear approvals\n        delete _tokenApprovals[tokenId];\n\n        unchecked {\n            // Cannot overflow, as that would require more tokens to be burned/transferred\n            // out than the owner initially received through minting and transferring in.\n            _balances[owner] -= 1;\n        }\n        delete _owners[tokenId];\n\n        emit Transfer(owner, address(0), tokenId);\n\n        _afterTokenTransfer(owner, address(0), tokenId, 1);\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(\n        address from,\n        address to,\n        uint256 tokenId\n    ) internal virtual {\n        require(ERC721Upgradeable.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\");\n        require(to != address(0), \"ERC721: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, tokenId, 1);\n\n        // Check that tokenId was not transferred by `_beforeTokenTransfer` hook\n        require(ERC721Upgradeable.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\");\n\n        // Clear approvals from the previous owner\n        delete _tokenApprovals[tokenId];\n\n        unchecked {\n            // `_balances[from]` cannot overflow for the same reason as described in `_burn`:\n            // `from`'s balance is the number of token held, which is at least one before the current\n            // transfer.\n            // `_balances[to]` could overflow in the conditions described in `_mint`. That would require\n            // all 2**256 token ids to be minted, which in practice is impossible.\n            _balances[from] -= 1;\n            _balances[to] += 1;\n        }\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n        _afterTokenTransfer(from, to, tokenId, 1);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * Emits an {Approval} event.\n     */\n    function _approve(address to, uint256 tokenId) internal virtual {\n        _tokenApprovals[tokenId] = to;\n        emit Approval(ERC721Upgradeable.ownerOf(tokenId), to, tokenId);\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(\n        address owner,\n        address operator,\n        bool approved\n    ) internal virtual {\n        require(owner != operator, \"ERC721: approve to caller\");\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Reverts if the `tokenId` has not been minted yet.\n     */\n    function _requireMinted(uint256 tokenId) internal view virtual {\n        require(_exists(tokenId), \"ERC721: invalid token ID\");\n    }\n\n    /**\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n     * The call is not executed if the target address is not a contract.\n     *\n     * @param from address representing the previous owner of the given token ID\n     * @param to target address that will receive the tokens\n     * @param tokenId uint256 ID of the token to be transferred\n     * @param data bytes optional data to send along with the call\n     * @return bool whether the call correctly returned the expected magic value\n     */\n    function _checkOnERC721Received(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) private returns (bool) {\n        if (to.isContract()) {\n            try IERC721ReceiverUpgradeable(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\n                return retval == IERC721ReceiverUpgradeable.onERC721Received.selector;\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    revert(\"ERC721: transfer to non ERC721Receiver implementer\");\n                } else {\n                    /// @solidity memory-safe-assembly\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        } else {\n            return true;\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any token transfer. This includes minting and burning. If {ERC721Consecutive} is\n     * used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, ``from``'s tokens will be transferred to `to`.\n     * - When `from` is zero, the tokens will be minted for `to`.\n     * - When `to` is zero, ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     * - `batchSize` is non-zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 firstTokenId,\n        uint256 batchSize\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any token transfer. This includes minting and burning. If {ERC721Consecutive} is\n     * used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, ``from``'s tokens were transferred to `to`.\n     * - When `from` is zero, the tokens were minted for `to`.\n     * - When `to` is zero, ``from``'s tokens were burned.\n     * - `from` and `to` are never both zero.\n     * - `batchSize` is non-zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        uint256 firstTokenId,\n        uint256 batchSize\n    ) internal virtual {}\n\n    /**\n     * @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n     *\n     * WARNING: Anyone calling this MUST ensure that the balances remain consistent with the ownership. The invariant\n     * being that for any address `a` the value returned by `balanceOf(a)` must be equal to the number of tokens such\n     * that `ownerOf(tokenId)` is `a`.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function __unsafe_increaseBalance(address account, uint256 amount) internal {\n        _balances[account] += amount;\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[44] private __gap;\n}\n"
			},
			"mlmContracts/contracts-upgradeable@4.8/proxy/utils/Initializable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.1) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.2;\n\nimport \"../../utils/AddressUpgradeable.sol\";\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Indicates that the contract has been initialized.\n     * @custom:oz-retyped-from bool\n     */\n    uint8 private _initialized;\n\n    /**\n     * @dev Indicates that the contract is in the process of being initialized.\n     */\n    bool private _initializing;\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint8 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\n     * constructor.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        bool isTopLevelCall = !_initializing;\n        require(\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\n            \"Initializable: contract is already initialized\"\n        );\n        _initialized = 1;\n        if (isTopLevelCall) {\n            _initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            _initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint8 version) {\n        require(!_initializing && _initialized < version, \"Initializable: contract is already initialized\");\n        _initialized = version;\n        _initializing = true;\n        _;\n        _initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        require(_initializing, \"Initializable: contract is not initializing\");\n        _;\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        require(!_initializing, \"Initializable: contract is initializing\");\n        if (_initialized < type(uint8).max) {\n            _initialized = type(uint8).max;\n            emit Initialized(type(uint8).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint8) {\n        return _initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _initializing;\n    }\n}\n"
			},
			"mlmContracts/contracts-upgradeable@4.8/utils/introspection/ERC165Upgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165Upgradeable.sol\";\nimport \"../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165Upgradeable is Initializable, IERC165Upgradeable {\n    function __ERC165_init() internal onlyInitializing {\n    }\n\n    function __ERC165_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165Upgradeable).interfaceId;\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[50] private __gap;\n}\n"
			},
			"mlmContracts/contracts-upgradeable@4.8/utils/StringsUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./math/MathUpgradeable.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary StringsUpgradeable {\n    bytes16 private constant _SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = MathUpgradeable.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, MathUpgradeable.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n}\n"
			},
			"mlmContracts/contracts-upgradeable@4.8/utils/ContextUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\nimport \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[50] private __gap;\n}\n"
			},
			"mlmContracts/contracts-upgradeable@4.8/utils/AddressUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary AddressUpgradeable {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"
			},
			"mlmContracts/contracts-upgradeable@4.8/token/ERC721/extensions/IERC721MetadataUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC721Upgradeable.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721MetadataUpgradeable is IERC721Upgradeable {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"
			},
			"mlmContracts/contracts-upgradeable@4.8/token/ERC721/IERC721ReceiverUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721ReceiverUpgradeable {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
			},
			"mlmContracts/contracts-upgradeable@4.8/token/ERC721/IERC721Upgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165Upgradeable.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721Upgradeable is IERC165Upgradeable {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes calldata data\n    ) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool _approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"
			},
			"mlmContracts/contracts-upgradeable@4.8/utils/introspection/IERC165Upgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165Upgradeable {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"mlmContracts/contracts-upgradeable@4.8/utils/math/MathUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary MathUpgradeable {\n    enum Rounding {\n        Down, // Toward negative infinity\n        Up, // Toward infinity\n        Zero // Toward zero\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n     * with further edits by Uniswap Labs also under MIT license.\n     */\n    function mulDiv(\n        uint256 x,\n        uint256 y,\n        uint256 denominator\n    ) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod0 := mul(x, y)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            require(denominator > prod1);\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n            // See https://cs.stackexchange.com/q/138556/92363.\n\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 twos = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(\n        uint256 x,\n        uint256 y,\n        uint256 denominator,\n        Rounding rounding\n    ) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10**64) {\n                value /= 10**64;\n                result += 64;\n            }\n            if (value >= 10**32) {\n                value /= 10**32;\n                result += 32;\n            }\n            if (value >= 10**16) {\n                value /= 10**16;\n                result += 16;\n            }\n            if (value >= 10**8) {\n                value /= 10**8;\n                result += 8;\n            }\n            if (value >= 10**4) {\n                value /= 10**4;\n                result += 4;\n            }\n            if (value >= 10**2) {\n                value /= 10**2;\n                result += 2;\n            }\n            if (value >= 10**1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (rounding == Rounding.Up && 10**result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (rounding == Rounding.Up && 1 << (result * 8) < value ? 1 : 0);\n        }\n    }\n}\n"
			}
		}
	},
	"output": {
		"contracts": {
			"mlmContracts/contracts-upgradeable@4.8/proxy/utils/Initializable.sol": {
				"Initializable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"custom:oz-upgrades-unsafe-allow": "constructor constructor() {     _disableInitializers(); } ``` ====",
						"details": "This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ``` contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\"MyToken\", \"MTK\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\"MyToken\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```",
						"events": {
							"Initialized(uint8)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"_initialized": {
								"custom:oz-retyped-from": "bool",
								"details": "Indicates that the contract has been initialized."
							},
							"_initializing": {
								"details": "Indicates that the contract is in the process of being initialized."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ``` contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_initialized\":{\"custom:oz-retyped-from\":\"bool\",\"details\":\"Indicates that the contract has been initialized.\"},\"_initializing\":{\"details\":\"Indicates that the contract is in the process of being initialized.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"mlmContracts/contracts-upgradeable@4.8/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"mlmContracts/contracts-upgradeable@4.8/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x037c334add4b033ad3493038c25be1682d78c00992e1acb0e2795caff3925271\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8a313cf42389440e2706837c91370323b85971c06afd6d056d21e2bc86459618\",\"dweb:/ipfs/QmT8XUrUvQ9aZaPKrqgRU2JVGWnaxBcUYJA7Q7K5KcLBSZ\"]},\"mlmContracts/contracts-upgradeable@4.8/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72460c66cd1c3b1c11b863e0d8df0a1c56f37743019e468dc312c754f43e3b06\",\"dweb:/ipfs/QmPExYKiNb9PUsgktQBupPaM33kzDHxaYoVeJdLhv8s879\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 6,
								"contract": "mlmContracts/contracts-upgradeable@4.8/proxy/utils/Initializable.sol:Initializable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 9,
								"contract": "mlmContracts/contracts-upgradeable@4.8/proxy/utils/Initializable.sol:Initializable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol": {
				"ERC721Upgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "_flag",
									"type": "bool"
								}
							],
							"name": "setIsBounded",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.",
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"stateVariables": {
							"__gap": {
								"details": "This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":751:18455  contract ERC721Upgradeable is Initializable, ContextUpgradeable, ERC165Upgradeable, IERC721Upgradeable, IERC721MetadataUpgradeable {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":751:18455  contract ERC721Upgradeable is Initializable, ContextUpgradeable, ERC165Upgradeable, IERC721Upgradeable, IERC721MetadataUpgradeable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70a08231\n      gt\n      tag_17\n      jumpi\n      dup1\n      0xa9f51b23\n      gt\n      tag_18\n      jumpi\n      dup1\n      0xa9f51b23\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xb88d4fde\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xc87b56dd\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_16\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_18:\n      dup1\n      0x70a08231\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_17:\n      dup1\n      0x095ea7b3\n      gt\n      tag_19\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x42842e0e\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x6352211e\n      eq\n      tag_9\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_19:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x081812fc\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":2076:2420  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165Upgradeable, IERC165Upgradeable) returns (bool) {... */\n    tag_3:\n      tag_20\n      tag_21\n      calldatasize\n      0x04\n      tag_22\n      jump\t// in\n    tag_21:\n      tag_23\n      jump\t// in\n    tag_20:\n      mload(0x40)\n        /* \"#utility.yul\":565:579   */\n      swap1\n      iszero\n        /* \"#utility.yul\":558:580   */\n      iszero\n        /* \"#utility.yul\":540:581   */\n      dup2\n      mstore\n        /* \"#utility.yul\":528:530   */\n      0x20\n        /* \"#utility.yul\":513:531   */\n      add\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":2076:2420  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165Upgradeable, IERC165Upgradeable) returns (bool) {... */\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":3021:3119  function name() public view virtual override returns (string memory) {... */\n    tag_4:\n      tag_26\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":4612:4779  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_5:\n      tag_30\n      tag_31\n      calldatasize\n      0x04\n      tag_32\n      jump\t// in\n    tag_31:\n      tag_33\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1692:1724   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1674:1725   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1662:1664   */\n      0x20\n        /* \"#utility.yul\":1647:1665   */\n      add\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":4612:4779  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n      tag_24\n        /* \"#utility.yul\":1528:1731   */\n      jump\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":4134:4551  function approve(address to, uint256 tokenId) public virtual override {... */\n    tag_6:\n      tag_36\n      tag_37\n      calldatasize\n      0x04\n      tag_38\n      jump\t// in\n    tag_37:\n      tag_39\n      jump\t// in\n    tag_36:\n      stop\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":5381:5707  function transferFrom(... */\n    tag_7:\n      tag_36\n      tag_41\n      calldatasize\n      0x04\n      tag_42\n      jump\t// in\n    tag_41:\n      tag_43\n      jump\t// in\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":5773:5952  function safeTransferFrom(... */\n    tag_8:\n      tag_36\n      tag_45\n      calldatasize\n      0x04\n      tag_42\n      jump\t// in\n    tag_45:\n      tag_46\n      jump\t// in\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":2740:2959  function ownerOf(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_9:\n      tag_30\n      tag_48\n      calldatasize\n      0x04\n      tag_32\n      jump\t// in\n    tag_48:\n      tag_49\n      jump\t// in\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":2479:2683  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n    tag_10:\n      tag_51\n      tag_52\n      calldatasize\n      0x04\n      tag_53\n      jump\t// in\n    tag_52:\n      tag_54\n      jump\t// in\n    tag_51:\n      mload(0x40)\n        /* \"#utility.yul\":2843:2868   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":2831:2833   */\n      0x20\n        /* \"#utility.yul\":2816:2834   */\n      add\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":2479:2683  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n      tag_24\n        /* \"#utility.yul\":2697:2874   */\n      jump\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":3183:3285  function symbol() public view virtual override returns (string memory) {... */\n    tag_11:\n      tag_26\n      tag_58\n      jump\t// in\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":4846:4999  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_12:\n      tag_36\n      tag_61\n      calldatasize\n      0x04\n      tag_62\n      jump\t// in\n    tag_61:\n      tag_63\n      jump\t// in\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":5005:5091  function setIsBounded(bool _flag) public onlyManager{... */\n    tag_13:\n      tag_36\n      tag_65\n      calldatasize\n      0x04\n      tag_66\n      jump\t// in\n    tag_65:\n      tag_67\n      jump\t// in\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":6018:6332  function safeTransferFrom(... */\n    tag_14:\n      tag_36\n      tag_69\n      calldatasize\n      0x04\n      tag_70\n      jump\t// in\n    tag_69:\n      tag_71\n      jump\t// in\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":3351:3627  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_15:\n      tag_26\n      tag_73\n      calldatasize\n      0x04\n      tag_32\n      jump\t// in\n    tag_73:\n      tag_74\n      jump\t// in\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":5157:5319  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n    tag_16:\n      tag_20\n      tag_77\n      calldatasize\n      0x04\n      tag_78\n      jump\t// in\n    tag_77:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":5277:5302  _operatorApprovals[owner] */\n      swap2\n      dup3\n      and\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":5254:5258  bool */\n      0x00\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":5277:5302  _operatorApprovals[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":5277:5295  _operatorApprovals */\n      0x6a\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":5277:5302  _operatorApprovals[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":5277:5312  _operatorApprovals[owner][operator] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":5157:5319  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n      jump\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":2076:2420  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165Upgradeable, IERC165Upgradeable) returns (bool) {... */\n    tag_23:\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":2200:2204  bool */\n      0x00\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":2235:2286  interfaceId == type(IERC721Upgradeable).interfaceId */\n      dup3\n      and\n      shl(0xe0, 0x80ac58cd)\n      eq\n      dup1\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":2235:2361  interfaceId == type(IERC721Upgradeable).interfaceId ||... */\n      tag_82\n      jumpi\n      pop\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":2302:2361  interfaceId == type(IERC721MetadataUpgradeable).interfaceId */\n      dup3\n      and\n      shl(0xe0, 0x5b5e139f)\n      eq\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":2235:2361  interfaceId == type(IERC721Upgradeable).interfaceId ||... */\n    tag_82:\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":2235:2413  interfaceId == type(IERC721Upgradeable).interfaceId ||... */\n      dup1\n      tag_84\n      jumpi\n      pop\n      shl(0xe0, 0x01ffc9a7)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"mlmContracts/contracts-upgradeable@4.8/utils/introspection/ERC165Upgradeable.sol\":1168:1219  interfaceId == type(IERC165Upgradeable).interfaceId */\n      dup4\n      and\n      eq\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":2377:2413  super.supportsInterface(interfaceId) */\n    tag_84:\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":2216:2413  return... */\n      swap3\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":2076:2420  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165Upgradeable, IERC165Upgradeable) returns (bool) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":3021:3119  function name() public view virtual override returns (string memory) {... */\n    tag_27:\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":3075:3088  string memory */\n      0x60\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":3107:3112  _name */\n      0x65\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":3100:3112  return _name */\n      dup1\n      sload\n      tag_87\n      swap1\n      tag_88\n      jump\t// in\n    tag_87:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_89\n      swap1\n      tag_88\n      jump\t// in\n    tag_89:\n      dup1\n      iszero\n      tag_90\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_91\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_90)\n    tag_91:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_92:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_92\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_90:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":3021:3119  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":4612:4779  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_33:\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":4688:4695  address */\n      0x00\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":4707:4730  _requireMinted(tokenId) */\n      tag_94\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":4722:4729  tokenId */\n      dup3\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":4707:4721  _requireMinted */\n      tag_95\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":4707:4730  _requireMinted(tokenId) */\n      jump\t// in\n    tag_94:\n      pop\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":4748:4772  _tokenApprovals[tokenId] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":4748:4763  _tokenApprovals */\n      0x69\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":4748:4772  _tokenApprovals[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":4612:4779  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n      jump\t// out\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":4134:4551  function approve(address to, uint256 tokenId) public virtual override {... */\n    tag_39:\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":4214:4227  address owner */\n      0x00\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":4230:4264  ERC721Upgradeable.ownerOf(tokenId) */\n      tag_97\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":4256:4263  tokenId */\n      dup3\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":4230:4255  ERC721Upgradeable.ownerOf */\n      tag_49\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":4230:4264  ERC721Upgradeable.ownerOf(tokenId) */\n      jump\t// in\n    tag_97:\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":4214:4264  address owner = ERC721Upgradeable.ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":4288:4293  owner */\n      dup1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":4282:4293  to != owner */\n      and\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":4282:4284  to */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":4282:4293  to != owner */\n      and\n      sub\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":4274:4331  require(to != owner, \"ERC721: approval to current owner\") */\n      tag_98\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5615:5617   */\n      0x20\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":4274:4331  require(to != owner, \"ERC721: approval to current owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5597:5618   */\n      mstore\n        /* \"#utility.yul\":5654:5656   */\n      0x21\n        /* \"#utility.yul\":5634:5652   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5627:5657   */\n      mstore\n        /* \"#utility.yul\":5693:5727   */\n      0x4552433732313a20617070726f76616c20746f2063757272656e74206f776e65\n        /* \"#utility.yul\":5673:5691   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5666:5728   */\n      mstore\n      shl(0xf9, 0x39)\n        /* \"#utility.yul\":5744:5762   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5737:5768   */\n      mstore\n        /* \"#utility.yul\":5785:5804   */\n      0x84\n      add\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":4274:4331  require(to != owner, \"ERC721: approval to current owner\") */\n    tag_99:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_98:\n        /* \"mlmContracts/contracts-upgradeable@4.8/utils/ContextUpgradeable.sol\":929:939  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":4363:4384  _msgSender() == owner */\n      dup3\n      and\n      eq\n      dup1\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":4363:4425  _msgSender() == owner || isApprovedForAll(owner, _msgSender()) */\n      tag_104\n      jumpi\n      pop\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":4388:4425  isApprovedForAll(owner, _msgSender()) */\n      tag_104\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":4405:4410  owner */\n      dup2\n        /* \"mlmContracts/contracts-upgradeable@4.8/utils/ContextUpgradeable.sol\":929:939  msg.sender */\n      caller\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":5157:5319  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n      tag_77\n      jump\t// in\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":4388:4425  isApprovedForAll(owner, _msgSender()) */\n    tag_104:\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":4342:4512  require(... */\n      tag_106\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6017:6019   */\n      0x20\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":4342:4512  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5999:6020   */\n      mstore\n        /* \"#utility.yul\":6056:6058   */\n      0x3d\n        /* \"#utility.yul\":6036:6054   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6029:6059   */\n      mstore\n        /* \"#utility.yul\":6095:6129   */\n      0x4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f\n        /* \"#utility.yul\":6075:6093   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6068:6130   */\n      mstore\n        /* \"#utility.yul\":6166:6197   */\n      0x6b656e206f776e6572206f7220617070726f76656420666f7220616c6c000000\n        /* \"#utility.yul\":6146:6164   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6139:6198   */\n      mstore\n        /* \"#utility.yul\":6215:6234   */\n      0x84\n      add\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":4342:4512  require(... */\n      tag_99\n        /* \"#utility.yul\":5815:6240   */\n      jump\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":4342:4512  require(... */\n    tag_106:\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":4523:4544  _approve(to, tokenId) */\n      tag_109\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":4532:4534  to */\n      dup4\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":4536:4543  tokenId */\n      dup4\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":4523:4531  _approve */\n      tag_110\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":4523:4544  _approve(to, tokenId) */\n      jump\t// in\n    tag_109:\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":4204:4551  {... */\n      pop\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":4134:4551  function approve(address to, uint256 tokenId) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":5381:5707  function transferFrom(... */\n    tag_43:\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":5570:5611  _isApprovedOrOwner(_msgSender(), tokenId) */\n      tag_112\n        /* \"mlmContracts/contracts-upgradeable@4.8/utils/ContextUpgradeable.sol\":929:939  msg.sender */\n      caller\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":5603:5610  tokenId */\n      dup3\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":5570:5588  _isApprovedOrOwner */\n      tag_114\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":5570:5611  _isApprovedOrOwner(_msgSender(), tokenId) */\n      jump\t// in\n    tag_112:\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":5562:5661  require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: caller is not token owner or approved\") */\n      tag_115\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_99\n      swap1\n      tag_117\n      jump\t// in\n    tag_115:\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":5672:5700  _transfer(from, to, tokenId) */\n      tag_109\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":5682:5686  from */\n      dup4\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":5688:5690  to */\n      dup4\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":5692:5699  tokenId */\n      dup4\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":5672:5681  _transfer */\n      tag_119\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":5672:5700  _transfer(from, to, tokenId) */\n      jump\t// in\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":5773:5952  function safeTransferFrom(... */\n    tag_46:\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":5906:5945  safeTransferFrom(from, to, tokenId, \"\") */\n      tag_109\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":5923:5927  from */\n      dup4\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":5929:5931  to */\n      dup4\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":5933:5940  tokenId */\n      dup4\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":5906:5945  safeTransferFrom(from, to, tokenId, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":5906:5922  safeTransferFrom */\n      tag_71\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":5906:5945  safeTransferFrom(from, to, tokenId, \"\") */\n      jump\t// in\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":2740:2959  function ownerOf(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_49:\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":2812:2819  address */\n      0x00\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":7699:7715  _owners[tokenId] */\n      dup2\n      dup2\n      mstore\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":7699:7706  _owners */\n      0x67\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":7699:7715  _owners[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup1\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":2874:2930  require(owner != address(0), \"ERC721: invalid token ID\") */\n      tag_84\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6861:6863   */\n      0x20\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":2874:2930  require(owner != address(0), \"ERC721: invalid token ID\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6843:6864   */\n      mstore\n        /* \"#utility.yul\":6900:6902   */\n      0x18\n        /* \"#utility.yul\":6880:6898   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6873:6903   */\n      mstore\n      shl(0x42, 0x115490cdcc8c4e881a5b9d985b1a59081d1bdad95b881251)\n        /* \"#utility.yul\":6919:6937   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6912:6966   */\n      mstore\n        /* \"#utility.yul\":6983:7001   */\n      0x64\n      add\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":2874:2930  require(owner != address(0), \"ERC721: invalid token ID\") */\n      tag_99\n        /* \"#utility.yul\":6659:7007   */\n      jump\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":2479:2683  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n    tag_54:\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":2551:2558  uint256 */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":2578:2597  owner != address(0) */\n      dup3\n      and\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":2570:2643  require(owner != address(0), \"ERC721: address zero is not a valid owner\") */\n      tag_129\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7214:7216   */\n      0x20\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":2570:2643  require(owner != address(0), \"ERC721: address zero is not a valid owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7196:7217   */\n      mstore\n        /* \"#utility.yul\":7253:7255   */\n      0x29\n        /* \"#utility.yul\":7233:7251   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7226:7256   */\n      mstore\n        /* \"#utility.yul\":7292:7326   */\n      0x4552433732313a2061646472657373207a65726f206973206e6f742061207661\n        /* \"#utility.yul\":7272:7290   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7265:7327   */\n      mstore\n      shl(0xb9, 0x3634b21037bbb732b9)\n        /* \"#utility.yul\":7343:7361   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":7336:7375   */\n      mstore\n        /* \"#utility.yul\":7392:7411   */\n      0x84\n      add\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":2570:2643  require(owner != address(0), \"ERC721: address zero is not a valid owner\") */\n      tag_99\n        /* \"#utility.yul\":7012:7417   */\n      jump\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":2570:2643  require(owner != address(0), \"ERC721: address zero is not a valid owner\") */\n    tag_129:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":2660:2676  _balances[owner] */\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":2660:2669  _balances */\n      0x68\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":2660:2676  _balances[owner] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":2479:2683  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":3183:3285  function symbol() public view virtual override returns (string memory) {... */\n    tag_58:\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":3239:3252  string memory */\n      0x60\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":3271:3278  _symbol */\n      0x66\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":3264:3278  return _symbol */\n      dup1\n      sload\n      tag_87\n      swap1\n      tag_88\n      jump\t// in\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":4846:4999  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_63:\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":4940:4992  _setApprovalForAll(_msgSender(), operator, approved) */\n      tag_139\n        /* \"mlmContracts/contracts-upgradeable@4.8/utils/ContextUpgradeable.sol\":929:939  msg.sender */\n      caller\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":4973:4981  operator */\n      dup4\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":4983:4991  approved */\n      dup4\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":4940:4958  _setApprovalForAll */\n      tag_141\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":4940:4992  _setApprovalForAll(_msgSender(), operator, approved) */\n      jump\t// in\n    tag_139:\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":4846:4999  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":5005:5091  function setIsBounded(bool _flag) public onlyManager{... */\n    tag_67:\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":4023:4030  manager */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x6b))\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":4009:4019  msg.sender */\n      caller\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":4009:4030  msg.sender == manager */\n      eq\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":4001:4058  require(msg.sender == manager, \"Caller is not the owner\") */\n      tag_143\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7624:7626   */\n      0x20\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":4001:4058  require(msg.sender == manager, \"Caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7606:7627   */\n      mstore\n        /* \"#utility.yul\":7663:7665   */\n      0x17\n        /* \"#utility.yul\":7643:7661   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7636:7666   */\n      mstore\n        /* \"#utility.yul\":7702:7727   */\n      0x43616c6c6572206973206e6f7420746865206f776e6572000000000000000000\n        /* \"#utility.yul\":7682:7700   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7675:7728   */\n      mstore\n        /* \"#utility.yul\":7745:7763   */\n      0x64\n      add\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":4001:4058  require(msg.sender == manager, \"Caller is not the owner\") */\n      tag_99\n        /* \"#utility.yul\":7422:7769   */\n      jump\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":4001:4058  require(msg.sender == manager, \"Caller is not the owner\") */\n    tag_143:\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":5067:5076  isBounded */\n      0x6b\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":5067:5084  isBounded = _flag */\n      dup1\n      sload\n      swap2\n      iszero\n      iszero\n      shl(0xa0, 0x01)\n      mul\n      not(shl(0xa0, 0xff))\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":5005:5091  function setIsBounded(bool _flag) public onlyManager{... */\n      jump\t// out\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":6018:6332  function safeTransferFrom(... */\n    tag_71:\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":6186:6227  _isApprovedOrOwner(_msgSender(), tokenId) */\n      tag_148\n        /* \"mlmContracts/contracts-upgradeable@4.8/utils/ContextUpgradeable.sol\":929:939  msg.sender */\n      caller\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":6219:6226  tokenId */\n      dup4\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":6186:6204  _isApprovedOrOwner */\n      tag_114\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":6186:6227  _isApprovedOrOwner(_msgSender(), tokenId) */\n      jump\t// in\n    tag_148:\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":6178:6277  require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: caller is not token owner or approved\") */\n      tag_150\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_99\n      swap1\n      tag_117\n      jump\t// in\n    tag_150:\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":6287:6325  _safeTransfer(from, to, tokenId, data) */\n      tag_152\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":6301:6305  from */\n      dup5\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":6307:6309  to */\n      dup5\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":6311:6318  tokenId */\n      dup5\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":6320:6324  data */\n      dup5\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":6287:6300  _safeTransfer */\n      tag_153\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":6287:6325  _safeTransfer(from, to, tokenId, data) */\n      jump\t// in\n    tag_152:\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":6018:6332  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":3351:3627  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_74:\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":3424:3437  string memory */\n      0x60\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":3449:3472  _requireMinted(tokenId) */\n      tag_155\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":3464:3471  tokenId */\n      dup3\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":3449:3463  _requireMinted */\n      tag_95\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":3449:3472  _requireMinted(tokenId) */\n      jump\t// in\n    tag_155:\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":3483:3504  string memory baseURI */\n      0x00\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":3507:3517  _baseURI() */\n      tag_156\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":3945:3954  return \"\" */\n      0x40\n      dup1\n      mload\n      0x20\n      dup2\n      add\n      swap1\n      swap2\n      mstore\n      0x00\n      dup2\n      mstore\n      swap1\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":3869:3961  function _baseURI() internal view virtual returns (string memory) {... */\n      jump\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":3507:3517  _baseURI() */\n    tag_156:\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":3483:3517  string memory baseURI = _baseURI() */\n      swap1\n      pop\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":3558:3559  0 */\n      0x00\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":3540:3547  baseURI */\n      dup2\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":3534:3555  bytes(baseURI).length */\n      mload\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":3534:3559  bytes(baseURI).length > 0 */\n      gt\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":3534:3620  bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\" */\n      tag_158\n      jumpi\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      jump(tag_159)\n    tag_158:\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":3586:3593  baseURI */\n      dup1\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":3595:3613  tokenId.toString() */\n      tag_160\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":3595:3602  tokenId */\n      dup5\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":3595:3611  tokenId.toString */\n      tag_161\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":3595:3613  tokenId.toString() */\n      jump\t// in\n    tag_160:\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":3569:3614  abi.encodePacked(baseURI, tokenId.toString()) */\n      add(0x20, mload(0x40))\n      tag_162\n      swap3\n      swap2\n      swap1\n      tag_163\n      jump\t// in\n    tag_162:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":3534:3620  bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\" */\n    tag_159:\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":3527:3620  return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\" */\n      swap4\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":3351:3627  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":14301:14434  function _requireMinted(uint256 tokenId) internal view virtual {... */\n    tag_95:\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":8090:8094  bool */\n      0x00\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":7699:7715  _owners[tokenId] */\n      dup2\n      dup2\n      mstore\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":7699:7706  _owners */\n      0x67\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":7699:7715  _owners[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":14374:14427  require(_exists(tokenId), \"ERC721: invalid token ID\") */\n      tag_169\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6861:6863   */\n      0x20\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":14374:14427  require(_exists(tokenId), \"ERC721: invalid token ID\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6843:6864   */\n      mstore\n        /* \"#utility.yul\":6900:6902   */\n      0x18\n        /* \"#utility.yul\":6880:6898   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6873:6903   */\n      mstore\n      shl(0x42, 0x115490cdcc8c4e881a5b9d985b1a59081d1bdad95b881251)\n        /* \"#utility.yul\":6919:6937   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6912:6966   */\n      mstore\n        /* \"#utility.yul\":6983:7001   */\n      0x64\n      add\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":14374:14427  require(_exists(tokenId), \"ERC721: invalid token ID\") */\n      tag_99\n        /* \"#utility.yul\":6659:7007   */\n      jump\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":14374:14427  require(_exists(tokenId), \"ERC721: invalid token ID\") */\n    tag_169:\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":14301:14434  function _requireMinted(uint256 tokenId) internal view virtual {... */\n      pop\n      jump\t// out\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":13592:13774  function _approve(address to, uint256 tokenId) internal virtual {... */\n    tag_110:\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":13666:13690  _tokenApprovals[tokenId] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":13666:13681  _tokenApprovals */\n      0x69\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":13666:13690  _tokenApprovals[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":13666:13695  _tokenApprovals[tokenId] = to */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup5\n      and\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":13666:13690  _tokenApprovals[tokenId] */\n      dup2\n      swap1\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":13719:13753  ERC721Upgradeable.ownerOf(tokenId) */\n      tag_173\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":13666:13690  _tokenApprovals[tokenId] */\n      dup3\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":13719:13744  ERC721Upgradeable.ownerOf */\n      tag_49\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":13719:13753  ERC721Upgradeable.ownerOf(tokenId) */\n      jump\t// in\n    tag_173:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":13710:13767  Approval(ERC721Upgradeable.ownerOf(tokenId), to, tokenId) */\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":13592:13774  function _approve(address to, uint256 tokenId) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":8309:8581  function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n    tag_114:\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":8402:8406  bool */\n      0x00\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":8418:8431  address owner */\n      dup1\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":8434:8468  ERC721Upgradeable.ownerOf(tokenId) */\n      tag_175\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":8460:8467  tokenId */\n      dup4\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":8434:8459  ERC721Upgradeable.ownerOf */\n      tag_49\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":8434:8468  ERC721Upgradeable.ownerOf(tokenId) */\n      jump\t// in\n    tag_175:\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":8418:8468  address owner = ERC721Upgradeable.ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":8497:8502  owner */\n      dup1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":8486:8502  spender == owner */\n      and\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":8486:8493  spender */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":8486:8502  spender == owner */\n      and\n      eq\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":8486:8538  spender == owner || isApprovedForAll(owner, spender) */\n      dup1\n      tag_177\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":5277:5302  _operatorApprovals[owner] */\n      dup1\n      dup3\n      and\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":5254:5258  bool */\n      0x00\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":5277:5302  _operatorApprovals[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":5277:5295  _operatorApprovals */\n      0x6a\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":5277:5302  _operatorApprovals[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":5277:5312  _operatorApprovals[owner][operator] */\n      swap4\n      dup9\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n      sload\n      0xff\n      and\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":8506:8538  isApprovedForAll(owner, spender) */\n    tag_177:\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":8486:8573  spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender */\n      dup1\n      tag_178\n      jumpi\n      pop\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":8566:8573  spender */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":8542:8573  getApproved(tokenId) == spender */\n      and\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":8542:8562  getApproved(tokenId) */\n      tag_179\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":8554:8561  tokenId */\n      dup5\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":8542:8553  getApproved */\n      tag_33\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":8542:8562  getApproved(tokenId) */\n      jump\t// in\n    tag_179:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":8542:8573  getApproved(tokenId) == spender */\n      and\n      eq\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":8486:8573  spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender */\n    tag_178:\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":8478:8574  return (spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender) */\n      swap5\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":8309:8581  function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":12225:13480  function _transfer(... */\n    tag_119:\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":12390:12394  from */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":12352:12394  ERC721Upgradeable.ownerOf(tokenId) == from */\n      and\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":12352:12386  ERC721Upgradeable.ownerOf(tokenId) */\n      tag_181\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":12378:12385  tokenId */\n      dup3\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":12352:12377  ERC721Upgradeable.ownerOf */\n      tag_49\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":12352:12386  ERC721Upgradeable.ownerOf(tokenId) */\n      jump\t// in\n    tag_181:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":12352:12394  ERC721Upgradeable.ownerOf(tokenId) == from */\n      and\n      eq\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":12344:12436  require(ERC721Upgradeable.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\") */\n      tag_182\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_99\n      swap1\n      tag_184\n      jump\t// in\n    tag_182:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":12454:12470  to != address(0) */\n      dup3\n      and\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":12446:12511  require(to != address(0), \"ERC721: transfer to the zero address\") */\n      tag_185\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8857:8859   */\n      0x20\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":12446:12511  require(to != address(0), \"ERC721: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8839:8860   */\n      mstore\n        /* \"#utility.yul\":8896:8898   */\n      0x24\n        /* \"#utility.yul\":8876:8894   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":8869:8899   */\n      mstore\n        /* \"#utility.yul\":8935:8969   */\n      0x4552433732313a207472616e7366657220746f20746865207a65726f20616464\n        /* \"#utility.yul\":8915:8933   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8908:8970   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":8986:9004   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8979:9013   */\n      mstore\n        /* \"#utility.yul\":9030:9049   */\n      0x84\n      add\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":12446:12511  require(to != address(0), \"ERC721: transfer to the zero address\") */\n      tag_99\n        /* \"#utility.yul\":8655:9055   */\n      jump\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":12446:12511  require(to != address(0), \"ERC721: transfer to the zero address\") */\n    tag_185:\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":12702:12706  from */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":12664:12706  ERC721Upgradeable.ownerOf(tokenId) == from */\n      and\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":12664:12698  ERC721Upgradeable.ownerOf(tokenId) */\n      tag_190\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":12690:12697  tokenId */\n      dup3\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":12664:12689  ERC721Upgradeable.ownerOf */\n      tag_49\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":12664:12698  ERC721Upgradeable.ownerOf(tokenId) */\n      jump\t// in\n    tag_190:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":12664:12706  ERC721Upgradeable.ownerOf(tokenId) == from */\n      and\n      eq\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":12656:12748  require(ERC721Upgradeable.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\") */\n      tag_191\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_99\n      swap1\n      tag_184\n      jump\t// in\n    tag_191:\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":12817:12841  _tokenApprovals[tokenId] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":12817:12832  _tokenApprovals */\n      0x69\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":12817:12841  _tokenApprovals[tokenId] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":12810:12841  delete _tokenApprovals[tokenId] */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap1\n      dup2\n      and\n      swap1\n      swap2\n      sstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":13285:13300  _balances[from] */\n      dup8\n      dup2\n      and\n      dup1\n      dup7\n      mstore\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":13285:13294  _balances */\n      0x68\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":13285:13300  _balances[from] */\n      dup6\n      mstore\n      dup4\n      dup7\n      keccak256\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":13285:13305  _balances[from] -= 1 */\n      dup1\n      sload\n      not(0x00)\n      add\n      swap1\n      sstore\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":13319:13332  _balances[to] */\n      swap1\n      dup8\n      and\n      dup1\n      dup7\n      mstore\n      dup4\n      dup7\n      keccak256\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":13319:13337  _balances[to] += 1 */\n      dup1\n      sload\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":12810:12841  delete _tokenApprovals[tokenId] */\n      0x01\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":13319:13337  _balances[to] += 1 */\n      add\n      swap1\n      sstore\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":13357:13373  _owners[tokenId] */\n      dup7\n      dup7\n      mstore\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":13357:13364  _owners */\n      0x67\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":13357:13373  _owners[tokenId] */\n      swap1\n      swap5\n      mstore\n      dup3\n      dup6\n      keccak256\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":13357:13378  _owners[tokenId] = to */\n      dup1\n      sload\n      swap1\n      swap3\n      and\n      dup5\n      or\n      swap1\n      swap2\n      sstore\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":13394:13421  Transfer(from, to, tokenId) */\n      swap1\n      mload\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":12833:12840  tokenId */\n      dup5\n      swap4\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":13394:13421  Transfer(from, to, tokenId) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap2\n      log4\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":4204:4551  {... */\n      pop\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":4134:4551  function approve(address to, uint256 tokenId) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":13910:14217  function _setApprovalForAll(... */\n    tag_141:\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":14060:14068  operator */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":14051:14068  owner != operator */\n      and\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":14051:14056  owner */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":14051:14068  owner != operator */\n      and\n      sub\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":14043:14098  require(owner != operator, \"ERC721: approve to caller\") */\n      tag_197\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9262:9264   */\n      0x20\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":14043:14098  require(owner != operator, \"ERC721: approve to caller\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9244:9265   */\n      mstore\n        /* \"#utility.yul\":9301:9303   */\n      0x19\n        /* \"#utility.yul\":9281:9299   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9274:9304   */\n      mstore\n        /* \"#utility.yul\":9340:9367   */\n      0x4552433732313a20617070726f766520746f2063616c6c657200000000000000\n        /* \"#utility.yul\":9320:9338   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9313:9368   */\n      mstore\n        /* \"#utility.yul\":9385:9403   */\n      0x64\n      add\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":14043:14098  require(owner != operator, \"ERC721: approve to caller\") */\n      tag_99\n        /* \"#utility.yul\":9060:9409   */\n      jump\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":14043:14098  require(owner != operator, \"ERC721: approve to caller\") */\n    tag_197:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":14108:14133  _operatorApprovals[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":14108:14126  _operatorApprovals */\n      0x6a\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":14108:14133  _operatorApprovals[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":14108:14143  _operatorApprovals[owner][operator] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":14108:14154  _operatorApprovals[owner][operator] = approved */\n      dup1\n      sload\n      not(0xff)\n      and\n      dup7\n      iszero\n      iszero\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":14169:14210  ApprovalForAll(owner, operator, approved) */\n      swap2\n      mload\n        /* \"#utility.yul\":540:581   */\n      swap2\n      dup3\n      mstore\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":14169:14210  ApprovalForAll(owner, operator, approved) */\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n      swap2\n        /* \"#utility.yul\":513:531   */\n      add\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":14169:14210  ApprovalForAll(owner, operator, approved) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":13910:14217  function _setApprovalForAll(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":7193:7498  function _safeTransfer(... */\n    tag_153:\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":7343:7371  _transfer(from, to, tokenId) */\n      tag_202\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":7353:7357  from */\n      dup5\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":7359:7361  to */\n      dup5\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":7363:7370  tokenId */\n      dup5\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":7343:7352  _transfer */\n      tag_119\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":7343:7371  _transfer(from, to, tokenId) */\n      jump\t// in\n    tag_202:\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":7389:7436  _checkOnERC721Received(from, to, tokenId, data) */\n      tag_203\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":7412:7416  from */\n      dup5\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":7418:7420  to */\n      dup5\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":7422:7429  tokenId */\n      dup5\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":7431:7435  data */\n      dup5\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":7389:7411  _checkOnERC721Received */\n      tag_204\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":7389:7436  _checkOnERC721Received(from, to, tokenId, data) */\n      jump\t// in\n    tag_203:\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":7381:7491  require(_checkOnERC721Received(from, to, tokenId, data), \"ERC721: transfer to non ERC721Receiver implementer\") */\n      tag_152\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_99\n      swap1\n      tag_207\n      jump\t// in\n        /* \"mlmContracts/contracts-upgradeable@4.8/utils/StringsUpgradeable.sol\":437:1144  function toString(uint256 value) internal pure returns (string memory) {... */\n    tag_161:\n        /* \"mlmContracts/contracts-upgradeable@4.8/utils/StringsUpgradeable.sol\":493:506  string memory */\n      0x60\n        /* \"mlmContracts/contracts-upgradeable@4.8/utils/StringsUpgradeable.sol\":542:556  uint256 length */\n      0x00\n        /* \"mlmContracts/contracts-upgradeable@4.8/utils/StringsUpgradeable.sol\":559:587  MathUpgradeable.log10(value) */\n      tag_210\n        /* \"mlmContracts/contracts-upgradeable@4.8/utils/StringsUpgradeable.sol\":581:586  value */\n      dup4\n        /* \"mlmContracts/contracts-upgradeable@4.8/utils/StringsUpgradeable.sol\":559:580  MathUpgradeable.log10 */\n      tag_211\n        /* \"mlmContracts/contracts-upgradeable@4.8/utils/StringsUpgradeable.sol\":559:587  MathUpgradeable.log10(value) */\n      jump\t// in\n    tag_210:\n        /* \"mlmContracts/contracts-upgradeable@4.8/utils/StringsUpgradeable.sol\":590:591  1 */\n      0x01\n        /* \"mlmContracts/contracts-upgradeable@4.8/utils/StringsUpgradeable.sol\":559:591  MathUpgradeable.log10(value) + 1 */\n      add\n        /* \"mlmContracts/contracts-upgradeable@4.8/utils/StringsUpgradeable.sol\":542:591  uint256 length = MathUpgradeable.log10(value) + 1 */\n      swap1\n      pop\n        /* \"mlmContracts/contracts-upgradeable@4.8/utils/StringsUpgradeable.sol\":605:625  string memory buffer */\n      0x00\n        /* \"mlmContracts/contracts-upgradeable@4.8/utils/StringsUpgradeable.sol\":639:645  length */\n      dup2\n        /* \"mlmContracts/contracts-upgradeable@4.8/utils/StringsUpgradeable.sol\":628:646  new string(length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_213\n      jumpi\n      tag_213\n      tag_214\n      jump\t// in\n    tag_213:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_215\n      jumpi\n      0x20\n      dup3\n      add\n      dup2\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_215:\n      pop\n        /* \"mlmContracts/contracts-upgradeable@4.8/utils/StringsUpgradeable.sol\":605:646  string memory buffer = new string(length) */\n      swap1\n      pop\n        /* \"mlmContracts/contracts-upgradeable@4.8/utils/StringsUpgradeable.sol\":766:794  add(buffer, add(32, length)) */\n      dup2\n      dup2\n      add\n        /* \"mlmContracts/contracts-upgradeable@4.8/utils/StringsUpgradeable.sol\":782:784  32 */\n      0x20\n        /* \"mlmContracts/contracts-upgradeable@4.8/utils/StringsUpgradeable.sol\":766:794  add(buffer, add(32, length)) */\n      add\n        /* \"mlmContracts/contracts-upgradeable@4.8/utils/StringsUpgradeable.sol\":821:1101  while (true) {... */\n    tag_216:\n      not(0x00)\n        /* \"mlmContracts/contracts-upgradeable@4.8/utils/StringsUpgradeable.sol\":852:857  ptr-- */\n      add\n      shl(0x81, 0x181899199a1a9b1b9c1cb0b131b232b3)\n        /* \"mlmContracts/contracts-upgradeable@4.8/utils/StringsUpgradeable.sol\":986:988  10 */\n      0x0a\n        /* \"mlmContracts/contracts-upgradeable@4.8/utils/StringsUpgradeable.sol\":975:989  mod(value, 10) */\n      dup7\n      mod\n        /* \"mlmContracts/contracts-upgradeable@4.8/utils/StringsUpgradeable.sol\":970:1000  byte(mod(value, 10), _SYMBOLS) */\n      byte\n        /* \"mlmContracts/contracts-upgradeable@4.8/utils/StringsUpgradeable.sol\":852:857  ptr-- */\n      dup2\n        /* \"mlmContracts/contracts-upgradeable@4.8/utils/StringsUpgradeable.sol\":957:1001  mstore8(ptr, byte(mod(value, 10), _SYMBOLS)) */\n      mstore8\n        /* \"mlmContracts/contracts-upgradeable@4.8/utils/StringsUpgradeable.sol\":1045:1047  10 */\n      0x0a\n        /* \"mlmContracts/contracts-upgradeable@4.8/utils/StringsUpgradeable.sol\":1036:1047  value /= 10 */\n      dup6\n      div\n      swap5\n      pop\n        /* \"mlmContracts/contracts-upgradeable@4.8/utils/StringsUpgradeable.sol\":1065:1086  if (value == 0) break */\n      dup5\n        /* \"mlmContracts/contracts-upgradeable@4.8/utils/StringsUpgradeable.sol\":821:1101  while (true) {... */\n      tag_216\n        /* \"mlmContracts/contracts-upgradeable@4.8/utils/StringsUpgradeable.sol\":1065:1086  if (value == 0) break */\n      jumpi\n      pop\n        /* \"mlmContracts/contracts-upgradeable@4.8/utils/StringsUpgradeable.sol\":1121:1127  buffer */\n      swap4\n        /* \"mlmContracts/contracts-upgradeable@4.8/utils/StringsUpgradeable.sol\":437:1144  function toString(uint256 value) internal pure returns (string memory) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":14986:15839  function _checkOnERC721Received(... */\n    tag_204:\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":15135:15139  bool */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":15155:15168  to.isContract */\n      dup5\n      and\n        /* \"mlmContracts/contracts-upgradeable@4.8/utils/AddressUpgradeable.sol\":1476:1495  account.code.length */\n      extcodesize\n        /* \"mlmContracts/contracts-upgradeable@4.8/utils/AddressUpgradeable.sol\":1476:1499  account.code.length > 0 */\n      iszero\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":15151:15833  if (to.isContract()) {... */\n      tag_229\n      jumpi\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":15190:15272  IERC721ReceiverUpgradeable(to).onERC721Received(_msgSender(), from, tokenId, data) */\n      mload(0x40)\n      shl(0xe1, 0x0a85bd01)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":15190:15237  IERC721ReceiverUpgradeable(to).onERC721Received */\n      dup6\n      and\n      swap1\n      0x150b7a02\n      swap1\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":15190:15272  IERC721ReceiverUpgradeable(to).onERC721Received(_msgSender(), from, tokenId, data) */\n      tag_231\n      swap1\n        /* \"mlmContracts/contracts-upgradeable@4.8/utils/ContextUpgradeable.sol\":929:939  msg.sender */\n      caller\n      swap1\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":15252:15256  from */\n      dup10\n      swap1\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":15258:15265  tokenId */\n      dup9\n      swap1\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":15267:15271  data */\n      dup9\n      swap1\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":15190:15272  IERC721ReceiverUpgradeable(to).onERC721Received(_msgSender(), from, tokenId, data) */\n      0x04\n      add\n      tag_232\n      jump\t// in\n    tag_231:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_233\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_234\n      swap2\n      dup2\n      add\n      swap1\n      tag_235\n      jump\t// in\n    tag_234:\n      0x01\n    tag_233:\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":15186:15781  try IERC721ReceiverUpgradeable(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {... */\n      tag_236\n      jumpi\n      returndatasize\n      dup1\n      dup1\n      iszero\n      tag_241\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_240)\n    tag_241:\n      0x60\n      swap2\n      pop\n    tag_240:\n      pop\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":15450:15456  reason */\n      dup1\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":15450:15463  reason.length */\n      mload\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":15467:15468  0 */\n      0x00\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":15450:15468  reason.length == 0 */\n      sub\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":15446:15767  if (reason.length == 0) {... */\n      tag_242\n      jumpi\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":15492:15552  revert(\"ERC721: transfer to non ERC721Receiver implementer\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_99\n      swap1\n      tag_207\n      jump\t// in\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":15446:15767  if (reason.length == 0) {... */\n    tag_242:\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":15719:15725  reason */\n      dup1\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":15713:15726  mload(reason) */\n      mload\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":15704:15710  reason */\n      dup2\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":15700:15702  32 */\n      0x20\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":15696:15711  add(32, reason) */\n      add\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":15689:15727  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":15186:15781  try IERC721ReceiverUpgradeable(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {... */\n    tag_236:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":15322:15384  retval == IERC721ReceiverUpgradeable.onERC721Received.selector */\n      and\n      shl(0xe1, 0x0a85bd01)\n      eq\n      swap1\n      pop\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":15315:15384  return retval == IERC721ReceiverUpgradeable.onERC721Received.selector */\n      jump(tag_178)\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":15151:15833  if (to.isContract()) {... */\n    tag_229:\n      pop\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":15818:15822  true */\n      0x01\n        /* \"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":14986:15839  function _checkOnERC721Received(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"mlmContracts/contracts-upgradeable@4.8/utils/math/MathUpgradeable.sol\":9900:10790  function log10(uint256 value) internal pure returns (uint256) {... */\n    tag_211:\n        /* \"mlmContracts/contracts-upgradeable@4.8/utils/math/MathUpgradeable.sol\":9953:9960  uint256 */\n      0x00\n      dup1\n      shl(0x40, 0x184f03e93ff9f4daa797ed6e38ed64bf6a1f01)\n        /* \"mlmContracts/contracts-upgradeable@4.8/utils/math/MathUpgradeable.sol\":10028:10043  value >= 10**64 */\n      dup4\n      lt\n        /* \"mlmContracts/contracts-upgradeable@4.8/utils/math/MathUpgradeable.sol\":10024:10123  if (value >= 10**64) {... */\n      tag_248\n      jumpi\n      shl(0x40, 0x184f03e93ff9f4daa797ed6e38ed64bf6a1f01)\n        /* \"mlmContracts/contracts-upgradeable@4.8/utils/math/MathUpgradeable.sol\":10063:10078  value /= 10**64 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"mlmContracts/contracts-upgradeable@4.8/utils/math/MathUpgradeable.sol\":10106:10108  64 */\n      0x40\n        /* \"mlmContracts/contracts-upgradeable@4.8/utils/math/MathUpgradeable.sol\":10096:10108  result += 64 */\n      add\n        /* \"mlmContracts/contracts-upgradeable@4.8/utils/math/MathUpgradeable.sol\":10024:10123  if (value >= 10**64) {... */\n    tag_248:\n        /* \"mlmContracts/contracts-upgradeable@4.8/utils/math/MathUpgradeable.sol\":10149:10155  10**32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"mlmContracts/contracts-upgradeable@4.8/utils/math/MathUpgradeable.sol\":10140:10145  value */\n      dup4\n        /* \"mlmContracts/contracts-upgradeable@4.8/utils/math/MathUpgradeable.sol\":10140:10155  value >= 10**32 */\n      lt\n        /* \"mlmContracts/contracts-upgradeable@4.8/utils/math/MathUpgradeable.sol\":10136:10235  if (value >= 10**32) {... */\n      tag_251\n      jumpi\n        /* \"mlmContracts/contracts-upgradeable@4.8/utils/math/MathUpgradeable.sol\":10184:10190  10**32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"mlmContracts/contracts-upgradeable@4.8/utils/math/MathUpgradeable.sol\":10175:10190  value /= 10**32 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"mlmContracts/contracts-upgradeable@4.8/utils/math/MathUpgradeable.sol\":10218:10220  32 */\n      0x20\n        /* \"mlmContracts/contracts-upgradeable@4.8/utils/math/MathUpgradeable.sol\":10208:10220  result += 32 */\n      add\n        /* \"mlmContracts/contracts-upgradeable@4.8/utils/math/MathUpgradeable.sol\":10136:10235  if (value >= 10**32) {... */\n    tag_251:\n        /* \"mlmContracts/contracts-upgradeable@4.8/utils/math/MathUpgradeable.sol\":10261:10267  10**16 */\n      0x2386f26fc10000\n        /* \"mlmContracts/contracts-upgradeable@4.8/utils/math/MathUpgradeable.sol\":10252:10257  value */\n      dup4\n        /* \"mlmContracts/contracts-upgradeable@4.8/utils/math/MathUpgradeable.sol\":10252:10267  value >= 10**16 */\n      lt\n        /* \"mlmContracts/contracts-upgradeable@4.8/utils/math/MathUpgradeable.sol\":10248:10347  if (value >= 10**16) {... */\n      tag_254\n      jumpi\n        /* \"mlmContracts/contracts-upgradeable@4.8/utils/math/MathUpgradeable.sol\":10296:10302  10**16 */\n      0x2386f26fc10000\n        /* \"mlmContracts/contracts-upgradeable@4.8/utils/math/MathUpgradeable.sol\":10287:10302  value /= 10**16 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"mlmContracts/contracts-upgradeable@4.8/utils/math/MathUpgradeable.sol\":10330:10332  16 */\n      0x10\n        /* \"mlmContracts/contracts-upgradeable@4.8/utils/math/MathUpgradeable.sol\":10320:10332  result += 16 */\n      add\n        /* \"mlmContracts/contracts-upgradeable@4.8/utils/math/MathUpgradeable.sol\":10248:10347  if (value >= 10**16) {... */\n    tag_254:\n        /* \"mlmContracts/contracts-upgradeable@4.8/utils/math/MathUpgradeable.sol\":10373:10378  10**8 */\n      0x05f5e100\n        /* \"mlmContracts/contracts-upgradeable@4.8/utils/math/MathUpgradeable.sol\":10364:10369  value */\n      dup4\n        /* \"mlmContracts/contracts-upgradeable@4.8/utils/math/MathUpgradeable.sol\":10364:10378  value >= 10**8 */\n      lt\n        /* \"mlmContracts/contracts-upgradeable@4.8/utils/math/MathUpgradeable.sol\":10360:10456  if (value >= 10**8) {... */\n      tag_257\n      jumpi\n        /* \"mlmContracts/contracts-upgradeable@4.8/utils/math/MathUpgradeable.sol\":10407:10412  10**8 */\n      0x05f5e100\n        /* \"mlmContracts/contracts-upgradeable@4.8/utils/math/MathUpgradeable.sol\":10398:10412  value /= 10**8 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"mlmContracts/contracts-upgradeable@4.8/utils/math/MathUpgradeable.sol\":10440:10441  8 */\n      0x08\n        /* \"mlmContracts/contracts-upgradeable@4.8/utils/math/MathUpgradeable.sol\":10430:10441  result += 8 */\n      add\n        /* \"mlmContracts/contracts-upgradeable@4.8/utils/math/MathUpgradeable.sol\":10360:10456  if (value >= 10**8) {... */\n    tag_257:\n        /* \"mlmContracts/contracts-upgradeable@4.8/utils/math/MathUpgradeable.sol\":10482:10487  10**4 */\n      0x2710\n        /* \"mlmContracts/contracts-upgradeable@4.8/utils/math/MathUpgradeable.sol\":10473:10478  value */\n      dup4\n        /* \"mlmContracts/contracts-upgradeable@4.8/utils/math/MathUpgradeable.sol\":10473:10487  value >= 10**4 */\n      lt\n        /* \"mlmContracts/contracts-upgradeable@4.8/utils/math/MathUpgradeable.sol\":10469:10565  if (value >= 10**4) {... */\n      tag_260\n      jumpi\n        /* \"mlmContracts/contracts-upgradeable@4.8/utils/math/MathUpgradeable.sol\":10516:10521  10**4 */\n      0x2710\n        /* \"mlmContracts/contracts-upgradeable@4.8/utils/math/MathUpgradeable.sol\":10507:10521  value /= 10**4 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"mlmContracts/contracts-upgradeable@4.8/utils/math/MathUpgradeable.sol\":10549:10550  4 */\n      0x04\n        /* \"mlmContracts/contracts-upgradeable@4.8/utils/math/MathUpgradeable.sol\":10539:10550  result += 4 */\n      add\n        /* \"mlmContracts/contracts-upgradeable@4.8/utils/math/MathUpgradeable.sol\":10469:10565  if (value >= 10**4) {... */\n    tag_260:\n        /* \"mlmContracts/contracts-upgradeable@4.8/utils/math/MathUpgradeable.sol\":10591:10596  10**2 */\n      0x64\n        /* \"mlmContracts/contracts-upgradeable@4.8/utils/math/MathUpgradeable.sol\":10582:10587  value */\n      dup4\n        /* \"mlmContracts/contracts-upgradeable@4.8/utils/math/MathUpgradeable.sol\":10582:10596  value >= 10**2 */\n      lt\n        /* \"mlmContracts/contracts-upgradeable@4.8/utils/math/MathUpgradeable.sol\":10578:10674  if (value >= 10**2) {... */\n      tag_263\n      jumpi\n        /* \"mlmContracts/contracts-upgradeable@4.8/utils/math/MathUpgradeable.sol\":10625:10630  10**2 */\n      0x64\n        /* \"mlmContracts/contracts-upgradeable@4.8/utils/math/MathUpgradeable.sol\":10616:10630  value /= 10**2 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"mlmContracts/contracts-upgradeable@4.8/utils/math/MathUpgradeable.sol\":10658:10659  2 */\n      0x02\n        /* \"mlmContracts/contracts-upgradeable@4.8/utils/math/MathUpgradeable.sol\":10648:10659  result += 2 */\n      add\n        /* \"mlmContracts/contracts-upgradeable@4.8/utils/math/MathUpgradeable.sol\":10578:10674  if (value >= 10**2) {... */\n    tag_263:\n        /* \"mlmContracts/contracts-upgradeable@4.8/utils/math/MathUpgradeable.sol\":10700:10705  10**1 */\n      0x0a\n        /* \"mlmContracts/contracts-upgradeable@4.8/utils/math/MathUpgradeable.sol\":10691:10696  value */\n      dup4\n        /* \"mlmContracts/contracts-upgradeable@4.8/utils/math/MathUpgradeable.sol\":10691:10705  value >= 10**1 */\n      lt\n        /* \"mlmContracts/contracts-upgradeable@4.8/utils/math/MathUpgradeable.sol\":10687:10751  if (value >= 10**1) {... */\n      tag_84\n      jumpi\n        /* \"mlmContracts/contracts-upgradeable@4.8/utils/math/MathUpgradeable.sol\":10735:10736  1 */\n      0x01\n        /* \"mlmContracts/contracts-upgradeable@4.8/utils/math/MathUpgradeable.sol\":10725:10736  result += 1 */\n      add\n        /* \"mlmContracts/contracts-upgradeable@4.8/utils/math/MathUpgradeable.sol\":10777:10783  result */\n      swap3\n        /* \"mlmContracts/contracts-upgradeable@4.8/utils/math/MathUpgradeable.sol\":9900:10790  function log10(uint256 value) internal pure returns (uint256) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:145   */\n    tag_268:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":88:120   */\n      dup2\n      and\n        /* \"#utility.yul\":78:121   */\n      dup2\n      eq\n        /* \"#utility.yul\":68:139   */\n      tag_169\n      jumpi\n        /* \"#utility.yul\":135:136   */\n      0x00\n        /* \"#utility.yul\":132:133   */\n      dup1\n        /* \"#utility.yul\":125:137   */\n      revert\n        /* \"#utility.yul\":150:395   */\n    tag_22:\n        /* \"#utility.yul\":208:214   */\n      0x00\n        /* \"#utility.yul\":261:263   */\n      0x20\n        /* \"#utility.yul\":249:258   */\n      dup3\n        /* \"#utility.yul\":240:247   */\n      dup5\n        /* \"#utility.yul\":236:259   */\n      sub\n        /* \"#utility.yul\":232:264   */\n      slt\n        /* \"#utility.yul\":229:281   */\n      iszero\n      tag_277\n      jumpi\n        /* \"#utility.yul\":277:278   */\n      0x00\n        /* \"#utility.yul\":274:275   */\n      dup1\n        /* \"#utility.yul\":267:279   */\n      revert\n        /* \"#utility.yul\":229:281   */\n    tag_277:\n        /* \"#utility.yul\":316:325   */\n      dup2\n        /* \"#utility.yul\":303:326   */\n      calldataload\n        /* \"#utility.yul\":335:365   */\n      tag_159\n        /* \"#utility.yul\":359:364   */\n      dup2\n        /* \"#utility.yul\":335:365   */\n      tag_268\n      jump\t// in\n        /* \"#utility.yul\":592:850   */\n    tag_269:\n        /* \"#utility.yul\":664:665   */\n      0x00\n        /* \"#utility.yul\":674:787   */\n    tag_281:\n        /* \"#utility.yul\":688:694   */\n      dup4\n        /* \"#utility.yul\":685:686   */\n      dup2\n        /* \"#utility.yul\":682:695   */\n      lt\n        /* \"#utility.yul\":674:787   */\n      iszero\n      tag_283\n      jumpi\n        /* \"#utility.yul\":764:775   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":758:776   */\n      mload\n        /* \"#utility.yul\":745:756   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":738:777   */\n      mstore\n        /* \"#utility.yul\":710:712   */\n      0x20\n        /* \"#utility.yul\":703:713   */\n      add\n        /* \"#utility.yul\":674:787   */\n      jump(tag_281)\n    tag_283:\n        /* \"#utility.yul\":805:811   */\n      dup4\n        /* \"#utility.yul\":802:803   */\n      dup2\n        /* \"#utility.yul\":799:812   */\n      gt\n        /* \"#utility.yul\":796:844   */\n      iszero\n      tag_152\n      jumpi\n      pop\n      pop\n        /* \"#utility.yul\":840:841   */\n      0x00\n        /* \"#utility.yul\":822:838   */\n      swap2\n      add\n        /* \"#utility.yul\":815:842   */\n      mstore\n        /* \"#utility.yul\":592:850   */\n      jump\t// out\n        /* \"#utility.yul\":855:1113   */\n    tag_270:\n        /* \"#utility.yul\":897:900   */\n      0x00\n        /* \"#utility.yul\":935:940   */\n      dup2\n        /* \"#utility.yul\":929:941   */\n      mload\n        /* \"#utility.yul\":962:968   */\n      dup1\n        /* \"#utility.yul\":957:960   */\n      dup5\n        /* \"#utility.yul\":950:969   */\n      mstore\n        /* \"#utility.yul\":978:1041   */\n      tag_286\n        /* \"#utility.yul\":1034:1040   */\n      dup2\n        /* \"#utility.yul\":1027:1031   */\n      0x20\n        /* \"#utility.yul\":1022:1025   */\n      dup7\n        /* \"#utility.yul\":1018:1032   */\n      add\n        /* \"#utility.yul\":1011:1015   */\n      0x20\n        /* \"#utility.yul\":1004:1009   */\n      dup7\n        /* \"#utility.yul\":1000:1016   */\n      add\n        /* \"#utility.yul\":978:1041   */\n      tag_269\n      jump\t// in\n    tag_286:\n        /* \"#utility.yul\":1095:1097   */\n      0x1f\n        /* \"#utility.yul\":1074:1089   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":1070:1099   */\n      and\n        /* \"#utility.yul\":1061:1100   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":1102:1106   */\n      0x20\n        /* \"#utility.yul\":1057:1107   */\n      add\n      swap3\n        /* \"#utility.yul\":855:1113   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1118:1338   */\n    tag_29:\n        /* \"#utility.yul\":1267:1269   */\n      0x20\n        /* \"#utility.yul\":1256:1265   */\n      dup2\n        /* \"#utility.yul\":1249:1270   */\n      mstore\n        /* \"#utility.yul\":1230:1234   */\n      0x00\n        /* \"#utility.yul\":1287:1332   */\n      tag_159\n        /* \"#utility.yul\":1328:1330   */\n      0x20\n        /* \"#utility.yul\":1317:1326   */\n      dup4\n        /* \"#utility.yul\":1313:1331   */\n      add\n        /* \"#utility.yul\":1305:1311   */\n      dup5\n        /* \"#utility.yul\":1287:1332   */\n      tag_270\n      jump\t// in\n        /* \"#utility.yul\":1343:1523   */\n    tag_32:\n        /* \"#utility.yul\":1402:1408   */\n      0x00\n        /* \"#utility.yul\":1455:1457   */\n      0x20\n        /* \"#utility.yul\":1443:1452   */\n      dup3\n        /* \"#utility.yul\":1434:1441   */\n      dup5\n        /* \"#utility.yul\":1430:1453   */\n      sub\n        /* \"#utility.yul\":1426:1458   */\n      slt\n        /* \"#utility.yul\":1423:1475   */\n      iszero\n      tag_290\n      jumpi\n        /* \"#utility.yul\":1471:1472   */\n      0x00\n        /* \"#utility.yul\":1468:1469   */\n      dup1\n        /* \"#utility.yul\":1461:1473   */\n      revert\n        /* \"#utility.yul\":1423:1475   */\n    tag_290:\n      pop\n        /* \"#utility.yul\":1494:1517   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1343:1523   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1736:1909   */\n    tag_271:\n        /* \"#utility.yul\":1804:1824   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1853:1884   */\n      dup2\n      and\n        /* \"#utility.yul\":1843:1885   */\n      dup2\n      eq\n        /* \"#utility.yul\":1833:1903   */\n      tag_293\n      jumpi\n        /* \"#utility.yul\":1899:1900   */\n      0x00\n        /* \"#utility.yul\":1896:1897   */\n      dup1\n        /* \"#utility.yul\":1889:1901   */\n      revert\n        /* \"#utility.yul\":1833:1903   */\n    tag_293:\n        /* \"#utility.yul\":1736:1909   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1914:2168   */\n    tag_38:\n        /* \"#utility.yul\":1982:1988   */\n      0x00\n        /* \"#utility.yul\":1990:1996   */\n      dup1\n        /* \"#utility.yul\":2043:2045   */\n      0x40\n        /* \"#utility.yul\":2031:2040   */\n      dup4\n        /* \"#utility.yul\":2022:2029   */\n      dup6\n        /* \"#utility.yul\":2018:2041   */\n      sub\n        /* \"#utility.yul\":2014:2046   */\n      slt\n        /* \"#utility.yul\":2011:2063   */\n      iszero\n      tag_295\n      jumpi\n        /* \"#utility.yul\":2059:2060   */\n      0x00\n        /* \"#utility.yul\":2056:2057   */\n      dup1\n        /* \"#utility.yul\":2049:2061   */\n      revert\n        /* \"#utility.yul\":2011:2063   */\n    tag_295:\n        /* \"#utility.yul\":2082:2111   */\n      tag_296\n        /* \"#utility.yul\":2101:2110   */\n      dup4\n        /* \"#utility.yul\":2082:2111   */\n      tag_271\n      jump\t// in\n    tag_296:\n        /* \"#utility.yul\":2072:2111   */\n      swap5\n        /* \"#utility.yul\":2158:2160   */\n      0x20\n        /* \"#utility.yul\":2143:2161   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":2130:2162   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1914:2168   */\n      jump\t// out\n        /* \"#utility.yul\":2173:2501   */\n    tag_42:\n        /* \"#utility.yul\":2250:2256   */\n      0x00\n        /* \"#utility.yul\":2258:2264   */\n      dup1\n        /* \"#utility.yul\":2266:2272   */\n      0x00\n        /* \"#utility.yul\":2319:2321   */\n      0x60\n        /* \"#utility.yul\":2307:2316   */\n      dup5\n        /* \"#utility.yul\":2298:2305   */\n      dup7\n        /* \"#utility.yul\":2294:2317   */\n      sub\n        /* \"#utility.yul\":2290:2322   */\n      slt\n        /* \"#utility.yul\":2287:2339   */\n      iszero\n      tag_298\n      jumpi\n        /* \"#utility.yul\":2335:2336   */\n      0x00\n        /* \"#utility.yul\":2332:2333   */\n      dup1\n        /* \"#utility.yul\":2325:2337   */\n      revert\n        /* \"#utility.yul\":2287:2339   */\n    tag_298:\n        /* \"#utility.yul\":2358:2387   */\n      tag_299\n        /* \"#utility.yul\":2377:2386   */\n      dup5\n        /* \"#utility.yul\":2358:2387   */\n      tag_271\n      jump\t// in\n    tag_299:\n        /* \"#utility.yul\":2348:2387   */\n      swap3\n      pop\n        /* \"#utility.yul\":2406:2444   */\n      tag_300\n        /* \"#utility.yul\":2440:2442   */\n      0x20\n        /* \"#utility.yul\":2429:2438   */\n      dup6\n        /* \"#utility.yul\":2425:2443   */\n      add\n        /* \"#utility.yul\":2406:2444   */\n      tag_271\n      jump\t// in\n    tag_300:\n        /* \"#utility.yul\":2396:2444   */\n      swap2\n      pop\n        /* \"#utility.yul\":2491:2493   */\n      0x40\n        /* \"#utility.yul\":2480:2489   */\n      dup5\n        /* \"#utility.yul\":2476:2494   */\n      add\n        /* \"#utility.yul\":2463:2495   */\n      calldataload\n        /* \"#utility.yul\":2453:2495   */\n      swap1\n      pop\n        /* \"#utility.yul\":2173:2501   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":2506:2692   */\n    tag_53:\n        /* \"#utility.yul\":2565:2571   */\n      0x00\n        /* \"#utility.yul\":2618:2620   */\n      0x20\n        /* \"#utility.yul\":2606:2615   */\n      dup3\n        /* \"#utility.yul\":2597:2604   */\n      dup5\n        /* \"#utility.yul\":2593:2616   */\n      sub\n        /* \"#utility.yul\":2589:2621   */\n      slt\n        /* \"#utility.yul\":2586:2638   */\n      iszero\n      tag_302\n      jumpi\n        /* \"#utility.yul\":2634:2635   */\n      0x00\n        /* \"#utility.yul\":2631:2632   */\n      dup1\n        /* \"#utility.yul\":2624:2636   */\n      revert\n        /* \"#utility.yul\":2586:2638   */\n    tag_302:\n        /* \"#utility.yul\":2657:2686   */\n      tag_159\n        /* \"#utility.yul\":2676:2685   */\n      dup3\n        /* \"#utility.yul\":2657:2686   */\n      tag_271\n      jump\t// in\n        /* \"#utility.yul\":2879:3039   */\n    tag_272:\n        /* \"#utility.yul\":2944:2964   */\n      dup1\n      calldataload\n        /* \"#utility.yul\":3000:3013   */\n      dup1\n      iszero\n        /* \"#utility.yul\":2993:3014   */\n      iszero\n        /* \"#utility.yul\":2983:3015   */\n      dup2\n      eq\n        /* \"#utility.yul\":2973:3033   */\n      tag_293\n      jumpi\n        /* \"#utility.yul\":3029:3030   */\n      0x00\n        /* \"#utility.yul\":3026:3027   */\n      dup1\n        /* \"#utility.yul\":3019:3031   */\n      revert\n        /* \"#utility.yul\":3044:3298   */\n    tag_62:\n        /* \"#utility.yul\":3109:3115   */\n      0x00\n        /* \"#utility.yul\":3117:3123   */\n      dup1\n        /* \"#utility.yul\":3170:3172   */\n      0x40\n        /* \"#utility.yul\":3158:3167   */\n      dup4\n        /* \"#utility.yul\":3149:3156   */\n      dup6\n        /* \"#utility.yul\":3145:3168   */\n      sub\n        /* \"#utility.yul\":3141:3173   */\n      slt\n        /* \"#utility.yul\":3138:3190   */\n      iszero\n      tag_308\n      jumpi\n        /* \"#utility.yul\":3186:3187   */\n      0x00\n        /* \"#utility.yul\":3183:3184   */\n      dup1\n        /* \"#utility.yul\":3176:3188   */\n      revert\n        /* \"#utility.yul\":3138:3190   */\n    tag_308:\n        /* \"#utility.yul\":3209:3238   */\n      tag_309\n        /* \"#utility.yul\":3228:3237   */\n      dup4\n        /* \"#utility.yul\":3209:3238   */\n      tag_271\n      jump\t// in\n    tag_309:\n        /* \"#utility.yul\":3199:3238   */\n      swap2\n      pop\n        /* \"#utility.yul\":3257:3292   */\n      tag_310\n        /* \"#utility.yul\":3288:3290   */\n      0x20\n        /* \"#utility.yul\":3277:3286   */\n      dup5\n        /* \"#utility.yul\":3273:3291   */\n      add\n        /* \"#utility.yul\":3257:3292   */\n      tag_272\n      jump\t// in\n    tag_310:\n        /* \"#utility.yul\":3247:3292   */\n      swap1\n      pop\n        /* \"#utility.yul\":3044:3298   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3303:3483   */\n    tag_66:\n        /* \"#utility.yul\":3359:3365   */\n      0x00\n        /* \"#utility.yul\":3412:3414   */\n      0x20\n        /* \"#utility.yul\":3400:3409   */\n      dup3\n        /* \"#utility.yul\":3391:3398   */\n      dup5\n        /* \"#utility.yul\":3387:3410   */\n      sub\n        /* \"#utility.yul\":3383:3415   */\n      slt\n        /* \"#utility.yul\":3380:3432   */\n      iszero\n      tag_312\n      jumpi\n        /* \"#utility.yul\":3428:3429   */\n      0x00\n        /* \"#utility.yul\":3425:3426   */\n      dup1\n        /* \"#utility.yul\":3418:3430   */\n      revert\n        /* \"#utility.yul\":3380:3432   */\n    tag_312:\n        /* \"#utility.yul\":3451:3477   */\n      tag_159\n        /* \"#utility.yul\":3467:3476   */\n      dup3\n        /* \"#utility.yul\":3451:3477   */\n      tag_272\n      jump\t// in\n        /* \"#utility.yul\":3488:3615   */\n    tag_214:\n        /* \"#utility.yul\":3549:3559   */\n      0x4e487b71\n        /* \"#utility.yul\":3544:3547   */\n      0xe0\n        /* \"#utility.yul\":3540:3560   */\n      shl\n        /* \"#utility.yul\":3537:3538   */\n      0x00\n        /* \"#utility.yul\":3530:3561   */\n      mstore\n        /* \"#utility.yul\":3580:3584   */\n      0x41\n        /* \"#utility.yul\":3577:3578   */\n      0x04\n        /* \"#utility.yul\":3570:3585   */\n      mstore\n        /* \"#utility.yul\":3604:3608   */\n      0x24\n        /* \"#utility.yul\":3601:3602   */\n      0x00\n        /* \"#utility.yul\":3594:3609   */\n      revert\n        /* \"#utility.yul\":3620:4758   */\n    tag_70:\n        /* \"#utility.yul\":3715:3721   */\n      0x00\n        /* \"#utility.yul\":3723:3729   */\n      dup1\n        /* \"#utility.yul\":3731:3737   */\n      0x00\n        /* \"#utility.yul\":3739:3745   */\n      dup1\n        /* \"#utility.yul\":3792:3795   */\n      0x80\n        /* \"#utility.yul\":3780:3789   */\n      dup6\n        /* \"#utility.yul\":3771:3778   */\n      dup8\n        /* \"#utility.yul\":3767:3790   */\n      sub\n        /* \"#utility.yul\":3763:3796   */\n      slt\n        /* \"#utility.yul\":3760:3813   */\n      iszero\n      tag_316\n      jumpi\n        /* \"#utility.yul\":3809:3810   */\n      0x00\n        /* \"#utility.yul\":3806:3807   */\n      dup1\n        /* \"#utility.yul\":3799:3811   */\n      revert\n        /* \"#utility.yul\":3760:3813   */\n    tag_316:\n        /* \"#utility.yul\":3832:3861   */\n      tag_317\n        /* \"#utility.yul\":3851:3860   */\n      dup6\n        /* \"#utility.yul\":3832:3861   */\n      tag_271\n      jump\t// in\n    tag_317:\n        /* \"#utility.yul\":3822:3861   */\n      swap4\n      pop\n        /* \"#utility.yul\":3880:3918   */\n      tag_318\n        /* \"#utility.yul\":3914:3916   */\n      0x20\n        /* \"#utility.yul\":3903:3912   */\n      dup7\n        /* \"#utility.yul\":3899:3917   */\n      add\n        /* \"#utility.yul\":3880:3918   */\n      tag_271\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":3870:3918   */\n      swap3\n      pop\n        /* \"#utility.yul\":3965:3967   */\n      0x40\n        /* \"#utility.yul\":3954:3963   */\n      dup6\n        /* \"#utility.yul\":3950:3968   */\n      add\n        /* \"#utility.yul\":3937:3969   */\n      calldataload\n        /* \"#utility.yul\":3927:3969   */\n      swap2\n      pop\n        /* \"#utility.yul\":4020:4022   */\n      0x60\n        /* \"#utility.yul\":4009:4018   */\n      dup6\n        /* \"#utility.yul\":4005:4023   */\n      add\n        /* \"#utility.yul\":3992:4024   */\n      calldataload\n        /* \"#utility.yul\":4043:4061   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4084:4086   */\n      dup1\n        /* \"#utility.yul\":4076:4082   */\n      dup3\n        /* \"#utility.yul\":4073:4087   */\n      gt\n        /* \"#utility.yul\":4070:4104   */\n      iszero\n      tag_319\n      jumpi\n        /* \"#utility.yul\":4100:4101   */\n      0x00\n        /* \"#utility.yul\":4097:4098   */\n      dup1\n        /* \"#utility.yul\":4090:4102   */\n      revert\n        /* \"#utility.yul\":4070:4104   */\n    tag_319:\n        /* \"#utility.yul\":4138:4144   */\n      dup2\n        /* \"#utility.yul\":4127:4136   */\n      dup8\n        /* \"#utility.yul\":4123:4145   */\n      add\n        /* \"#utility.yul\":4113:4145   */\n      swap2\n      pop\n        /* \"#utility.yul\":4183:4190   */\n      dup8\n        /* \"#utility.yul\":4176:4180   */\n      0x1f\n        /* \"#utility.yul\":4172:4174   */\n      dup4\n        /* \"#utility.yul\":4168:4181   */\n      add\n        /* \"#utility.yul\":4164:4191   */\n      slt\n        /* \"#utility.yul\":4154:4209   */\n      tag_320\n      jumpi\n        /* \"#utility.yul\":4205:4206   */\n      0x00\n        /* \"#utility.yul\":4202:4203   */\n      dup1\n        /* \"#utility.yul\":4195:4207   */\n      revert\n        /* \"#utility.yul\":4154:4209   */\n    tag_320:\n        /* \"#utility.yul\":4241:4243   */\n      dup2\n        /* \"#utility.yul\":4228:4244   */\n      calldataload\n        /* \"#utility.yul\":4263:4265   */\n      dup2\n        /* \"#utility.yul\":4259:4261   */\n      dup2\n        /* \"#utility.yul\":4256:4266   */\n      gt\n        /* \"#utility.yul\":4253:4289   */\n      iszero\n      tag_322\n      jumpi\n        /* \"#utility.yul\":4269:4287   */\n      tag_322\n      tag_214\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":4344:4346   */\n      0x40\n        /* \"#utility.yul\":4338:4347   */\n      mload\n        /* \"#utility.yul\":4312:4314   */\n      0x1f\n        /* \"#utility.yul\":4398:4411   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":4394:4416   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":4418:4420   */\n      0x3f\n        /* \"#utility.yul\":4390:4421   */\n      add\n        /* \"#utility.yul\":4386:4426   */\n      and\n        /* \"#utility.yul\":4374:4427   */\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":4442:4460   */\n      dup4\n      dup3\n      gt\n        /* \"#utility.yul\":4462:4484   */\n      dup2\n      dup4\n      lt\n        /* \"#utility.yul\":4439:4485   */\n      or\n        /* \"#utility.yul\":4436:4508   */\n      iszero\n      tag_324\n      jumpi\n        /* \"#utility.yul\":4488:4506   */\n      tag_324\n      tag_214\n      jump\t// in\n    tag_324:\n        /* \"#utility.yul\":4528:4538   */\n      dup2\n        /* \"#utility.yul\":4524:4526   */\n      0x40\n        /* \"#utility.yul\":4517:4539   */\n      mstore\n        /* \"#utility.yul\":4563:4565   */\n      dup3\n        /* \"#utility.yul\":4555:4561   */\n      dup2\n        /* \"#utility.yul\":4548:4566   */\n      mstore\n        /* \"#utility.yul\":4603:4610   */\n      dup11\n        /* \"#utility.yul\":4598:4600   */\n      0x20\n        /* \"#utility.yul\":4593:4595   */\n      dup5\n        /* \"#utility.yul\":4589:4591   */\n      dup8\n        /* \"#utility.yul\":4585:4596   */\n      add\n        /* \"#utility.yul\":4581:4601   */\n      add\n        /* \"#utility.yul\":4578:4611   */\n      gt\n        /* \"#utility.yul\":4575:4628   */\n      iszero\n      tag_325\n      jumpi\n        /* \"#utility.yul\":4624:4625   */\n      0x00\n        /* \"#utility.yul\":4621:4622   */\n      dup1\n        /* \"#utility.yul\":4614:4626   */\n      revert\n        /* \"#utility.yul\":4575:4628   */\n    tag_325:\n        /* \"#utility.yul\":4680:4682   */\n      dup3\n        /* \"#utility.yul\":4675:4677   */\n      0x20\n        /* \"#utility.yul\":4671:4673   */\n      dup7\n        /* \"#utility.yul\":4667:4678   */\n      add\n        /* \"#utility.yul\":4662:4664   */\n      0x20\n        /* \"#utility.yul\":4654:4660   */\n      dup4\n        /* \"#utility.yul\":4650:4665   */\n      add\n        /* \"#utility.yul\":4637:4683   */\n      calldatacopy\n        /* \"#utility.yul\":4725:4726   */\n      0x00\n        /* \"#utility.yul\":4720:4722   */\n      0x20\n        /* \"#utility.yul\":4715:4717   */\n      dup5\n        /* \"#utility.yul\":4707:4713   */\n      dup4\n        /* \"#utility.yul\":4703:4718   */\n      add\n        /* \"#utility.yul\":4699:4723   */\n      add\n        /* \"#utility.yul\":4692:4727   */\n      mstore\n        /* \"#utility.yul\":4746:4752   */\n      dup1\n        /* \"#utility.yul\":4736:4752   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":3620:4758   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4763:5023   */\n    tag_78:\n        /* \"#utility.yul\":4831:4837   */\n      0x00\n        /* \"#utility.yul\":4839:4845   */\n      dup1\n        /* \"#utility.yul\":4892:4894   */\n      0x40\n        /* \"#utility.yul\":4880:4889   */\n      dup4\n        /* \"#utility.yul\":4871:4878   */\n      dup6\n        /* \"#utility.yul\":4867:4890   */\n      sub\n        /* \"#utility.yul\":4863:4895   */\n      slt\n        /* \"#utility.yul\":4860:4912   */\n      iszero\n      tag_327\n      jumpi\n        /* \"#utility.yul\":4908:4909   */\n      0x00\n        /* \"#utility.yul\":4905:4906   */\n      dup1\n        /* \"#utility.yul\":4898:4910   */\n      revert\n        /* \"#utility.yul\":4860:4912   */\n    tag_327:\n        /* \"#utility.yul\":4931:4960   */\n      tag_328\n        /* \"#utility.yul\":4950:4959   */\n      dup4\n        /* \"#utility.yul\":4931:4960   */\n      tag_271\n      jump\t// in\n    tag_328:\n        /* \"#utility.yul\":4921:4960   */\n      swap2\n      pop\n        /* \"#utility.yul\":4979:5017   */\n      tag_310\n        /* \"#utility.yul\":5013:5015   */\n      0x20\n        /* \"#utility.yul\":5002:5011   */\n      dup5\n        /* \"#utility.yul\":4998:5016   */\n      add\n        /* \"#utility.yul\":4979:5017   */\n      tag_271\n      jump\t// in\n        /* \"#utility.yul\":5028:5408   */\n    tag_88:\n        /* \"#utility.yul\":5107:5108   */\n      0x01\n        /* \"#utility.yul\":5103:5115   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":5150:5162   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":5171:5232   */\n      tag_331\n      jumpi\n        /* \"#utility.yul\":5225:5229   */\n      0x7f\n        /* \"#utility.yul\":5217:5223   */\n      dup3\n        /* \"#utility.yul\":5213:5230   */\n      and\n        /* \"#utility.yul\":5203:5230   */\n      swap2\n      pop\n        /* \"#utility.yul\":5171:5232   */\n    tag_331:\n        /* \"#utility.yul\":5278:5280   */\n      0x20\n        /* \"#utility.yul\":5270:5276   */\n      dup3\n        /* \"#utility.yul\":5267:5281   */\n      lt\n        /* \"#utility.yul\":5247:5265   */\n      dup2\n        /* \"#utility.yul\":5244:5282   */\n      sub\n        /* \"#utility.yul\":5241:5402   */\n      tag_332\n      jumpi\n        /* \"#utility.yul\":5324:5334   */\n      0x4e487b71\n        /* \"#utility.yul\":5319:5322   */\n      0xe0\n        /* \"#utility.yul\":5315:5335   */\n      shl\n        /* \"#utility.yul\":5312:5313   */\n      0x00\n        /* \"#utility.yul\":5305:5336   */\n      mstore\n        /* \"#utility.yul\":5359:5363   */\n      0x22\n        /* \"#utility.yul\":5356:5357   */\n      0x04\n        /* \"#utility.yul\":5349:5364   */\n      mstore\n        /* \"#utility.yul\":5387:5391   */\n      0x24\n        /* \"#utility.yul\":5384:5385   */\n      0x00\n        /* \"#utility.yul\":5377:5392   */\n      revert\n        /* \"#utility.yul\":5241:5402   */\n    tag_332:\n      pop\n        /* \"#utility.yul\":5028:5408   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6245:6654   */\n    tag_117:\n        /* \"#utility.yul\":6447:6449   */\n      0x20\n        /* \"#utility.yul\":6429:6450   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":6486:6488   */\n      0x2d\n        /* \"#utility.yul\":6466:6484   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":6459:6489   */\n      mstore\n        /* \"#utility.yul\":6525:6559   */\n      0x4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e65\n        /* \"#utility.yul\":6520:6522   */\n      0x40\n        /* \"#utility.yul\":6505:6523   */\n      dup3\n      add\n        /* \"#utility.yul\":6498:6560   */\n      mstore\n      shl(0x9a, 0x1c881bdc88185c1c1c9bdd9959)\n        /* \"#utility.yul\":6591:6593   */\n      0x60\n        /* \"#utility.yul\":6576:6594   */\n      dup3\n      add\n        /* \"#utility.yul\":6569:6612   */\n      mstore\n        /* \"#utility.yul\":6644:6647   */\n      0x80\n        /* \"#utility.yul\":6629:6648   */\n      add\n      swap1\n        /* \"#utility.yul\":6245:6654   */\n      jump\t// out\n        /* \"#utility.yul\":7774:8244   */\n    tag_163:\n        /* \"#utility.yul\":7953:7956   */\n      0x00\n        /* \"#utility.yul\":7991:7997   */\n      dup4\n        /* \"#utility.yul\":7985:7998   */\n      mload\n        /* \"#utility.yul\":8007:8060   */\n      tag_340\n        /* \"#utility.yul\":8053:8059   */\n      dup2\n        /* \"#utility.yul\":8048:8051   */\n      dup5\n        /* \"#utility.yul\":8041:8045   */\n      0x20\n        /* \"#utility.yul\":8033:8039   */\n      dup9\n        /* \"#utility.yul\":8029:8046   */\n      add\n        /* \"#utility.yul\":8007:8060   */\n      tag_269\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":8123:8136   */\n      dup4\n      mload\n        /* \"#utility.yul\":8082:8098   */\n      swap1\n      dup4\n      add\n      swap1\n        /* \"#utility.yul\":8145:8202   */\n      tag_341\n        /* \"#utility.yul\":8123:8136   */\n      dup2\n        /* \"#utility.yul\":8082:8098   */\n      dup4\n        /* \"#utility.yul\":8179:8183   */\n      0x20\n        /* \"#utility.yul\":8167:8184   */\n      dup9\n      add\n        /* \"#utility.yul\":8145:8202   */\n      tag_269\n      jump\t// in\n    tag_341:\n        /* \"#utility.yul\":8218:8238   */\n      add\n      swap5\n        /* \"#utility.yul\":7774:8244   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8249:8650   */\n    tag_184:\n        /* \"#utility.yul\":8451:8453   */\n      0x20\n        /* \"#utility.yul\":8433:8454   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":8490:8492   */\n      0x25\n        /* \"#utility.yul\":8470:8488   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":8463:8493   */\n      mstore\n        /* \"#utility.yul\":8529:8563   */\n      0x4552433732313a207472616e736665722066726f6d20696e636f727265637420\n        /* \"#utility.yul\":8524:8526   */\n      0x40\n        /* \"#utility.yul\":8509:8527   */\n      dup3\n      add\n        /* \"#utility.yul\":8502:8564   */\n      mstore\n      shl(0xd9, 0x37bbb732b9)\n        /* \"#utility.yul\":8595:8597   */\n      0x60\n        /* \"#utility.yul\":8580:8598   */\n      dup3\n      add\n        /* \"#utility.yul\":8573:8608   */\n      mstore\n        /* \"#utility.yul\":8640:8643   */\n      0x80\n        /* \"#utility.yul\":8625:8644   */\n      add\n      swap1\n        /* \"#utility.yul\":8249:8650   */\n      jump\t// out\n        /* \"#utility.yul\":9414:9828   */\n    tag_207:\n        /* \"#utility.yul\":9616:9618   */\n      0x20\n        /* \"#utility.yul\":9598:9619   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":9655:9657   */\n      0x32\n        /* \"#utility.yul\":9635:9653   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":9628:9658   */\n      mstore\n        /* \"#utility.yul\":9694:9728   */\n      0x4552433732313a207472616e7366657220746f206e6f6e204552433732315265\n        /* \"#utility.yul\":9689:9691   */\n      0x40\n        /* \"#utility.yul\":9674:9692   */\n      dup3\n      add\n        /* \"#utility.yul\":9667:9729   */\n      mstore\n      shl(0x71, 0x31b2b4bb32b91034b6b83632b6b2b73a32b9)\n        /* \"#utility.yul\":9760:9762   */\n      0x60\n        /* \"#utility.yul\":9745:9763   */\n      dup3\n      add\n        /* \"#utility.yul\":9738:9786   */\n      mstore\n        /* \"#utility.yul\":9818:9821   */\n      0x80\n        /* \"#utility.yul\":9803:9822   */\n      add\n      swap1\n        /* \"#utility.yul\":9414:9828   */\n      jump\t// out\n        /* \"#utility.yul\":9965:10454   */\n    tag_232:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":10234:10249   */\n      dup6\n      dup2\n      and\n        /* \"#utility.yul\":10216:10250   */\n      dup3\n      mstore\n        /* \"#utility.yul\":10286:10301   */\n      dup5\n      and\n        /* \"#utility.yul\":10281:10283   */\n      0x20\n        /* \"#utility.yul\":10266:10284   */\n      dup3\n      add\n        /* \"#utility.yul\":10259:10302   */\n      mstore\n        /* \"#utility.yul\":10333:10335   */\n      0x40\n        /* \"#utility.yul\":10318:10336   */\n      dup2\n      add\n        /* \"#utility.yul\":10311:10345   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":10381:10384   */\n      0x80\n        /* \"#utility.yul\":10376:10378   */\n      0x60\n        /* \"#utility.yul\":10361:10379   */\n      dup3\n      add\n        /* \"#utility.yul\":10354:10385   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":10159:10163   */\n      0x00\n      swap1\n        /* \"#utility.yul\":10402:10448   */\n      tag_348\n      swap1\n        /* \"#utility.yul\":10428:10447   */\n      dup4\n      add\n        /* \"#utility.yul\":10420:10426   */\n      dup5\n        /* \"#utility.yul\":10402:10448   */\n      tag_270\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":10394:10448   */\n      swap7\n        /* \"#utility.yul\":9965:10454   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10459:10708   */\n    tag_235:\n        /* \"#utility.yul\":10528:10534   */\n      0x00\n        /* \"#utility.yul\":10581:10583   */\n      0x20\n        /* \"#utility.yul\":10569:10578   */\n      dup3\n        /* \"#utility.yul\":10560:10567   */\n      dup5\n        /* \"#utility.yul\":10556:10579   */\n      sub\n        /* \"#utility.yul\":10552:10584   */\n      slt\n        /* \"#utility.yul\":10549:10601   */\n      iszero\n      tag_350\n      jumpi\n        /* \"#utility.yul\":10597:10598   */\n      0x00\n        /* \"#utility.yul\":10594:10595   */\n      dup1\n        /* \"#utility.yul\":10587:10599   */\n      revert\n        /* \"#utility.yul\":10549:10601   */\n    tag_350:\n        /* \"#utility.yul\":10629:10638   */\n      dup2\n        /* \"#utility.yul\":10623:10639   */\n      mload\n        /* \"#utility.yul\":10648:10678   */\n      tag_159\n        /* \"#utility.yul\":10672:10677   */\n      dup2\n        /* \"#utility.yul\":10648:10678   */\n      tag_268\n      jump\t// in\n\n    auxdata: 0xa264697066735822122035c795b59e81869432db45df7f8a7a365bb4e3f0e2b08ebd1b207c4a2dfe8cc564736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x11BA DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xEA JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA9F51B23 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA9F51B23 EQ PUSH2 0x1E1 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x1F4 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x207 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x21A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1A5 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1C6 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x1CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0xC8 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x157 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x16C JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x17F JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x192 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x117 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x12C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x102 PUSH2 0xFD CALLDATASIZE PUSH1 0x4 PUSH2 0xD25 JUMP JUMPDEST PUSH2 0x256 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11F PUSH2 0x2A8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10E SWAP2 SWAP1 PUSH2 0xD9A JUMP JUMPDEST PUSH2 0x13F PUSH2 0x13A CALLDATASIZE PUSH1 0x4 PUSH2 0xDAD JUMP JUMPDEST PUSH2 0x33A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x10E JUMP JUMPDEST PUSH2 0x16A PUSH2 0x165 CALLDATASIZE PUSH1 0x4 PUSH2 0xDE2 JUMP JUMPDEST PUSH2 0x361 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x16A PUSH2 0x17A CALLDATASIZE PUSH1 0x4 PUSH2 0xE0C JUMP JUMPDEST PUSH2 0x47B JUMP JUMPDEST PUSH2 0x16A PUSH2 0x18D CALLDATASIZE PUSH1 0x4 PUSH2 0xE0C JUMP JUMPDEST PUSH2 0x4AC JUMP JUMPDEST PUSH2 0x13F PUSH2 0x1A0 CALLDATASIZE PUSH1 0x4 PUSH2 0xDAD JUMP JUMPDEST PUSH2 0x4C7 JUMP JUMPDEST PUSH2 0x1B8 PUSH2 0x1B3 CALLDATASIZE PUSH1 0x4 PUSH2 0xE48 JUMP JUMPDEST PUSH2 0x527 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x10E JUMP JUMPDEST PUSH2 0x11F PUSH2 0x5AD JUMP JUMPDEST PUSH2 0x16A PUSH2 0x1DC CALLDATASIZE PUSH1 0x4 PUSH2 0xE73 JUMP JUMPDEST PUSH2 0x5BC JUMP JUMPDEST PUSH2 0x16A PUSH2 0x1EF CALLDATASIZE PUSH1 0x4 PUSH2 0xEA6 JUMP JUMPDEST PUSH2 0x5CB JUMP JUMPDEST PUSH2 0x16A PUSH2 0x202 CALLDATASIZE PUSH1 0x4 PUSH2 0xED7 JUMP JUMPDEST PUSH2 0x643 JUMP JUMPDEST PUSH2 0x11F PUSH2 0x215 CALLDATASIZE PUSH1 0x4 PUSH2 0xDAD JUMP JUMPDEST PUSH2 0x67B JUMP JUMPDEST PUSH2 0x102 PUSH2 0x228 CALLDATASIZE PUSH1 0x4 PUSH2 0xFB3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6A PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x287 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x2A2 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x65 DUP1 SLOAD PUSH2 0x2B7 SWAP1 PUSH2 0xFDD JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2E3 SWAP1 PUSH2 0xFDD JUMP JUMPDEST DUP1 ISZERO PUSH2 0x330 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x305 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x330 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x313 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x345 DUP3 PUSH2 0x6EF JUMP JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x69 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x36C DUP3 PUSH2 0x4C7 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x3DE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ DUP1 PUSH2 0x3FA JUMPI POP PUSH2 0x3FA DUP2 CALLER PUSH2 0x228 JUMP JUMPDEST PUSH2 0x46C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6B656E206F776E6572206F7220617070726F76656420666F7220616C6C000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3D5 JUMP JUMPDEST PUSH2 0x476 DUP4 DUP4 PUSH2 0x751 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x485 CALLER DUP3 PUSH2 0x7BF JUMP JUMPDEST PUSH2 0x4A1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3D5 SWAP1 PUSH2 0x1017 JUMP JUMPDEST PUSH2 0x476 DUP4 DUP4 DUP4 PUSH2 0x83E JUMP JUMPDEST PUSH2 0x476 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x643 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x67 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x2A2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x115490CDCC8C4E881A5B9D985B1A59081D1BDAD95B881251 PUSH1 0x42 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3D5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x591 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A2061646472657373207A65726F206973206E6F742061207661 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x3634B21037BBB732B9 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3D5 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x68 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x66 DUP1 SLOAD PUSH2 0x2B7 SWAP1 PUSH2 0xFDD JUMP JUMPDEST PUSH2 0x5C7 CALLER DUP4 DUP4 PUSH2 0x9A2 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x6B SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x625 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616C6C6572206973206E6F7420746865206F776E6572000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3D5 JUMP JUMPDEST PUSH1 0x6B DUP1 SLOAD SWAP2 ISZERO ISZERO PUSH1 0x1 PUSH1 0xA0 SHL MUL PUSH1 0xFF PUSH1 0xA0 SHL NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x64D CALLER DUP4 PUSH2 0x7BF JUMP JUMPDEST PUSH2 0x669 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3D5 SWAP1 PUSH2 0x1017 JUMP JUMPDEST PUSH2 0x675 DUP5 DUP5 DUP5 DUP5 PUSH2 0xA70 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x686 DUP3 PUSH2 0x6EF JUMP JUMPDEST PUSH1 0x0 PUSH2 0x69D PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x6BD JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x6E8 JUMP JUMPDEST DUP1 PUSH2 0x6C7 DUP5 PUSH2 0xAA3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x6D8 SWAP3 SWAP2 SWAP1 PUSH2 0x1064 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x67 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x74E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x115490CDCC8C4E881A5B9D985B1A59081D1BDAD95B881251 PUSH1 0x42 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3D5 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x69 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH2 0x786 DUP3 PUSH2 0x4C7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x7CB DUP4 PUSH2 0x4C7 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x812 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6A PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP9 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST DUP1 PUSH2 0x836 JUMPI POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x82B DUP5 PUSH2 0x33A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x851 DUP3 PUSH2 0x4C7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x877 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3D5 SWAP1 PUSH2 0x1093 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x8D9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3D5 JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x8EC DUP3 PUSH2 0x4C7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x912 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3D5 SWAP1 PUSH2 0x1093 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x69 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND SWAP1 SWAP2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND DUP1 DUP7 MSTORE PUSH1 0x68 DUP6 MSTORE DUP4 DUP7 KECCAK256 DUP1 SLOAD PUSH1 0x0 NOT ADD SWAP1 SSTORE SWAP1 DUP8 AND DUP1 DUP7 MSTORE DUP4 DUP7 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE DUP7 DUP7 MSTORE PUSH1 0x67 SWAP1 SWAP5 MSTORE DUP3 DUP6 KECCAK256 DUP1 SLOAD SWAP1 SWAP3 AND DUP5 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD DUP5 SWAP4 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 POP POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0xA03 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3D5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6A PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0xA7B DUP5 DUP5 DUP5 PUSH2 0x83E JUMP JUMPDEST PUSH2 0xA87 DUP5 DUP5 DUP5 DUP5 PUSH2 0xB36 JUMP JUMPDEST PUSH2 0x675 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3D5 SWAP1 PUSH2 0x10D8 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0xAB0 DUP4 PUSH2 0xC37 JUMP JUMPDEST PUSH1 0x1 ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xAD0 JUMPI PUSH2 0xAD0 PUSH2 0xEC1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xAFA JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 ADD PUSH1 0x20 ADD JUMPDEST PUSH1 0x0 NOT ADD PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DIV SWAP5 POP DUP5 PUSH2 0xB04 JUMPI POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0xC2C JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0xB7A SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x112A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xBB5 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xBB2 SWAP2 DUP2 ADD SWAP1 PUSH2 0x1167 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xC12 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0xBE3 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xBE8 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0xC0A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3D5 SWAP1 PUSH2 0x10D8 JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP PUSH2 0x836 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 LT PUSH2 0xC76 JUMPI PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 DIV SWAP3 POP PUSH1 0x40 ADD JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0xCA2 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DIV SWAP3 POP PUSH1 0x20 ADD JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0xCC0 JUMPI PUSH7 0x2386F26FC10000 DUP4 DIV SWAP3 POP PUSH1 0x10 ADD JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0xCD8 JUMPI PUSH4 0x5F5E100 DUP4 DIV SWAP3 POP PUSH1 0x8 ADD JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0xCEC JUMPI PUSH2 0x2710 DUP4 DIV SWAP3 POP PUSH1 0x4 ADD JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0xCFE JUMPI PUSH1 0x64 DUP4 DIV SWAP3 POP PUSH1 0x2 ADD JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x2A2 JUMPI PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x74E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD37 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x6E8 DUP2 PUSH2 0xD0F JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xD5D JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xD45 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x675 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0xD86 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0xD42 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x6E8 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xD6E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDBF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xDDD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDF5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDFE DUP4 PUSH2 0xDC6 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xE21 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE2A DUP5 PUSH2 0xDC6 JUMP JUMPDEST SWAP3 POP PUSH2 0xE38 PUSH1 0x20 DUP6 ADD PUSH2 0xDC6 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE5A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6E8 DUP3 PUSH2 0xDC6 JUMP JUMPDEST DUP1 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xDDD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE86 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE8F DUP4 PUSH2 0xDC6 JUMP JUMPDEST SWAP2 POP PUSH2 0xE9D PUSH1 0x20 DUP5 ADD PUSH2 0xE63 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEB8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6E8 DUP3 PUSH2 0xE63 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xEED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEF6 DUP6 PUSH2 0xDC6 JUMP JUMPDEST SWAP4 POP PUSH2 0xF04 PUSH1 0x20 DUP7 ADD PUSH2 0xDC6 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xF28 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xF3C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xF4E JUMPI PUSH2 0xF4E PUSH2 0xEC1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0xF76 JUMPI PUSH2 0xF76 PUSH2 0xEC1 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP11 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0xF8F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xFC6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xFCF DUP4 PUSH2 0xDC6 JUMP JUMPDEST SWAP2 POP PUSH2 0xE9D PUSH1 0x20 DUP5 ADD PUSH2 0xDC6 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xFF1 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1011 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2D SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x40 DUP3 ADD MSTORE PUSH13 0x1C881BDC88185C1C1C9BDD9959 PUSH1 0x9A SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0x1076 DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0xD42 JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0x108A DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0xD42 JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x37BBB732B9 PUSH1 0xD9 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x32 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x40 DUP3 ADD MSTORE PUSH18 0x31B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x71 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x115D SWAP1 DUP4 ADD DUP5 PUSH2 0xD6E JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1179 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x6E8 DUP2 PUSH2 0xD0F JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATALOAD 0xC7 SWAP6 0xB5 SWAP15 DUP2 DUP7 SWAP5 ORIGIN 0xDB GASLIMIT 0xDF PUSH32 0x8A7A365BB4E3F0E2B08EBD1B207C4A2DFE8CC564736F6C634300080D00330000 ",
							"sourceMap": "751:17704:1:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfer_1133": {
									"entryPoint": null,
									"id": 1133,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_approve_999": {
									"entryPoint": 1873,
									"id": 999,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_baseURI_412": {
									"entryPoint": null,
									"id": 412,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_beforeTokenTransfer_1120": {
									"entryPoint": null,
									"id": 1120,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkOnERC721Received_1107": {
									"entryPoint": 2870,
									"id": 1107,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@_exists_668": {
									"entryPoint": null,
									"id": 668,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_isApprovedOrOwner_702": {
									"entryPoint": 1983,
									"id": 702,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_msgSender_1626": {
									"entryPoint": null,
									"id": 1626,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_ownerOf_650": {
									"entryPoint": null,
									"id": 650,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_requireMinted_1045": {
									"entryPoint": 1775,
									"id": 1045,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_safeTransfer_637": {
									"entryPoint": 2672,
									"id": 637,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_setApprovalForAll_1031": {
									"entryPoint": 2466,
									"id": 1031,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_975": {
									"entryPoint": 2110,
									"id": 975,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@approve_467": {
									"entryPoint": 865,
									"id": 467,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@balanceOf_316": {
									"entryPoint": 1319,
									"id": 316,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getApproved_485": {
									"entryPoint": 826,
									"id": 485,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isApprovedForAll_532": {
									"entryPoint": null,
									"id": 532,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isContract_1333": {
									"entryPoint": null,
									"id": 1333,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@log10_2574": {
									"entryPoint": 3127,
									"id": 2574,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@name_354": {
									"entryPoint": 680,
									"id": 354,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@ownerOf_344": {
									"entryPoint": 1223,
									"id": 344,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@safeTransferFrom_578": {
									"entryPoint": 1196,
									"id": 578,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_608": {
									"entryPoint": 1603,
									"id": 608,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@setApprovalForAll_502": {
									"entryPoint": 1468,
									"id": 502,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@setIsBounded_514": {
									"entryPoint": 1483,
									"id": 514,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@supportsInterface_1854": {
									"entryPoint": null,
									"id": 1854,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_292": {
									"entryPoint": 598,
									"id": 292,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_364": {
									"entryPoint": 1453,
									"id": 364,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@toString_1699": {
									"entryPoint": 2723,
									"id": 1699,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenURI_403": {
									"entryPoint": 1659,
									"id": 403,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@transferFrom_559": {
									"entryPoint": 1147,
									"id": 559,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 3526,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_bool": {
									"entryPoint": 3683,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3656,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 4019,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 3596,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 3799,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 3699,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 3554,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool": {
									"entryPoint": 3750,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 3365,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 4455,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 3501,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_string": {
									"entryPoint": 3438,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 4196,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 4394,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3482,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4119,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_15ed5034391ed5ef65b8bb8dbcb08f9b6c4034ebcf89f76344a17e1651e92b33__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4312,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4243,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 3394,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 4061,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x12": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 3777,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_bytes4": {
									"entryPoint": 3343,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:10710:11",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:11",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "58:87:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "123:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "132:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "135:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "125:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "125:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "125:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "81:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "92:5:11"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "103:3:11",
																								"type": "",
																								"value": "224"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "108:10:11",
																								"type": "",
																								"value": "0xffffffff"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "99:3:11"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "99:20:11"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "88:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "88:32:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "78:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "78:43:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "71:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "71:51:11"
															},
															"nodeType": "YulIf",
															"src": "68:71:11"
														}
													]
												},
												"name": "validator_revert_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "47:5:11",
														"type": ""
													}
												],
												"src": "14:131:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "219:176:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "265:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "274:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "277:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "267:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "267:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "267:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "240:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "249:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "236:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "236:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "261:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "232:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "232:32:11"
															},
															"nodeType": "YulIf",
															"src": "229:52:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "290:36:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "316:9:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "303:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "303:23:11"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "294:5:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "359:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "335:23:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "335:30:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "335:30:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "374:15:11",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "384:5:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "374:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "185:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "196:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "208:6:11",
														"type": ""
													}
												],
												"src": "150:245:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "495:92:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "505:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "517:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "528:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "513:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "513:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "505:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "547:9:11"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "572:6:11"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "565:6:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "565:14:11"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "558:6:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "558:22:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "540:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "540:41:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "540:41:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "464:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "475:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "486:4:11",
														"type": ""
													}
												],
												"src": "400:187:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "645:205:11",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "655:10:11",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "664:1:11",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "659:1:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "724:63:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "749:3:11"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "754:1:11"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "745:3:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "745:11:11"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "768:3:11"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "773:1:11"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "764:3:11"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "764:11:11"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "758:5:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "758:18:11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "738:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "738:39:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "738:39:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "685:1:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "688:6:11"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "682:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "682:13:11"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "696:19:11",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "698:15:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "707:1:11"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "710:2:11",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "703:3:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "703:10:11"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "698:1:11"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "678:3:11",
																"statements": []
															},
															"src": "674:113:11"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "813:31:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "826:3:11"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "831:6:11"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "822:3:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "822:16:11"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "840:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "815:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "815:27:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "815:27:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "802:1:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "805:6:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "799:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "799:13:11"
															},
															"nodeType": "YulIf",
															"src": "796:48:11"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "623:3:11",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "628:3:11",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "633:6:11",
														"type": ""
													}
												],
												"src": "592:258:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "905:208:11",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "915:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "935:5:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "929:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "929:12:11"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "919:6:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "957:3:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "962:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "950:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "950:19:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "950:19:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1004:5:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1011:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1000:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1000:16:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "1022:3:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1027:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1018:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1018:14:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1034:6:11"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "978:21:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "978:63:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "978:63:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1050:57:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "1065:3:11"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "1078:6:11"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1086:2:11",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "1074:3:11"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1074:15:11"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1095:2:11",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "1091:3:11"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1091:7:11"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1070:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1070:29:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1061:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1061:39:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1102:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1057:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1057:50:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1050:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_string",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "882:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "889:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "897:3:11",
														"type": ""
													}
												],
												"src": "855:258:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1239:99:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1256:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1267:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1249:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1249:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1249:21:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1279:53:11",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1305:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1317:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1328:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1313:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1313:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "1287:17:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1287:45:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1279:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1208:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1219:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1230:4:11",
														"type": ""
													}
												],
												"src": "1118:220:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1413:110:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1459:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1468:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1471:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1461:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1461:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1461:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1434:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1443:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1430:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1430:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1455:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1426:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1426:32:11"
															},
															"nodeType": "YulIf",
															"src": "1423:52:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1484:33:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1507:9:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1494:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1494:23:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1484:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1379:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1390:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1402:6:11",
														"type": ""
													}
												],
												"src": "1343:180:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1629:102:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1639:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1651:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1662:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1647:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1647:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1639:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1681:9:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1696:6:11"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1712:3:11",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1717:1:11",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1708:3:11"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1708:11:11"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1721:1:11",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "1704:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1704:19:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1692:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1692:32:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1674:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1674:51:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1674:51:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1598:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1609:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1620:4:11",
														"type": ""
													}
												],
												"src": "1528:203:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1785:124:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1795:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1817:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1804:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1804:20:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1795:5:11"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1887:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1896:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1899:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1889:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1889:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1889:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1846:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1857:5:11"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1872:3:11",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1877:1:11",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "1868:3:11"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1868:11:11"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1881:1:11",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "1864:3:11"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1864:19:11"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1853:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1853:31:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1843:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1843:42:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1836:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1836:50:11"
															},
															"nodeType": "YulIf",
															"src": "1833:70:11"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1764:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1775:5:11",
														"type": ""
													}
												],
												"src": "1736:173:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2001:167:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2047:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2056:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2059:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2049:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2049:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2049:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2022:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2031:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2018:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2018:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2043:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2014:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2014:32:11"
															},
															"nodeType": "YulIf",
															"src": "2011:52:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2072:39:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2101:9:11"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2082:18:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2082:29:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2072:6:11"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2120:42:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2147:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2158:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2143:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2143:18:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2130:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2130:32:11"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2120:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1959:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1970:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1982:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1990:6:11",
														"type": ""
													}
												],
												"src": "1914:254:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2277:224:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2323:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2332:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2335:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2325:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2325:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2325:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2298:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2307:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2294:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2294:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2319:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2290:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2290:32:11"
															},
															"nodeType": "YulIf",
															"src": "2287:52:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2348:39:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2377:9:11"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2358:18:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2358:29:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2348:6:11"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2396:48:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2429:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2440:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2425:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2425:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2406:18:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2406:38:11"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2396:6:11"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2453:42:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2480:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2491:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2476:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2476:18:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2463:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2463:32:11"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "2453:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2227:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2238:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2250:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2258:6:11",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2266:6:11",
														"type": ""
													}
												],
												"src": "2173:328:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2576:116:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2622:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2631:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2634:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2624:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2624:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2624:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2597:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2606:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2593:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2593:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2618:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2589:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2589:32:11"
															},
															"nodeType": "YulIf",
															"src": "2586:52:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2647:39:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2676:9:11"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2657:18:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2657:29:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2647:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2542:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2553:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2565:6:11",
														"type": ""
													}
												],
												"src": "2506:186:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2798:76:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2808:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2820:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2831:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2816:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2816:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2808:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2850:9:11"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2861:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2843:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2843:25:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2843:25:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2767:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2778:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2789:4:11",
														"type": ""
													}
												],
												"src": "2697:177:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2925:114:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2935:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2957:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2944:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2944:20:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2935:5:11"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3017:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3026:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3029:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3019:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3019:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3019:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2986:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "3007:5:11"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "3000:6:11"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3000:13:11"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "2993:6:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2993:21:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2983:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2983:32:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2976:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2976:40:11"
															},
															"nodeType": "YulIf",
															"src": "2973:60:11"
														}
													]
												},
												"name": "abi_decode_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2904:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2915:5:11",
														"type": ""
													}
												],
												"src": "2879:160:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3128:170:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3174:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3183:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3186:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3176:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3176:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3176:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3149:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3158:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3145:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3145:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3170:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3141:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3141:32:11"
															},
															"nodeType": "YulIf",
															"src": "3138:52:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3199:39:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3228:9:11"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3209:18:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3209:29:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3199:6:11"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3247:45:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3277:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3288:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3273:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3273:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bool",
																	"nodeType": "YulIdentifier",
																	"src": "3257:15:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3257:35:11"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3247:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3086:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3097:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3109:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3117:6:11",
														"type": ""
													}
												],
												"src": "3044:254:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3370:113:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3416:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3425:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3428:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3418:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3418:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3418:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3391:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3400:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3387:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3387:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3412:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3383:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3383:32:11"
															},
															"nodeType": "YulIf",
															"src": "3380:52:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3441:36:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3467:9:11"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bool",
																	"nodeType": "YulIdentifier",
																	"src": "3451:15:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3451:26:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3441:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3336:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3347:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3359:6:11",
														"type": ""
													}
												],
												"src": "3303:180:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3520:95:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3537:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3544:3:11",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3549:10:11",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "3540:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3540:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3530:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3530:31:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3530:31:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3577:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3580:4:11",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3570:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3570:15:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3570:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3601:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3604:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3594:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3594:15:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3594:15:11"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "3488:127:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3750:1008:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3797:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3806:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3809:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3799:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3799:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3799:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3771:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3780:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3767:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3767:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3792:3:11",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3763:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3763:33:11"
															},
															"nodeType": "YulIf",
															"src": "3760:53:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3822:39:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3851:9:11"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3832:18:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3832:29:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3822:6:11"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3870:48:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3903:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3914:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3899:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3899:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3880:18:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3880:38:11"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3870:6:11"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3927:42:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3954:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3965:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3950:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3950:18:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3937:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3937:32:11"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "3927:6:11"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3978:46:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4009:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4020:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4005:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4005:18:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3992:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3992:32:11"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "3982:6:11",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4033:28:11",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4043:18:11",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "4037:2:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4088:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4097:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4100:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4090:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4090:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4090:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4076:6:11"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4084:2:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4073:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4073:14:11"
															},
															"nodeType": "YulIf",
															"src": "4070:34:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4113:32:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4127:9:11"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4138:6:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4123:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4123:22:11"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "4117:2:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4193:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4202:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4205:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4195:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4195:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4195:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "4172:2:11"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4176:4:11",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4168:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4168:13:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4183:7:11"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "4164:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4164:27:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4157:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4157:35:11"
															},
															"nodeType": "YulIf",
															"src": "4154:55:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4218:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "4241:2:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4228:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4228:16:11"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "4222:2:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4267:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "4269:16:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4269:18:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4269:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "4259:2:11"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4263:2:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4256:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4256:10:11"
															},
															"nodeType": "YulIf",
															"src": "4253:36:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4298:17:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4312:2:11",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "4308:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4308:7:11"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "4302:2:11",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4324:23:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4344:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4338:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4338:9:11"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "4328:6:11",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4356:71:11",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "4378:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_3",
																										"nodeType": "YulIdentifier",
																										"src": "4402:2:11"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "4406:4:11",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "4398:3:11"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4398:13:11"
																							},
																							{
																								"name": "_4",
																								"nodeType": "YulIdentifier",
																								"src": "4413:2:11"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "4394:3:11"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4394:22:11"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4418:2:11",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4390:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4390:31:11"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "4423:2:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4386:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4386:40:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4374:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4374:53:11"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "4360:10:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4486:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "4488:16:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4488:18:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4488:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "4445:10:11"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "4457:2:11"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "4442:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4442:18:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "4465:10:11"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4477:6:11"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "4462:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4462:22:11"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "4439:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4439:46:11"
															},
															"nodeType": "YulIf",
															"src": "4436:72:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4524:2:11",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "4528:10:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4517:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4517:22:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4517:22:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "4555:6:11"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "4563:2:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4548:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4548:18:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4548:18:11"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4612:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4621:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4624:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4614:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4614:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4614:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "4589:2:11"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "4593:2:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4585:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4585:11:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4598:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4581:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4581:20:11"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4603:7:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4578:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4578:33:11"
															},
															"nodeType": "YulIf",
															"src": "4575:53:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4654:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4662:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4650:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4650:15:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "4671:2:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4675:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4667:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4667:11:11"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "4680:2:11"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "4637:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4637:46:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4637:46:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "4707:6:11"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "4715:2:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4703:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4703:15:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4720:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4699:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4699:24:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4725:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4692:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4692:35:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4692:35:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4736:16:11",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "4746:6:11"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "4736:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3692:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3703:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3715:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3723:6:11",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3731:6:11",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "3739:6:11",
														"type": ""
													}
												],
												"src": "3620:1138:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4850:173:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4896:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4905:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4908:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4898:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4898:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4898:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4871:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4880:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4867:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4867:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4892:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4863:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4863:32:11"
															},
															"nodeType": "YulIf",
															"src": "4860:52:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4921:39:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4950:9:11"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "4931:18:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4931:29:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4921:6:11"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4969:48:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5002:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5013:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4998:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4998:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "4979:18:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4979:38:11"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "4969:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4808:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4819:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4831:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4839:6:11",
														"type": ""
													}
												],
												"src": "4763:260:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5083:325:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5093:22:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5107:1:11",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "5110:4:11"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "5103:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5103:12:11"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "5093:6:11"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5124:38:11",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "5154:4:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5160:1:11",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "5150:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5150:12:11"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "5128:18:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5201:31:11",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "5203:27:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "5217:6:11"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5225:4:11",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "5213:3:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5213:17:11"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "5203:6:11"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "5181:18:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5174:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5174:26:11"
															},
															"nodeType": "YulIf",
															"src": "5171:61:11"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5291:111:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5312:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5319:3:11",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5324:10:11",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "5315:3:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5315:20:11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5305:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5305:31:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5305:31:11"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5356:1:11",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5359:4:11",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5349:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5349:15:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5349:15:11"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5384:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5387:4:11",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5377:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5377:15:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5377:15:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "5247:18:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "5270:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5278:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "5267:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5267:14:11"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "5244:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5244:38:11"
															},
															"nodeType": "YulIf",
															"src": "5241:161:11"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "5063:4:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5072:6:11",
														"type": ""
													}
												],
												"src": "5028:380:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5587:223:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5604:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5615:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5597:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5597:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5597:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5638:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5649:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5634:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5634:18:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5654:2:11",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5627:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5627:30:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5627:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5677:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5688:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5673:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5673:18:11"
																	},
																	{
																		"hexValue": "4552433732313a20617070726f76616c20746f2063757272656e74206f776e65",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5693:34:11",
																		"type": "",
																		"value": "ERC721: approval to current owne"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5666:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5666:62:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5666:62:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5748:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5759:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5744:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5744:18:11"
																	},
																	{
																		"hexValue": "72",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5764:3:11",
																		"type": "",
																		"value": "r"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5737:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5737:31:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5737:31:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5777:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5789:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5800:3:11",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5785:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5785:19:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5777:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5564:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5578:4:11",
														"type": ""
													}
												],
												"src": "5413:397:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5989:251:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6006:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6017:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5999:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5999:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5999:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6040:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6051:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6036:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6036:18:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6056:2:11",
																		"type": "",
																		"value": "61"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6029:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6029:30:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6029:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6079:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6090:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6075:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6075:18:11"
																	},
																	{
																		"hexValue": "4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6095:34:11",
																		"type": "",
																		"value": "ERC721: approve caller is not to"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6068:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6068:62:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6068:62:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6150:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6161:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6146:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6146:18:11"
																	},
																	{
																		"hexValue": "6b656e206f776e6572206f7220617070726f76656420666f7220616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6166:31:11",
																		"type": "",
																		"value": "ken owner or approved for all"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6139:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6139:59:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6139:59:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6207:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6219:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6230:3:11",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6215:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6215:19:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6207:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5966:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5980:4:11",
														"type": ""
													}
												],
												"src": "5815:425:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6419:235:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6436:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6447:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6429:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6429:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6429:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6470:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6481:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6466:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6466:18:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6486:2:11",
																		"type": "",
																		"value": "45"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6459:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6459:30:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6459:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6509:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6520:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6505:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6505:18:11"
																	},
																	{
																		"hexValue": "4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e65",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6525:34:11",
																		"type": "",
																		"value": "ERC721: caller is not token owne"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6498:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6498:62:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6498:62:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6580:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6591:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6576:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6576:18:11"
																	},
																	{
																		"hexValue": "72206f7220617070726f766564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6596:15:11",
																		"type": "",
																		"value": "r or approved"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6569:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6569:43:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6569:43:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6621:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6633:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6644:3:11",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6629:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6629:19:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6621:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6396:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6410:4:11",
														"type": ""
													}
												],
												"src": "6245:409:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6833:174:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6850:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6861:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6843:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6843:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6843:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6884:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6895:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6880:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6880:18:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6900:2:11",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6873:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6873:30:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6873:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6923:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6934:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6919:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6919:18:11"
																	},
																	{
																		"hexValue": "4552433732313a20696e76616c696420746f6b656e204944",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6939:26:11",
																		"type": "",
																		"value": "ERC721: invalid token ID"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6912:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6912:54:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6912:54:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6975:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6987:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6998:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6983:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6983:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6975:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6810:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6824:4:11",
														"type": ""
													}
												],
												"src": "6659:348:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7186:231:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7203:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7214:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7196:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7196:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7196:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7237:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7248:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7233:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7233:18:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7253:2:11",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7226:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7226:30:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7226:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7276:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7287:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7272:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7272:18:11"
																	},
																	{
																		"hexValue": "4552433732313a2061646472657373207a65726f206973206e6f742061207661",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7292:34:11",
																		"type": "",
																		"value": "ERC721: address zero is not a va"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7265:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7265:62:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7265:62:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7347:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7358:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7343:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7343:18:11"
																	},
																	{
																		"hexValue": "6c6964206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7363:11:11",
																		"type": "",
																		"value": "lid owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7336:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7336:39:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7336:39:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7384:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7396:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7407:3:11",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7392:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7392:19:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7384:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7163:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7177:4:11",
														"type": ""
													}
												],
												"src": "7012:405:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7596:173:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7613:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7624:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7606:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7606:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7606:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7647:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7658:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7643:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7643:18:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7663:2:11",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7636:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7636:30:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7636:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7686:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7697:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7682:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7682:18:11"
																	},
																	{
																		"hexValue": "43616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7702:25:11",
																		"type": "",
																		"value": "Caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7675:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7675:53:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7675:53:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7737:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7749:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7760:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7745:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7745:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7737:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_15ed5034391ed5ef65b8bb8dbcb08f9b6c4034ebcf89f76344a17e1651e92b33__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7573:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7587:4:11",
														"type": ""
													}
												],
												"src": "7422:347:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7961:283:11",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7971:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7991:6:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "7985:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7985:13:11"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "7975:6:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "8033:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8041:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8029:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8029:17:11"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8048:3:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8053:6:11"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "8007:21:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "8007:53:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8007:53:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8069:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8086:3:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8091:6:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8082:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "8082:16:11"
															},
															"variables": [
																{
																	"name": "end_1",
																	"nodeType": "YulTypedName",
																	"src": "8073:5:11",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8107:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "8129:6:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "8123:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "8123:13:11"
															},
															"variables": [
																{
																	"name": "length_1",
																	"nodeType": "YulTypedName",
																	"src": "8111:8:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "8171:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8179:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8167:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8167:17:11"
																	},
																	{
																		"name": "end_1",
																		"nodeType": "YulIdentifier",
																		"src": "8186:5:11"
																	},
																	{
																		"name": "length_1",
																		"nodeType": "YulIdentifier",
																		"src": "8193:8:11"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "8145:21:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "8145:57:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8145:57:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8211:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "end_1",
																		"nodeType": "YulIdentifier",
																		"src": "8222:5:11"
																	},
																	{
																		"name": "length_1",
																		"nodeType": "YulIdentifier",
																		"src": "8229:8:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8218:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "8218:20:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8211:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7929:3:11",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7934:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7942:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7953:3:11",
														"type": ""
													}
												],
												"src": "7774:470:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8423:227:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8440:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8451:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8433:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "8433:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8433:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8474:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8485:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8470:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8470:18:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8490:2:11",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8463:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "8463:30:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8463:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8513:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8524:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8509:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8509:18:11"
																	},
																	{
																		"hexValue": "4552433732313a207472616e736665722066726f6d20696e636f727265637420",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8529:34:11",
																		"type": "",
																		"value": "ERC721: transfer from incorrect "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8502:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "8502:62:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8502:62:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8584:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8595:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8580:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8580:18:11"
																	},
																	{
																		"hexValue": "6f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8600:7:11",
																		"type": "",
																		"value": "owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8573:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "8573:35:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8573:35:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8617:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8629:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8640:3:11",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8625:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "8625:19:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8617:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8400:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8414:4:11",
														"type": ""
													}
												],
												"src": "8249:401:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8829:226:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8846:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8857:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8839:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "8839:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8839:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8880:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8891:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8876:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8876:18:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8896:2:11",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8869:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "8869:30:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8869:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8919:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8930:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8915:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8915:18:11"
																	},
																	{
																		"hexValue": "4552433732313a207472616e7366657220746f20746865207a65726f20616464",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8935:34:11",
																		"type": "",
																		"value": "ERC721: transfer to the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8908:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "8908:62:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8908:62:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8990:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9001:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8986:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8986:18:11"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9006:6:11",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8979:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "8979:34:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8979:34:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9022:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9034:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9045:3:11",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9030:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "9030:19:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9022:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8806:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8820:4:11",
														"type": ""
													}
												],
												"src": "8655:400:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9234:175:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9251:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9262:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9244:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "9244:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9244:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9285:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9296:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9281:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9281:18:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9301:2:11",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9274:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "9274:30:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9274:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9324:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9335:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9320:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9320:18:11"
																	},
																	{
																		"hexValue": "4552433732313a20617070726f766520746f2063616c6c6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9340:27:11",
																		"type": "",
																		"value": "ERC721: approve to caller"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9313:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "9313:55:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9313:55:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9377:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9389:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9400:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9385:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "9385:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9377:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9211:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9225:4:11",
														"type": ""
													}
												],
												"src": "9060:349:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9588:240:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9605:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9616:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9598:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "9598:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9598:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9639:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9650:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9635:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9635:18:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9655:2:11",
																		"type": "",
																		"value": "50"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9628:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "9628:30:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9628:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9678:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9689:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9674:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9674:18:11"
																	},
																	{
																		"hexValue": "4552433732313a207472616e7366657220746f206e6f6e204552433732315265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9694:34:11",
																		"type": "",
																		"value": "ERC721: transfer to non ERC721Re"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9667:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "9667:62:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9667:62:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9749:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9760:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9745:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9745:18:11"
																	},
																	{
																		"hexValue": "63656976657220696d706c656d656e746572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9765:20:11",
																		"type": "",
																		"value": "ceiver implementer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9738:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "9738:48:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9738:48:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9795:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9807:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9818:3:11",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9803:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "9803:19:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9795:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9565:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9579:4:11",
														"type": ""
													}
												],
												"src": "9414:414:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9865:95:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9882:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9889:3:11",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9894:10:11",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "9885:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9885:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9875:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "9875:31:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9875:31:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9922:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9925:4:11",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9915:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "9915:15:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9915:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9946:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9949:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "9939:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "9939:15:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9939:15:11"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "9833:127:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10168:286:11",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10178:29:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10196:3:11",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10201:1:11",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "10192:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10192:11:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10205:1:11",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "10188:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "10188:19:11"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "10182:2:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10223:9:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "10238:6:11"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "10246:2:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "10234:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10234:15:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10216:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "10216:34:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10216:34:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10270:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10281:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10266:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10266:18:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "10290:6:11"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "10298:2:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "10286:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10286:15:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10259:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "10259:43:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10259:43:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10322:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10333:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10318:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10318:18:11"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "10338:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10311:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "10311:34:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10311:34:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10365:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10376:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10361:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10361:18:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10381:3:11",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10354:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "10354:31:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10354:31:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10394:54:11",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "10420:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10432:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10443:3:11",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10428:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10428:19:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "10402:17:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "10402:46:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10394:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10113:9:11",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "10124:6:11",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "10132:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "10140:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10148:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10159:4:11",
														"type": ""
													}
												],
												"src": "9965:489:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10539:169:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10585:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10594:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10597:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "10587:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10587:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10587:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10560:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10569:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10556:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10556:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10581:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "10552:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "10552:32:11"
															},
															"nodeType": "YulIf",
															"src": "10549:52:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10610:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10629:9:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "10623:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "10623:16:11"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "10614:5:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10672:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "10648:23:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "10648:30:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10648:30:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10687:15:11",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "10697:5:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "10687:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10505:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "10516:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10528:6:11",
														"type": ""
													}
												],
												"src": "10459:249:11"
											}
										]
									},
									"contents": "{\n    { }\n    function validator_revert_bytes4(value)\n    {\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_bool(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_bool(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_bool(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_bool(headStart)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(0, 0) }\n        calldatacopy(add(memPtr, 32), add(_2, 32), _3)\n        mstore(add(add(memPtr, _3), 32), 0)\n        value3 := memPtr\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"ERC721: approval to current owne\")\n        mstore(add(headStart, 96), \"r\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 61)\n        mstore(add(headStart, 64), \"ERC721: approve caller is not to\")\n        mstore(add(headStart, 96), \"ken owner or approved for all\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 45)\n        mstore(add(headStart, 64), \"ERC721: caller is not token owne\")\n        mstore(add(headStart, 96), \"r or approved\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"ERC721: invalid token ID\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC721: address zero is not a va\")\n        mstore(add(headStart, 96), \"lid owner\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_15ed5034391ed5ef65b8bb8dbcb08f9b6c4034ebcf89f76344a17e1651e92b33__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"Caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        let end_1 := add(pos, length)\n        let length_1 := mload(value1)\n        copy_memory_to_memory(add(value1, 0x20), end_1, length_1)\n        end := add(end_1, length_1)\n    }\n    function abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC721: transfer from incorrect \")\n        mstore(add(headStart, 96), \"owner\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC721: transfer to the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"ERC721: approve to caller\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 50)\n        mstore(add(headStart, 64), \"ERC721: transfer to non ERC721Re\")\n        mstore(add(headStart, 96), \"ceiver implementer\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x12()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), 128)\n        tail := abi_encode_string(value3, add(headStart, 128))\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n}",
									"id": 11,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100ea5760003560e01c806370a082311161008c578063a9f51b2311610066578063a9f51b23146101e1578063b88d4fde146101f4578063c87b56dd14610207578063e985e9c51461021a57600080fd5b806370a08231146101a557806395d89b41146101c6578063a22cb465146101ce57600080fd5b8063095ea7b3116100c8578063095ea7b31461015757806323b872dd1461016c57806342842e0e1461017f5780636352211e1461019257600080fd5b806301ffc9a7146100ef57806306fdde0314610117578063081812fc1461012c575b600080fd5b6101026100fd366004610d25565b610256565b60405190151581526020015b60405180910390f35b61011f6102a8565b60405161010e9190610d9a565b61013f61013a366004610dad565b61033a565b6040516001600160a01b03909116815260200161010e565b61016a610165366004610de2565b610361565b005b61016a61017a366004610e0c565b61047b565b61016a61018d366004610e0c565b6104ac565b61013f6101a0366004610dad565b6104c7565b6101b86101b3366004610e48565b610527565b60405190815260200161010e565b61011f6105ad565b61016a6101dc366004610e73565b6105bc565b61016a6101ef366004610ea6565b6105cb565b61016a610202366004610ed7565b610643565b61011f610215366004610dad565b61067b565b610102610228366004610fb3565b6001600160a01b039182166000908152606a6020908152604080832093909416825291909152205460ff1690565b60006001600160e01b031982166380ac58cd60e01b148061028757506001600160e01b03198216635b5e139f60e01b145b806102a257506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060606580546102b790610fdd565b80601f01602080910402602001604051908101604052809291908181526020018280546102e390610fdd565b80156103305780601f1061030557610100808354040283529160200191610330565b820191906000526020600020905b81548152906001019060200180831161031357829003601f168201915b5050505050905090565b6000610345826106ef565b506000908152606960205260409020546001600160a01b031690565b600061036c826104c7565b9050806001600160a01b0316836001600160a01b0316036103de5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b03821614806103fa57506103fa8133610228565b61046c5760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c00000060648201526084016103d5565b6104768383610751565b505050565b61048533826107bf565b6104a15760405162461bcd60e51b81526004016103d590611017565b61047683838361083e565b61047683838360405180602001604052806000815250610643565b6000818152606760205260408120546001600160a01b0316806102a25760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b60448201526064016103d5565b60006001600160a01b0382166105915760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b60648201526084016103d5565b506001600160a01b031660009081526068602052604090205490565b6060606680546102b790610fdd565b6105c73383836109a2565b5050565b606b546001600160a01b031633146106255760405162461bcd60e51b815260206004820152601760248201527f43616c6c6572206973206e6f7420746865206f776e657200000000000000000060448201526064016103d5565b606b8054911515600160a01b0260ff60a01b19909216919091179055565b61064d33836107bf565b6106695760405162461bcd60e51b81526004016103d590611017565b61067584848484610a70565b50505050565b6060610686826106ef565b600061069d60408051602081019091526000815290565b905060008151116106bd57604051806020016040528060008152506106e8565b806106c784610aa3565b6040516020016106d8929190611064565b6040516020818303038152906040525b9392505050565b6000818152606760205260409020546001600160a01b031661074e5760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b60448201526064016103d5565b50565b600081815260696020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610786826104c7565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000806107cb836104c7565b9050806001600160a01b0316846001600160a01b0316148061081257506001600160a01b038082166000908152606a602090815260408083209388168352929052205460ff165b806108365750836001600160a01b031661082b8461033a565b6001600160a01b0316145b949350505050565b826001600160a01b0316610851826104c7565b6001600160a01b0316146108775760405162461bcd60e51b81526004016103d590611093565b6001600160a01b0382166108d95760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b60648201526084016103d5565b826001600160a01b03166108ec826104c7565b6001600160a01b0316146109125760405162461bcd60e51b81526004016103d590611093565b600081815260696020908152604080832080546001600160a01b03199081169091556001600160a01b0387811680865260688552838620805460001901905590871680865283862080546001019055868652606790945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b816001600160a01b0316836001600160a01b031603610a035760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c65720000000000000060448201526064016103d5565b6001600160a01b038381166000818152606a6020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610a7b84848461083e565b610a8784848484610b36565b6106755760405162461bcd60e51b81526004016103d5906110d8565b60606000610ab083610c37565b600101905060008167ffffffffffffffff811115610ad057610ad0610ec1565b6040519080825280601f01601f191660200182016040528015610afa576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a8504945084610b0457509392505050565b60006001600160a01b0384163b15610c2c57604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290610b7a90339089908890889060040161112a565b6020604051808303816000875af1925050508015610bb5575060408051601f3d908101601f19168201909252610bb291810190611167565b60015b610c12573d808015610be3576040519150601f19603f3d011682016040523d82523d6000602084013e610be8565b606091505b508051600003610c0a5760405162461bcd60e51b81526004016103d5906110d8565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610836565b506001949350505050565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b8310610c765772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310610ca2576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc100008310610cc057662386f26fc10000830492506010015b6305f5e1008310610cd8576305f5e100830492506008015b6127108310610cec57612710830492506004015b60648310610cfe576064830492506002015b600a83106102a25760010192915050565b6001600160e01b03198116811461074e57600080fd5b600060208284031215610d3757600080fd5b81356106e881610d0f565b60005b83811015610d5d578181015183820152602001610d45565b838111156106755750506000910152565b60008151808452610d86816020860160208601610d42565b601f01601f19169290920160200192915050565b6020815260006106e86020830184610d6e565b600060208284031215610dbf57600080fd5b5035919050565b80356001600160a01b0381168114610ddd57600080fd5b919050565b60008060408385031215610df557600080fd5b610dfe83610dc6565b946020939093013593505050565b600080600060608486031215610e2157600080fd5b610e2a84610dc6565b9250610e3860208501610dc6565b9150604084013590509250925092565b600060208284031215610e5a57600080fd5b6106e882610dc6565b80358015158114610ddd57600080fd5b60008060408385031215610e8657600080fd5b610e8f83610dc6565b9150610e9d60208401610e63565b90509250929050565b600060208284031215610eb857600080fd5b6106e882610e63565b634e487b7160e01b600052604160045260246000fd5b60008060008060808587031215610eed57600080fd5b610ef685610dc6565b9350610f0460208601610dc6565b925060408501359150606085013567ffffffffffffffff80821115610f2857600080fd5b818701915087601f830112610f3c57600080fd5b813581811115610f4e57610f4e610ec1565b604051601f8201601f19908116603f01168101908382118183101715610f7657610f76610ec1565b816040528281528a6020848701011115610f8f57600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b60008060408385031215610fc657600080fd5b610fcf83610dc6565b9150610e9d60208401610dc6565b600181811c90821680610ff157607f821691505b60208210810361101157634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602d908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526c1c881bdc88185c1c1c9bdd9959609a1b606082015260800190565b60008351611076818460208801610d42565b83519083019061108a818360208801610d42565b01949350505050565b60208082526025908201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060408201526437bbb732b960d91b606082015260800190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061115d90830184610d6e565b9695505050505050565b60006020828403121561117957600080fd5b81516106e881610d0f56fea264697066735822122035c795b59e81869432db45df7f8a7a365bb4e3f0e2b08ebd1b207c4a2dfe8cc564736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xEA JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA9F51B23 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA9F51B23 EQ PUSH2 0x1E1 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x1F4 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x207 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x21A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1A5 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1C6 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x1CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0xC8 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x157 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x16C JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x17F JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x192 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x117 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x12C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x102 PUSH2 0xFD CALLDATASIZE PUSH1 0x4 PUSH2 0xD25 JUMP JUMPDEST PUSH2 0x256 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11F PUSH2 0x2A8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10E SWAP2 SWAP1 PUSH2 0xD9A JUMP JUMPDEST PUSH2 0x13F PUSH2 0x13A CALLDATASIZE PUSH1 0x4 PUSH2 0xDAD JUMP JUMPDEST PUSH2 0x33A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x10E JUMP JUMPDEST PUSH2 0x16A PUSH2 0x165 CALLDATASIZE PUSH1 0x4 PUSH2 0xDE2 JUMP JUMPDEST PUSH2 0x361 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x16A PUSH2 0x17A CALLDATASIZE PUSH1 0x4 PUSH2 0xE0C JUMP JUMPDEST PUSH2 0x47B JUMP JUMPDEST PUSH2 0x16A PUSH2 0x18D CALLDATASIZE PUSH1 0x4 PUSH2 0xE0C JUMP JUMPDEST PUSH2 0x4AC JUMP JUMPDEST PUSH2 0x13F PUSH2 0x1A0 CALLDATASIZE PUSH1 0x4 PUSH2 0xDAD JUMP JUMPDEST PUSH2 0x4C7 JUMP JUMPDEST PUSH2 0x1B8 PUSH2 0x1B3 CALLDATASIZE PUSH1 0x4 PUSH2 0xE48 JUMP JUMPDEST PUSH2 0x527 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x10E JUMP JUMPDEST PUSH2 0x11F PUSH2 0x5AD JUMP JUMPDEST PUSH2 0x16A PUSH2 0x1DC CALLDATASIZE PUSH1 0x4 PUSH2 0xE73 JUMP JUMPDEST PUSH2 0x5BC JUMP JUMPDEST PUSH2 0x16A PUSH2 0x1EF CALLDATASIZE PUSH1 0x4 PUSH2 0xEA6 JUMP JUMPDEST PUSH2 0x5CB JUMP JUMPDEST PUSH2 0x16A PUSH2 0x202 CALLDATASIZE PUSH1 0x4 PUSH2 0xED7 JUMP JUMPDEST PUSH2 0x643 JUMP JUMPDEST PUSH2 0x11F PUSH2 0x215 CALLDATASIZE PUSH1 0x4 PUSH2 0xDAD JUMP JUMPDEST PUSH2 0x67B JUMP JUMPDEST PUSH2 0x102 PUSH2 0x228 CALLDATASIZE PUSH1 0x4 PUSH2 0xFB3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6A PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x287 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x2A2 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x65 DUP1 SLOAD PUSH2 0x2B7 SWAP1 PUSH2 0xFDD JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2E3 SWAP1 PUSH2 0xFDD JUMP JUMPDEST DUP1 ISZERO PUSH2 0x330 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x305 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x330 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x313 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x345 DUP3 PUSH2 0x6EF JUMP JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x69 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x36C DUP3 PUSH2 0x4C7 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x3DE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ DUP1 PUSH2 0x3FA JUMPI POP PUSH2 0x3FA DUP2 CALLER PUSH2 0x228 JUMP JUMPDEST PUSH2 0x46C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6B656E206F776E6572206F7220617070726F76656420666F7220616C6C000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3D5 JUMP JUMPDEST PUSH2 0x476 DUP4 DUP4 PUSH2 0x751 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x485 CALLER DUP3 PUSH2 0x7BF JUMP JUMPDEST PUSH2 0x4A1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3D5 SWAP1 PUSH2 0x1017 JUMP JUMPDEST PUSH2 0x476 DUP4 DUP4 DUP4 PUSH2 0x83E JUMP JUMPDEST PUSH2 0x476 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x643 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x67 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x2A2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x115490CDCC8C4E881A5B9D985B1A59081D1BDAD95B881251 PUSH1 0x42 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3D5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x591 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A2061646472657373207A65726F206973206E6F742061207661 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x3634B21037BBB732B9 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3D5 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x68 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x66 DUP1 SLOAD PUSH2 0x2B7 SWAP1 PUSH2 0xFDD JUMP JUMPDEST PUSH2 0x5C7 CALLER DUP4 DUP4 PUSH2 0x9A2 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x6B SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x625 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616C6C6572206973206E6F7420746865206F776E6572000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3D5 JUMP JUMPDEST PUSH1 0x6B DUP1 SLOAD SWAP2 ISZERO ISZERO PUSH1 0x1 PUSH1 0xA0 SHL MUL PUSH1 0xFF PUSH1 0xA0 SHL NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x64D CALLER DUP4 PUSH2 0x7BF JUMP JUMPDEST PUSH2 0x669 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3D5 SWAP1 PUSH2 0x1017 JUMP JUMPDEST PUSH2 0x675 DUP5 DUP5 DUP5 DUP5 PUSH2 0xA70 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x686 DUP3 PUSH2 0x6EF JUMP JUMPDEST PUSH1 0x0 PUSH2 0x69D PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x6BD JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x6E8 JUMP JUMPDEST DUP1 PUSH2 0x6C7 DUP5 PUSH2 0xAA3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x6D8 SWAP3 SWAP2 SWAP1 PUSH2 0x1064 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x67 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x74E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x115490CDCC8C4E881A5B9D985B1A59081D1BDAD95B881251 PUSH1 0x42 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3D5 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x69 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH2 0x786 DUP3 PUSH2 0x4C7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x7CB DUP4 PUSH2 0x4C7 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x812 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6A PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP9 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST DUP1 PUSH2 0x836 JUMPI POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x82B DUP5 PUSH2 0x33A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x851 DUP3 PUSH2 0x4C7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x877 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3D5 SWAP1 PUSH2 0x1093 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x8D9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3D5 JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x8EC DUP3 PUSH2 0x4C7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x912 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3D5 SWAP1 PUSH2 0x1093 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x69 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND SWAP1 SWAP2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND DUP1 DUP7 MSTORE PUSH1 0x68 DUP6 MSTORE DUP4 DUP7 KECCAK256 DUP1 SLOAD PUSH1 0x0 NOT ADD SWAP1 SSTORE SWAP1 DUP8 AND DUP1 DUP7 MSTORE DUP4 DUP7 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE DUP7 DUP7 MSTORE PUSH1 0x67 SWAP1 SWAP5 MSTORE DUP3 DUP6 KECCAK256 DUP1 SLOAD SWAP1 SWAP3 AND DUP5 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD DUP5 SWAP4 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 POP POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0xA03 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3D5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6A PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0xA7B DUP5 DUP5 DUP5 PUSH2 0x83E JUMP JUMPDEST PUSH2 0xA87 DUP5 DUP5 DUP5 DUP5 PUSH2 0xB36 JUMP JUMPDEST PUSH2 0x675 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3D5 SWAP1 PUSH2 0x10D8 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0xAB0 DUP4 PUSH2 0xC37 JUMP JUMPDEST PUSH1 0x1 ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xAD0 JUMPI PUSH2 0xAD0 PUSH2 0xEC1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xAFA JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 ADD PUSH1 0x20 ADD JUMPDEST PUSH1 0x0 NOT ADD PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DIV SWAP5 POP DUP5 PUSH2 0xB04 JUMPI POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0xC2C JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0xB7A SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x112A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xBB5 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xBB2 SWAP2 DUP2 ADD SWAP1 PUSH2 0x1167 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xC12 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0xBE3 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xBE8 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0xC0A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3D5 SWAP1 PUSH2 0x10D8 JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP PUSH2 0x836 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 LT PUSH2 0xC76 JUMPI PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 DIV SWAP3 POP PUSH1 0x40 ADD JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0xCA2 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DIV SWAP3 POP PUSH1 0x20 ADD JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0xCC0 JUMPI PUSH7 0x2386F26FC10000 DUP4 DIV SWAP3 POP PUSH1 0x10 ADD JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0xCD8 JUMPI PUSH4 0x5F5E100 DUP4 DIV SWAP3 POP PUSH1 0x8 ADD JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0xCEC JUMPI PUSH2 0x2710 DUP4 DIV SWAP3 POP PUSH1 0x4 ADD JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0xCFE JUMPI PUSH1 0x64 DUP4 DIV SWAP3 POP PUSH1 0x2 ADD JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x2A2 JUMPI PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x74E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD37 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x6E8 DUP2 PUSH2 0xD0F JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xD5D JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xD45 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x675 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0xD86 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0xD42 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x6E8 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xD6E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDBF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xDDD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDF5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDFE DUP4 PUSH2 0xDC6 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xE21 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE2A DUP5 PUSH2 0xDC6 JUMP JUMPDEST SWAP3 POP PUSH2 0xE38 PUSH1 0x20 DUP6 ADD PUSH2 0xDC6 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE5A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6E8 DUP3 PUSH2 0xDC6 JUMP JUMPDEST DUP1 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xDDD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE86 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE8F DUP4 PUSH2 0xDC6 JUMP JUMPDEST SWAP2 POP PUSH2 0xE9D PUSH1 0x20 DUP5 ADD PUSH2 0xE63 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEB8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6E8 DUP3 PUSH2 0xE63 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xEED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEF6 DUP6 PUSH2 0xDC6 JUMP JUMPDEST SWAP4 POP PUSH2 0xF04 PUSH1 0x20 DUP7 ADD PUSH2 0xDC6 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xF28 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xF3C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xF4E JUMPI PUSH2 0xF4E PUSH2 0xEC1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0xF76 JUMPI PUSH2 0xF76 PUSH2 0xEC1 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP11 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0xF8F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xFC6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xFCF DUP4 PUSH2 0xDC6 JUMP JUMPDEST SWAP2 POP PUSH2 0xE9D PUSH1 0x20 DUP5 ADD PUSH2 0xDC6 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xFF1 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1011 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2D SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x40 DUP3 ADD MSTORE PUSH13 0x1C881BDC88185C1C1C9BDD9959 PUSH1 0x9A SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0x1076 DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0xD42 JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0x108A DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0xD42 JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x37BBB732B9 PUSH1 0xD9 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x32 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x40 DUP3 ADD MSTORE PUSH18 0x31B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x71 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x115D SWAP1 DUP4 ADD DUP5 PUSH2 0xD6E JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1179 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x6E8 DUP2 PUSH2 0xD0F JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATALOAD 0xC7 SWAP6 0xB5 SWAP15 DUP2 DUP7 SWAP5 ORIGIN 0xDB GASLIMIT 0xDF PUSH32 0x8A7A365BB4E3F0E2B08EBD1B207C4A2DFE8CC564736F6C634300080D00330000 ",
							"sourceMap": "751:17704:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2076:344;;;;;;:::i;:::-;;:::i;:::-;;;565:14:11;;558:22;540:41;;528:2;513:18;2076:344:1;;;;;;;;3021:98;;;:::i;:::-;;;;;;;:::i;4612:167::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1692:32:11;;;1674:51;;1662:2;1647:18;4612:167:1;1528:203:11;4134:417:1;;;;;;:::i;:::-;;:::i;:::-;;5381:326;;;;;;:::i;:::-;;:::i;5773:179::-;;;;;;:::i;:::-;;:::i;2740:219::-;;;;;;:::i;:::-;;:::i;2479:204::-;;;;;;:::i;:::-;;:::i;:::-;;;2843:25:11;;;2831:2;2816:18;2479:204:1;2697:177:11;3183:102:1;;;:::i;4846:153::-;;;;;;:::i;:::-;;:::i;5005:86::-;;;;;;:::i;:::-;;:::i;6018:314::-;;;;;;:::i;:::-;;:::i;3351:276::-;;;;;;:::i;:::-;;:::i;5157:162::-;;;;;;:::i;:::-;-1:-1:-1;;;;;5277:25:1;;;5254:4;5277:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;5157:162;2076:344;2200:4;-1:-1:-1;;;;;;2235:51:1;;-1:-1:-1;;;2235:51:1;;:126;;-1:-1:-1;;;;;;;2302:59:1;;-1:-1:-1;;;2302:59:1;2235:126;:178;;;-1:-1:-1;;;;;;;;;;1168:51:8;;;2377:36:1;2216:197;2076:344;-1:-1:-1;;2076:344:1:o;3021:98::-;3075:13;3107:5;3100:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3021:98;:::o;4612:167::-;4688:7;4707:23;4722:7;4707:14;:23::i;:::-;-1:-1:-1;4748:24:1;;;;:15;:24;;;;;;-1:-1:-1;;;;;4748:24:1;;4612:167::o;4134:417::-;4214:13;4230:34;4256:7;4230:25;:34::i;:::-;4214:50;;4288:5;-1:-1:-1;;;;;4282:11:1;:2;-1:-1:-1;;;;;4282:11:1;;4274:57;;;;-1:-1:-1;;;4274:57:1;;5615:2:11;4274:57:1;;;5597:21:11;5654:2;5634:18;;;5627:30;5693:34;5673:18;;;5666:62;-1:-1:-1;;;5744:18:11;;;5737:31;5785:19;;4274:57:1;;;;;;;;;929:10:6;-1:-1:-1;;;;;4363:21:1;;;;:62;;-1:-1:-1;4388:37:1;4405:5;929:10:6;5157:162:1;:::i;4388:37::-;4342:170;;;;-1:-1:-1;;;4342:170:1;;6017:2:11;4342:170:1;;;5999:21:11;6056:2;6036:18;;;6029:30;6095:34;6075:18;;;6068:62;6166:31;6146:18;;;6139:59;6215:19;;4342:170:1;5815:425:11;4342:170:1;4523:21;4532:2;4536:7;4523:8;:21::i;:::-;4204:347;4134:417;;:::o;5381:326::-;5570:41;929:10:6;5603:7:1;5570:18;:41::i;:::-;5562:99;;;;-1:-1:-1;;;5562:99:1;;;;;;;:::i;:::-;5672:28;5682:4;5688:2;5692:7;5672:9;:28::i;5773:179::-;5906:39;5923:4;5929:2;5933:7;5906:39;;;;;;;;;;;;:16;:39::i;2740:219::-;2812:7;7699:16;;;:7;:16;;;;;;-1:-1:-1;;;;;7699:16:1;;2874:56;;;;-1:-1:-1;;;2874:56:1;;6861:2:11;2874:56:1;;;6843:21:11;6900:2;6880:18;;;6873:30;-1:-1:-1;;;6919:18:11;;;6912:54;6983:18;;2874:56:1;6659:348:11;2479:204:1;2551:7;-1:-1:-1;;;;;2578:19:1;;2570:73;;;;-1:-1:-1;;;2570:73:1;;7214:2:11;2570:73:1;;;7196:21:11;7253:2;7233:18;;;7226:30;7292:34;7272:18;;;7265:62;-1:-1:-1;;;7343:18:11;;;7336:39;7392:19;;2570:73:1;7012:405:11;2570:73:1;-1:-1:-1;;;;;;2660:16:1;;;;;:9;:16;;;;;;;2479:204::o;3183:102::-;3239:13;3271:7;3264:14;;;;;:::i;4846:153::-;4940:52;929:10:6;4973:8:1;4983;4940:18;:52::i;:::-;4846:153;;:::o;5005:86::-;4023:7;;-1:-1:-1;;;;;4023:7:1;4009:10;:21;4001:57;;;;-1:-1:-1;;;4001:57:1;;7624:2:11;4001:57:1;;;7606:21:11;7663:2;7643:18;;;7636:30;7702:25;7682:18;;;7675:53;7745:18;;4001:57:1;7422:347:11;4001:57:1;5067:9:::1;:17:::0;;;::::1;;-1:-1:-1::0;;;5067:17:1::1;-1:-1:-1::0;;;;5067:17:1;;::::1;::::0;;;::::1;::::0;;5005:86::o;6018:314::-;6186:41;929:10:6;6219:7:1;6186:18;:41::i;:::-;6178:99;;;;-1:-1:-1;;;6178:99:1;;;;;;;:::i;:::-;6287:38;6301:4;6307:2;6311:7;6320:4;6287:13;:38::i;:::-;6018:314;;;;:::o;3351:276::-;3424:13;3449:23;3464:7;3449:14;:23::i;:::-;3483:21;3507:10;3945:9;;;;;;;;;-1:-1:-1;3945:9:1;;;3869:92;3507:10;3483:34;;3558:1;3540:7;3534:21;:25;:86;;;;;;;;;;;;;;;;;3586:7;3595:18;:7;:16;:18::i;:::-;3569:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3534:86;3527:93;3351:276;-1:-1:-1;;;3351:276:1:o;14301:133::-;8090:4;7699:16;;;:7;:16;;;;;;-1:-1:-1;;;;;7699:16:1;14374:53;;;;-1:-1:-1;;;14374:53:1;;6861:2:11;14374:53:1;;;6843:21:11;6900:2;6880:18;;;6873:30;-1:-1:-1;;;6919:18:11;;;6912:54;6983:18;;14374:53:1;6659:348:11;14374:53:1;14301:133;:::o;13592:182::-;13666:24;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;13666:29:1;-1:-1:-1;;;;;13666:29:1;;;;;;;;:24;;13719:34;13666:24;13719:25;:34::i;:::-;-1:-1:-1;;;;;13710:57:1;;;;;;;;;;;13592:182;;:::o;8309:272::-;8402:4;8418:13;8434:34;8460:7;8434:25;:34::i;:::-;8418:50;;8497:5;-1:-1:-1;;;;;8486:16:1;:7;-1:-1:-1;;;;;8486:16:1;;:52;;;-1:-1:-1;;;;;;5277:25:1;;;5254:4;5277:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;8506:32;8486:87;;;;8566:7;-1:-1:-1;;;;;8542:31:1;:20;8554:7;8542:11;:20::i;:::-;-1:-1:-1;;;;;8542:31:1;;8486:87;8478:96;8309:272;-1:-1:-1;;;;8309:272:1:o;12225:1255::-;12390:4;-1:-1:-1;;;;;12352:42:1;:34;12378:7;12352:25;:34::i;:::-;-1:-1:-1;;;;;12352:42:1;;12344:92;;;;-1:-1:-1;;;12344:92:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;12454:16:1;;12446:65;;;;-1:-1:-1;;;12446:65:1;;8857:2:11;12446:65:1;;;8839:21:11;8896:2;8876:18;;;8869:30;8935:34;8915:18;;;8908:62;-1:-1:-1;;;8986:18:11;;;8979:34;9030:19;;12446:65:1;8655:400:11;12446:65:1;12702:4;-1:-1:-1;;;;;12664:42:1;:34;12690:7;12664:25;:34::i;:::-;-1:-1:-1;;;;;12664:42:1;;12656:92;;;;-1:-1:-1;;;12656:92:1;;;;;;;:::i;:::-;12817:24;;;;:15;:24;;;;;;;;12810:31;;-1:-1:-1;;;;;;12810:31:1;;;;;;-1:-1:-1;;;;;13285:15:1;;;;;;:9;:15;;;;;:20;;-1:-1:-1;;13285:20:1;;;13319:13;;;;;;;;;:18;;12810:31;13319:18;;;13357:16;;;:7;:16;;;;;;:21;;;;;;;;;;13394:27;;12833:7;;13394:27;;;4204:347;4134:417;;:::o;13910:307::-;14060:8;-1:-1:-1;;;;;14051:17:1;:5;-1:-1:-1;;;;;14051:17:1;;14043:55;;;;-1:-1:-1;;;14043:55:1;;9262:2:11;14043:55:1;;;9244:21:11;9301:2;9281:18;;;9274:30;9340:27;9320:18;;;9313:55;9385:18;;14043:55:1;9060:349:11;14043:55:1;-1:-1:-1;;;;;14108:25:1;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;14108:46:1;;;;;;;;;;14169:41;;540::11;;;14169::1;;513:18:11;14169:41:1;;;;;;;13910:307;;;:::o;7193:305::-;7343:28;7353:4;7359:2;7363:7;7343:9;:28::i;:::-;7389:47;7412:4;7418:2;7422:7;7431:4;7389:22;:47::i;:::-;7381:110;;;;-1:-1:-1;;;7381:110:1;;;;;;;:::i;437:707:7:-;493:13;542:14;559:28;581:5;559:21;:28::i;:::-;590:1;559:32;542:49;;605:20;639:6;628:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;628:18:7;-1:-1:-1;605:41:7;-1:-1:-1;766:28:7;;;782:2;766:28;821:280;-1:-1:-1;;852:5:7;-1:-1:-1;;;986:2:7;975:14;;970:30;852:5;957:44;1045:2;1036:11;;;-1:-1:-1;1065:21:7;821:280;1065:21;-1:-1:-1;1121:6:7;437:707;-1:-1:-1;;;437:707:7:o;14986:853:1:-;15135:4;-1:-1:-1;;;;;15155:13:1;;1476:19:5;:23;15151:682:1;;15190:82;;-1:-1:-1;;;15190:82:1;;-1:-1:-1;;;;;15190:47:1;;;;;:82;;929:10:6;;15252:4:1;;15258:7;;15267:4;;15190:82;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;15190:82:1;;;;;;;;-1:-1:-1;;15190:82:1;;;;;;;;;;;;:::i;:::-;;;15186:595;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15450:6;:13;15467:1;15450:18;15446:321;;15492:60;;-1:-1:-1;;;15492:60:1;;;;;;;:::i;15446:321::-;15719:6;15713:13;15704:6;15700:2;15696:15;15689:38;15186:595;-1:-1:-1;;;;;;15322:62:1;-1:-1:-1;;;15322:62:1;;-1:-1:-1;15315:69:1;;15151:682;-1:-1:-1;15818:4:1;14986:853;;;;;;:::o;9900:890:10:-;9953:7;;-1:-1:-1;;;10028:15:10;;10024:99;;-1:-1:-1;;;10063:15:10;;;-1:-1:-1;10106:2:10;10096:12;10024:99;10149:6;10140:5;:15;10136:99;;10184:6;10175:15;;;-1:-1:-1;10218:2:10;10208:12;10136:99;10261:6;10252:5;:15;10248:99;;10296:6;10287:15;;;-1:-1:-1;10330:2:10;10320:12;10248:99;10373:5;10364;:14;10360:96;;10407:5;10398:14;;;-1:-1:-1;10440:1:10;10430:11;10360:96;10482:5;10473;:14;10469:96;;10516:5;10507:14;;;-1:-1:-1;10549:1:10;10539:11;10469:96;10591:5;10582;:14;10578:96;;10625:5;10616:14;;;-1:-1:-1;10658:1:10;10648:11;10578:96;10700:5;10691;:14;10687:64;;10735:1;10725:11;10777:6;9900:890;-1:-1:-1;;9900:890:10:o;14:131:11:-;-1:-1:-1;;;;;;88:32:11;;78:43;;68:71;;135:1;132;125:12;150:245;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;592:258::-;664:1;674:113;688:6;685:1;682:13;674:113;;;764:11;;;758:18;745:11;;;738:39;710:2;703:10;674:113;;;805:6;802:1;799:13;796:48;;;-1:-1:-1;;840:1:11;822:16;;815:27;592:258::o;855:::-;897:3;935:5;929:12;962:6;957:3;950:19;978:63;1034:6;1027:4;1022:3;1018:14;1011:4;1004:5;1000:16;978:63;:::i;:::-;1095:2;1074:15;-1:-1:-1;;1070:29:11;1061:39;;;;1102:4;1057:50;;855:258;-1:-1:-1;;855:258:11:o;1118:220::-;1267:2;1256:9;1249:21;1230:4;1287:45;1328:2;1317:9;1313:18;1305:6;1287:45;:::i;1343:180::-;1402:6;1455:2;1443:9;1434:7;1430:23;1426:32;1423:52;;;1471:1;1468;1461:12;1423:52;-1:-1:-1;1494:23:11;;1343:180;-1:-1:-1;1343:180:11:o;1736:173::-;1804:20;;-1:-1:-1;;;;;1853:31:11;;1843:42;;1833:70;;1899:1;1896;1889:12;1833:70;1736:173;;;:::o;1914:254::-;1982:6;1990;2043:2;2031:9;2022:7;2018:23;2014:32;2011:52;;;2059:1;2056;2049:12;2011:52;2082:29;2101:9;2082:29;:::i;:::-;2072:39;2158:2;2143:18;;;;2130:32;;-1:-1:-1;;;1914:254:11:o;2173:328::-;2250:6;2258;2266;2319:2;2307:9;2298:7;2294:23;2290:32;2287:52;;;2335:1;2332;2325:12;2287:52;2358:29;2377:9;2358:29;:::i;:::-;2348:39;;2406:38;2440:2;2429:9;2425:18;2406:38;:::i;:::-;2396:48;;2491:2;2480:9;2476:18;2463:32;2453:42;;2173:328;;;;;:::o;2506:186::-;2565:6;2618:2;2606:9;2597:7;2593:23;2589:32;2586:52;;;2634:1;2631;2624:12;2586:52;2657:29;2676:9;2657:29;:::i;2879:160::-;2944:20;;3000:13;;2993:21;2983:32;;2973:60;;3029:1;3026;3019:12;3044:254;3109:6;3117;3170:2;3158:9;3149:7;3145:23;3141:32;3138:52;;;3186:1;3183;3176:12;3138:52;3209:29;3228:9;3209:29;:::i;:::-;3199:39;;3257:35;3288:2;3277:9;3273:18;3257:35;:::i;:::-;3247:45;;3044:254;;;;;:::o;3303:180::-;3359:6;3412:2;3400:9;3391:7;3387:23;3383:32;3380:52;;;3428:1;3425;3418:12;3380:52;3451:26;3467:9;3451:26;:::i;3488:127::-;3549:10;3544:3;3540:20;3537:1;3530:31;3580:4;3577:1;3570:15;3604:4;3601:1;3594:15;3620:1138;3715:6;3723;3731;3739;3792:3;3780:9;3771:7;3767:23;3763:33;3760:53;;;3809:1;3806;3799:12;3760:53;3832:29;3851:9;3832:29;:::i;:::-;3822:39;;3880:38;3914:2;3903:9;3899:18;3880:38;:::i;:::-;3870:48;;3965:2;3954:9;3950:18;3937:32;3927:42;;4020:2;4009:9;4005:18;3992:32;4043:18;4084:2;4076:6;4073:14;4070:34;;;4100:1;4097;4090:12;4070:34;4138:6;4127:9;4123:22;4113:32;;4183:7;4176:4;4172:2;4168:13;4164:27;4154:55;;4205:1;4202;4195:12;4154:55;4241:2;4228:16;4263:2;4259;4256:10;4253:36;;;4269:18;;:::i;:::-;4344:2;4338:9;4312:2;4398:13;;-1:-1:-1;;4394:22:11;;;4418:2;4390:31;4386:40;4374:53;;;4442:18;;;4462:22;;;4439:46;4436:72;;;4488:18;;:::i;:::-;4528:10;4524:2;4517:22;4563:2;4555:6;4548:18;4603:7;4598:2;4593;4589;4585:11;4581:20;4578:33;4575:53;;;4624:1;4621;4614:12;4575:53;4680:2;4675;4671;4667:11;4662:2;4654:6;4650:15;4637:46;4725:1;4720:2;4715;4707:6;4703:15;4699:24;4692:35;4746:6;4736:16;;;;;;;3620:1138;;;;;;;:::o;4763:260::-;4831:6;4839;4892:2;4880:9;4871:7;4867:23;4863:32;4860:52;;;4908:1;4905;4898:12;4860:52;4931:29;4950:9;4931:29;:::i;:::-;4921:39;;4979:38;5013:2;5002:9;4998:18;4979:38;:::i;5028:380::-;5107:1;5103:12;;;;5150;;;5171:61;;5225:4;5217:6;5213:17;5203:27;;5171:61;5278:2;5270:6;5267:14;5247:18;5244:38;5241:161;;5324:10;5319:3;5315:20;5312:1;5305:31;5359:4;5356:1;5349:15;5387:4;5384:1;5377:15;5241:161;;5028:380;;;:::o;6245:409::-;6447:2;6429:21;;;6486:2;6466:18;;;6459:30;6525:34;6520:2;6505:18;;6498:62;-1:-1:-1;;;6591:2:11;6576:18;;6569:43;6644:3;6629:19;;6245:409::o;7774:470::-;7953:3;7991:6;7985:13;8007:53;8053:6;8048:3;8041:4;8033:6;8029:17;8007:53;:::i;:::-;8123:13;;8082:16;;;;8145:57;8123:13;8082:16;8179:4;8167:17;;8145:57;:::i;:::-;8218:20;;7774:470;-1:-1:-1;;;;7774:470:11:o;8249:401::-;8451:2;8433:21;;;8490:2;8470:18;;;8463:30;8529:34;8524:2;8509:18;;8502:62;-1:-1:-1;;;8595:2:11;8580:18;;8573:35;8640:3;8625:19;;8249:401::o;9414:414::-;9616:2;9598:21;;;9655:2;9635:18;;;9628:30;9694:34;9689:2;9674:18;;9667:62;-1:-1:-1;;;9760:2:11;9745:18;;9738:48;9818:3;9803:19;;9414:414::o;9965:489::-;-1:-1:-1;;;;;10234:15:11;;;10216:34;;10286:15;;10281:2;10266:18;;10259:43;10333:2;10318:18;;10311:34;;;10381:3;10376:2;10361:18;;10354:31;;;10159:4;;10402:46;;10428:19;;10420:6;10402:46;:::i;:::-;10394:54;9965:489;-1:-1:-1;;;;;;9965:489:11:o;10459:249::-;10528:6;10581:2;10569:9;10560:7;10556:23;10552:32;10549:52;;;10597:1;10594;10587:12;10549:52;10629:9;10623:16;10648:30;10672:5;10648:30;:::i"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "907600",
								"executionCost": "942",
								"totalCost": "908542"
							},
							"external": {
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2612",
								"getApproved(uint256)": "4792",
								"isApprovedForAll(address,address)": "infinite",
								"name()": "infinite",
								"ownerOf(uint256)": "2627",
								"safeTransferFrom(address,address,uint256)": "infinite",
								"safeTransferFrom(address,address,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "infinite",
								"setIsBounded(bool)": "26717",
								"supportsInterface(bytes4)": "534",
								"symbol()": "infinite",
								"tokenURI(uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"__ERC721_init(string memory,string memory,address)": "infinite",
								"__ERC721_init_unchained(string memory,string memory)": "infinite",
								"__unsafe_increaseBalance(address,uint256)": "infinite",
								"_afterTokenTransfer(address,address,uint256,uint256)": "infinite",
								"_approve(address,uint256)": "infinite",
								"_baseURI()": "infinite",
								"_beforeTokenTransfer(address,address,uint256,uint256)": "infinite",
								"_burn(uint256)": "infinite",
								"_checkOnERC721Received(address,address,uint256,bytes memory)": "infinite",
								"_exists(uint256)": "infinite",
								"_isApprovedOrOwner(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_ownerOf(uint256)": "infinite",
								"_requireMinted(uint256)": "infinite",
								"_safeMint(address,uint256)": "infinite",
								"_safeMint(address,uint256,bytes memory)": "infinite",
								"_safeTransfer(address,address,uint256,bytes memory)": "infinite",
								"_setApprovalForAll(address,address,bool)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 751,
									"end": 18455,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 751,
									"end": 18455,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 751,
									"end": 18455,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 751,
									"end": 18455,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 751,
									"end": 18455,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 751,
									"end": 18455,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 751,
									"end": 18455,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 751,
									"end": 18455,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 751,
									"end": 18455,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 18455,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 751,
									"end": 18455,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 751,
									"end": 18455,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 751,
									"end": 18455,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 751,
									"end": 18455,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 751,
									"end": 18455,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 751,
									"end": 18455,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 751,
									"end": 18455,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 751,
									"end": 18455,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 18455,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 751,
									"end": 18455,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 18455,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122035c795b59e81869432db45df7f8a7a365bb4e3f0e2b08ebd1b207c4a2dfe8cc564736f6c634300080d0033",
									".code": [
										{
											"begin": 751,
											"end": 18455,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 751,
											"end": 18455,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 751,
											"end": 18455,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 751,
											"end": 18455,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 751,
											"end": 18455,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 751,
											"end": 18455,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 751,
											"end": 18455,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 751,
											"end": 18455,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 751,
											"end": 18455,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 751,
											"end": 18455,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 751,
											"end": 18455,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 751,
											"end": 18455,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 751,
											"end": 18455,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 751,
											"end": 18455,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 751,
											"end": 18455,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 751,
											"end": 18455,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 751,
											"end": 18455,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 751,
											"end": 18455,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 751,
											"end": 18455,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 751,
											"end": 18455,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 751,
											"end": 18455,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 751,
											"end": 18455,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 751,
											"end": 18455,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 751,
											"end": 18455,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 751,
											"end": 18455,
											"name": "PUSH",
											"source": 1,
											"value": "70A08231"
										},
										{
											"begin": 751,
											"end": 18455,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 751,
											"end": 18455,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 751,
											"end": 18455,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 751,
											"end": 18455,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 751,
											"end": 18455,
											"name": "PUSH",
											"source": 1,
											"value": "A9F51B23"
										},
										{
											"begin": 751,
											"end": 18455,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 751,
											"end": 18455,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 751,
											"end": 18455,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 751,
											"end": 18455,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 751,
											"end": 18455,
											"name": "PUSH",
											"source": 1,
											"value": "A9F51B23"
										},
										{
											"begin": 751,
											"end": 18455,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 751,
											"end": 18455,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 751,
											"end": 18455,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 751,
											"end": 18455,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 751,
											"end": 18455,
											"name": "PUSH",
											"source": 1,
											"value": "B88D4FDE"
										},
										{
											"begin": 751,
											"end": 18455,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 751,
											"end": 18455,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 751,
											"end": 18455,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 751,
											"end": 18455,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 751,
											"end": 18455,
											"name": "PUSH",
											"source": 1,
											"value": "C87B56DD"
										},
										{
											"begin": 751,
											"end": 18455,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 751,
											"end": 18455,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 751,
											"end": 18455,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 751,
											"end": 18455,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 751,
											"end": 18455,
											"name": "PUSH",
											"source": 1,
											"value": "E985E9C5"
										},
										{
											"begin": 751,
											"end": 18455,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 751,
											"end": 18455,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 751,
											"end": 18455,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 751,
											"end": 18455,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 751,
											"end": 18455,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 751,
											"end": 18455,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 751,
											"end": 18455,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 751,
											"end": 18455,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 751,
											"end": 18455,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 751,
											"end": 18455,
											"name": "PUSH",
											"source": 1,
											"value": "70A08231"
										},
										{
											"begin": 751,
											"end": 18455,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 751,
											"end": 18455,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 751,
											"end": 18455,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 751,
											"end": 18455,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 751,
											"end": 18455,
											"name": "PUSH",
											"source": 1,
											"value": "95D89B41"
										},
										{
											"begin": 751,
											"end": 18455,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 751,
											"end": 18455,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 751,
											"end": 18455,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 751,
											"end": 18455,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 751,
											"end": 18455,
											"name": "PUSH",
											"source": 1,
											"value": "A22CB465"
										},
										{
											"begin": 751,
											"end": 18455,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 751,
											"end": 18455,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 751,
											"end": 18455,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 751,
											"end": 18455,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 751,
											"end": 18455,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 751,
											"end": 18455,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 751,
											"end": 18455,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 751,
											"end": 18455,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 751,
											"end": 18455,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 751,
											"end": 18455,
											"name": "PUSH",
											"source": 1,
											"value": "95EA7B3"
										},
										{
											"begin": 751,
											"end": 18455,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 751,
											"end": 18455,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 751,
											"end": 18455,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 751,
											"end": 18455,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 751,
											"end": 18455,
											"name": "PUSH",
											"source": 1,
											"value": "95EA7B3"
										},
										{
											"begin": 751,
											"end": 18455,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 751,
											"end": 18455,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 751,
											"end": 18455,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 751,
											"end": 18455,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 751,
											"end": 18455,
											"name": "PUSH",
											"source": 1,
											"value": "23B872DD"
										},
										{
											"begin": 751,
											"end": 18455,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 751,
											"end": 18455,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 751,
											"end": 18455,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 751,
											"end": 18455,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 751,
											"end": 18455,
											"name": "PUSH",
											"source": 1,
											"value": "42842E0E"
										},
										{
											"begin": 751,
											"end": 18455,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 751,
											"end": 18455,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 751,
											"end": 18455,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 751,
											"end": 18455,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 751,
											"end": 18455,
											"name": "PUSH",
											"source": 1,
											"value": "6352211E"
										},
										{
											"begin": 751,
											"end": 18455,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 751,
											"end": 18455,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 751,
											"end": 18455,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 751,
											"end": 18455,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 751,
											"end": 18455,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 751,
											"end": 18455,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 751,
											"end": 18455,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 751,
											"end": 18455,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 751,
											"end": 18455,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 751,
											"end": 18455,
											"name": "PUSH",
											"source": 1,
											"value": "1FFC9A7"
										},
										{
											"begin": 751,
											"end": 18455,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 751,
											"end": 18455,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 751,
											"end": 18455,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 751,
											"end": 18455,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 751,
											"end": 18455,
											"name": "PUSH",
											"source": 1,
											"value": "6FDDE03"
										},
										{
											"begin": 751,
											"end": 18455,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 751,
											"end": 18455,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 751,
											"end": 18455,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 751,
											"end": 18455,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 751,
											"end": 18455,
											"name": "PUSH",
											"source": 1,
											"value": "81812FC"
										},
										{
											"begin": 751,
											"end": 18455,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 751,
											"end": 18455,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 751,
											"end": 18455,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 751,
											"end": 18455,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 751,
											"end": 18455,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 751,
											"end": 18455,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 751,
											"end": 18455,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 751,
											"end": 18455,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2076,
											"end": 2420,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2076,
											"end": 2420,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2076,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2076,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 2076,
											"end": 2420,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2076,
											"end": 2420,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2076,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 2076,
											"end": 2420,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2076,
											"end": 2420,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 2076,
											"end": 2420,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2076,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 2076,
											"end": 2420,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2076,
											"end": 2420,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2076,
											"end": 2420,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2076,
											"end": 2420,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2076,
											"end": 2420,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 565,
											"end": 579,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 565,
											"end": 579,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 558,
											"end": 580,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 540,
											"end": 581,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 540,
											"end": 581,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 528,
											"end": 530,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 513,
											"end": 531,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2076,
											"end": 2420,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2076,
											"end": 2420,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2076,
											"end": 2420,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2076,
											"end": 2420,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2076,
											"end": 2420,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2076,
											"end": 2420,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2076,
											"end": 2420,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2076,
											"end": 2420,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2076,
											"end": 2420,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3021,
											"end": 3119,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3021,
											"end": 3119,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3021,
											"end": 3119,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 3021,
											"end": 3119,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 3021,
											"end": 3119,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3021,
											"end": 3119,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 3021,
											"end": 3119,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3021,
											"end": 3119,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3021,
											"end": 3119,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3021,
											"end": 3119,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3021,
											"end": 3119,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3021,
											"end": 3119,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3021,
											"end": 3119,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 3021,
											"end": 3119,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4612,
											"end": 4779,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 4612,
											"end": 4779,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4612,
											"end": 4779,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 4612,
											"end": 4779,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 4612,
											"end": 4779,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4612,
											"end": 4779,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4612,
											"end": 4779,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 4612,
											"end": 4779,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4612,
											"end": 4779,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 4612,
											"end": 4779,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4612,
											"end": 4779,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 4612,
											"end": 4779,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4612,
											"end": 4779,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 4612,
											"end": 4779,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4612,
											"end": 4779,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4612,
											"end": 4779,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1692,
											"end": 1724,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1692,
											"end": 1724,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1692,
											"end": 1724,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1674,
											"end": 1725,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1674,
											"end": 1725,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1662,
											"end": 1664,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1647,
											"end": 1665,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4612,
											"end": 4779,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1528,
											"end": 1731,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4134,
											"end": 4551,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 4134,
											"end": 4551,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4134,
											"end": 4551,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 4134,
											"end": 4551,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 4134,
											"end": 4551,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4134,
											"end": 4551,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4134,
											"end": 4551,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 4134,
											"end": 4551,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4134,
											"end": 4551,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 4134,
											"end": 4551,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4134,
											"end": 4551,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 4134,
											"end": 4551,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4134,
											"end": 4551,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 4134,
											"end": 4551,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4134,
											"end": 4551,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 5381,
											"end": 5707,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 5381,
											"end": 5707,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5381,
											"end": 5707,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 5381,
											"end": 5707,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 5381,
											"end": 5707,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5381,
											"end": 5707,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5381,
											"end": 5707,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 5381,
											"end": 5707,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5381,
											"end": 5707,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 5381,
											"end": 5707,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5381,
											"end": 5707,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 5381,
											"end": 5707,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5773,
											"end": 5952,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 5773,
											"end": 5952,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5773,
											"end": 5952,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 5773,
											"end": 5952,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 5773,
											"end": 5952,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5773,
											"end": 5952,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5773,
											"end": 5952,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 5773,
											"end": 5952,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5773,
											"end": 5952,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 5773,
											"end": 5952,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5773,
											"end": 5952,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 5773,
											"end": 5952,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2740,
											"end": 2959,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 2740,
											"end": 2959,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2740,
											"end": 2959,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 2740,
											"end": 2959,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 2740,
											"end": 2959,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2740,
											"end": 2959,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2740,
											"end": 2959,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 2740,
											"end": 2959,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2740,
											"end": 2959,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 2740,
											"end": 2959,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2740,
											"end": 2959,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 2740,
											"end": 2959,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2479,
											"end": 2683,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 2479,
											"end": 2683,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2479,
											"end": 2683,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 2479,
											"end": 2683,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 2479,
											"end": 2683,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2479,
											"end": 2683,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2479,
											"end": 2683,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 2479,
											"end": 2683,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2479,
											"end": 2683,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 2479,
											"end": 2683,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2479,
											"end": 2683,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 2479,
											"end": 2683,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2479,
											"end": 2683,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 2479,
											"end": 2683,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2479,
											"end": 2683,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2479,
											"end": 2683,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2843,
											"end": 2868,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2843,
											"end": 2868,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2843,
											"end": 2868,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2831,
											"end": 2833,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2816,
											"end": 2834,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2479,
											"end": 2683,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2697,
											"end": 2874,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3183,
											"end": 3285,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 3183,
											"end": 3285,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3183,
											"end": 3285,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 3183,
											"end": 3285,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 3183,
											"end": 3285,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4846,
											"end": 4999,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 4846,
											"end": 4999,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4846,
											"end": 4999,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 4846,
											"end": 4999,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 4846,
											"end": 4999,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4846,
											"end": 4999,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4846,
											"end": 4999,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 4846,
											"end": 4999,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4846,
											"end": 4999,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 4846,
											"end": 4999,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4846,
											"end": 4999,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 4846,
											"end": 4999,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5005,
											"end": 5091,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 5005,
											"end": 5091,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5005,
											"end": 5091,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 5005,
											"end": 5091,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 5005,
											"end": 5091,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5005,
											"end": 5091,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5005,
											"end": 5091,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 5005,
											"end": 5091,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5005,
											"end": 5091,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 5005,
											"end": 5091,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5005,
											"end": 5091,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 5005,
											"end": 5091,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6018,
											"end": 6332,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 6018,
											"end": 6332,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6018,
											"end": 6332,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 6018,
											"end": 6332,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 6018,
											"end": 6332,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 6018,
											"end": 6332,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6018,
											"end": 6332,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 6018,
											"end": 6332,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6018,
											"end": 6332,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 6018,
											"end": 6332,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6018,
											"end": 6332,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 6018,
											"end": 6332,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3351,
											"end": 3627,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 3351,
											"end": 3627,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3351,
											"end": 3627,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 3351,
											"end": 3627,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 3351,
											"end": 3627,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3351,
											"end": 3627,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3351,
											"end": 3627,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 3351,
											"end": 3627,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3351,
											"end": 3627,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 3351,
											"end": 3627,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3351,
											"end": 3627,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 3351,
											"end": 3627,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5157,
											"end": 5319,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 5157,
											"end": 5319,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5157,
											"end": 5319,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5157,
											"end": 5319,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 5157,
											"end": 5319,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5157,
											"end": 5319,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5157,
											"end": 5319,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 5157,
											"end": 5319,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5157,
											"end": 5319,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 5157,
											"end": 5319,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5277,
											"end": 5302,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5277,
											"end": 5302,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5277,
											"end": 5302,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5254,
											"end": 5258,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5277,
											"end": 5302,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5277,
											"end": 5302,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5277,
											"end": 5302,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5277,
											"end": 5295,
											"name": "PUSH",
											"source": 1,
											"value": "6A"
										},
										{
											"begin": 5277,
											"end": 5302,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5277,
											"end": 5302,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5277,
											"end": 5302,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5277,
											"end": 5302,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5277,
											"end": 5302,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5277,
											"end": 5302,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5277,
											"end": 5302,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5277,
											"end": 5302,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5277,
											"end": 5312,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 5277,
											"end": 5312,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5277,
											"end": 5312,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 5277,
											"end": 5312,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5277,
											"end": 5312,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5277,
											"end": 5312,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5277,
											"end": 5312,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5277,
											"end": 5312,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5277,
											"end": 5312,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5277,
											"end": 5312,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5277,
											"end": 5312,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5277,
											"end": 5312,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5277,
											"end": 5312,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 5277,
											"end": 5312,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5277,
											"end": 5312,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5157,
											"end": 5319,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2076,
											"end": 2420,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 2076,
											"end": 2420,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2200,
											"end": 2204,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2235,
											"end": 2286,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2286,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80AC58CD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2235,
											"end": 2286,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2286,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2361,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 2235,
											"end": 2361,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2302,
											"end": 2361,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2302,
											"end": 2361,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5B5E139F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2302,
											"end": 2361,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2361,
											"name": "tag",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 2235,
											"end": 2361,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2413,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2413,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 2235,
											"end": 2413,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1FFC9A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1168,
											"end": 1219,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1168,
											"end": 1219,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1168,
											"end": 1219,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 2377,
											"end": 2413,
											"name": "tag",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 2377,
											"end": 2413,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2216,
											"end": 2413,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2076,
											"end": 2420,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2076,
											"end": 2420,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3021,
											"end": 3119,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 3021,
											"end": 3119,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3075,
											"end": 3088,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3107,
											"end": 3112,
											"name": "PUSH",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 3100,
											"end": 3112,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3100,
											"end": 3112,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3100,
											"end": 3112,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 3100,
											"end": 3112,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3100,
											"end": 3112,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 3100,
											"end": 3112,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3100,
											"end": 3112,
											"name": "tag",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 3100,
											"end": 3112,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3100,
											"end": 3112,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3100,
											"end": 3112,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 3100,
											"end": 3112,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3100,
											"end": 3112,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3100,
											"end": 3112,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3100,
											"end": 3112,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3100,
											"end": 3112,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 3100,
											"end": 3112,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 3100,
											"end": 3112,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3100,
											"end": 3112,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3100,
											"end": 3112,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3100,
											"end": 3112,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3100,
											"end": 3112,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3100,
											"end": 3112,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3100,
											"end": 3112,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3100,
											"end": 3112,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3100,
											"end": 3112,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3100,
											"end": 3112,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3100,
											"end": 3112,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3100,
											"end": 3112,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3100,
											"end": 3112,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3100,
											"end": 3112,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3100,
											"end": 3112,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3100,
											"end": 3112,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3100,
											"end": 3112,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3100,
											"end": 3112,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3100,
											"end": 3112,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3100,
											"end": 3112,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3100,
											"end": 3112,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3100,
											"end": 3112,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 3100,
											"end": 3112,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3100,
											"end": 3112,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 3100,
											"end": 3112,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3100,
											"end": 3112,
											"name": "tag",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 3100,
											"end": 3112,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3100,
											"end": 3112,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3100,
											"end": 3112,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3100,
											"end": 3112,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 3100,
											"end": 3112,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3100,
											"end": 3112,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3100,
											"end": 3112,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 3100,
											"end": 3112,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 3100,
											"end": 3112,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 3100,
											"end": 3112,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3100,
											"end": 3112,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3100,
											"end": 3112,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3100,
											"end": 3112,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3100,
											"end": 3112,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3100,
											"end": 3112,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 3100,
											"end": 3112,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 3100,
											"end": 3112,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3100,
											"end": 3112,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3100,
											"end": 3112,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3100,
											"end": 3112,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3100,
											"end": 3112,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3100,
											"end": 3112,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3100,
											"end": 3112,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 3100,
											"end": 3112,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3100,
											"end": 3112,
											"name": "tag",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 3100,
											"end": 3112,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3100,
											"end": 3112,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3100,
											"end": 3112,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3100,
											"end": 3112,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3100,
											"end": 3112,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3100,
											"end": 3112,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3100,
											"end": 3112,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3100,
											"end": 3112,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3100,
											"end": 3112,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3100,
											"end": 3112,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3100,
											"end": 3112,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3100,
											"end": 3112,
											"name": "tag",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 3100,
											"end": 3112,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3100,
											"end": 3112,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3100,
											"end": 3112,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3100,
											"end": 3112,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3100,
											"end": 3112,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3100,
											"end": 3112,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3100,
											"end": 3112,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3100,
											"end": 3112,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3100,
											"end": 3112,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3100,
											"end": 3112,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3100,
											"end": 3112,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3100,
											"end": 3112,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3100,
											"end": 3112,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3100,
											"end": 3112,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 3100,
											"end": 3112,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 3100,
											"end": 3112,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3100,
											"end": 3112,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3100,
											"end": 3112,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3100,
											"end": 3112,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3100,
											"end": 3112,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 3100,
											"end": 3112,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3100,
											"end": 3112,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3100,
											"end": 3112,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3100,
											"end": 3112,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3100,
											"end": 3112,
											"name": "tag",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 3100,
											"end": 3112,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3100,
											"end": 3112,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3100,
											"end": 3112,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3100,
											"end": 3112,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3100,
											"end": 3112,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3100,
											"end": 3112,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3100,
											"end": 3112,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3100,
											"end": 3112,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3021,
											"end": 3119,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3021,
											"end": 3119,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4612,
											"end": 4779,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 4612,
											"end": 4779,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4688,
											"end": 4695,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4707,
											"end": 4730,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 4722,
											"end": 4729,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4707,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 4707,
											"end": 4730,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4707,
											"end": 4730,
											"name": "tag",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 4707,
											"end": 4730,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4748,
											"end": 4772,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4748,
											"end": 4772,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4748,
											"end": 4772,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4748,
											"end": 4772,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4748,
											"end": 4763,
											"name": "PUSH",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 4748,
											"end": 4772,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4748,
											"end": 4772,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4748,
											"end": 4772,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4748,
											"end": 4772,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4748,
											"end": 4772,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4748,
											"end": 4772,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4748,
											"end": 4772,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4748,
											"end": 4772,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4612,
											"end": 4779,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4134,
											"end": 4551,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 4134,
											"end": 4551,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4214,
											"end": 4227,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4230,
											"end": 4264,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 4256,
											"end": 4263,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4230,
											"end": 4255,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 4230,
											"end": 4264,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4230,
											"end": 4264,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 4230,
											"end": 4264,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4214,
											"end": 4264,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4214,
											"end": 4264,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4288,
											"end": 4293,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4282,
											"end": 4293,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4282,
											"end": 4284,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4282,
											"end": 4293,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4282,
											"end": 4293,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4274,
											"end": 4331,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 4274,
											"end": 4331,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4274,
											"end": 4331,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4274,
											"end": 4331,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4274,
											"end": 4331,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4274,
											"end": 4331,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5615,
											"end": 5617,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4274,
											"end": 4331,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4274,
											"end": 4331,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4274,
											"end": 4331,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5597,
											"end": 5618,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5654,
											"end": 5656,
											"name": "PUSH",
											"source": 11,
											"value": "21"
										},
										{
											"begin": 5634,
											"end": 5652,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 5634,
											"end": 5652,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5634,
											"end": 5652,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5627,
											"end": 5657,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5693,
											"end": 5727,
											"name": "PUSH",
											"source": 11,
											"value": "4552433732313A20617070726F76616C20746F2063757272656E74206F776E65"
										},
										{
											"begin": 5673,
											"end": 5691,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 5673,
											"end": 5691,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5673,
											"end": 5691,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5666,
											"end": 5728,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "39"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5744,
											"end": 5762,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 5744,
											"end": 5762,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5744,
											"end": 5762,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5737,
											"end": 5768,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5785,
											"end": 5804,
											"name": "PUSH",
											"source": 11,
											"value": "84"
										},
										{
											"begin": 5785,
											"end": 5804,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4274,
											"end": 4331,
											"name": "tag",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 4274,
											"end": 4331,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4274,
											"end": 4331,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4274,
											"end": 4331,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4274,
											"end": 4331,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4274,
											"end": 4331,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4274,
											"end": 4331,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4274,
											"end": 4331,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4274,
											"end": 4331,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4274,
											"end": 4331,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 4274,
											"end": 4331,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 929,
											"end": 939,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4363,
											"end": 4384,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4363,
											"end": 4384,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4363,
											"end": 4384,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4363,
											"end": 4384,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4363,
											"end": 4425,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 4363,
											"end": 4425,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4388,
											"end": 4425,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 4405,
											"end": 4410,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 929,
											"end": 939,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 5157,
											"end": 5319,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 5157,
											"end": 5319,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4388,
											"end": 4425,
											"name": "tag",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 4388,
											"end": 4425,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4342,
											"end": 4512,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 4342,
											"end": 4512,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4342,
											"end": 4512,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4342,
											"end": 4512,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4342,
											"end": 4512,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4342,
											"end": 4512,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6017,
											"end": 6019,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4342,
											"end": 4512,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4342,
											"end": 4512,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4342,
											"end": 4512,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5999,
											"end": 6020,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6056,
											"end": 6058,
											"name": "PUSH",
											"source": 11,
											"value": "3D"
										},
										{
											"begin": 6036,
											"end": 6054,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 6036,
											"end": 6054,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6036,
											"end": 6054,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6029,
											"end": 6059,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6095,
											"end": 6129,
											"name": "PUSH",
											"source": 11,
											"value": "4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F"
										},
										{
											"begin": 6075,
											"end": 6093,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 6075,
											"end": 6093,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6075,
											"end": 6093,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6068,
											"end": 6130,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6166,
											"end": 6197,
											"name": "PUSH",
											"source": 11,
											"value": "6B656E206F776E6572206F7220617070726F76656420666F7220616C6C000000"
										},
										{
											"begin": 6146,
											"end": 6164,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 6146,
											"end": 6164,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6146,
											"end": 6164,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6139,
											"end": 6198,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6215,
											"end": 6234,
											"name": "PUSH",
											"source": 11,
											"value": "84"
										},
										{
											"begin": 6215,
											"end": 6234,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4342,
											"end": 4512,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 5815,
											"end": 6240,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4342,
											"end": 4512,
											"name": "tag",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 4342,
											"end": 4512,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4523,
											"end": 4544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 4532,
											"end": 4534,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4536,
											"end": 4543,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4523,
											"end": 4531,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 4523,
											"end": 4544,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4523,
											"end": 4544,
											"name": "tag",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 4523,
											"end": 4544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4204,
											"end": 4551,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4134,
											"end": 4551,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4134,
											"end": 4551,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4134,
											"end": 4551,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5381,
											"end": 5707,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 5381,
											"end": 5707,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5570,
											"end": 5611,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 929,
											"end": 939,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 5603,
											"end": 5610,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5570,
											"end": 5588,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 5570,
											"end": 5611,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5570,
											"end": 5611,
											"name": "tag",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 5570,
											"end": 5611,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5562,
											"end": 5661,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 5562,
											"end": 5661,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5562,
											"end": 5661,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5562,
											"end": 5661,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5562,
											"end": 5661,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5562,
											"end": 5661,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5562,
											"end": 5661,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5562,
											"end": 5661,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5562,
											"end": 5661,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 5562,
											"end": 5661,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5562,
											"end": 5661,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 5562,
											"end": 5661,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5562,
											"end": 5661,
											"name": "tag",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 5562,
											"end": 5661,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5672,
											"end": 5700,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 5682,
											"end": 5686,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5688,
											"end": 5690,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5692,
											"end": 5699,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5672,
											"end": 5681,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 5672,
											"end": 5700,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5773,
											"end": 5952,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 5773,
											"end": 5952,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5906,
											"end": 5945,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 5923,
											"end": 5927,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5929,
											"end": 5931,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5933,
											"end": 5940,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5906,
											"end": 5945,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5906,
											"end": 5945,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5906,
											"end": 5945,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5906,
											"end": 5945,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5906,
											"end": 5945,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5906,
											"end": 5945,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5906,
											"end": 5945,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5906,
											"end": 5945,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5906,
											"end": 5945,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5906,
											"end": 5945,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5906,
											"end": 5945,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5906,
											"end": 5945,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5906,
											"end": 5922,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 5906,
											"end": 5945,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2740,
											"end": 2959,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 2740,
											"end": 2959,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2812,
											"end": 2819,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7699,
											"end": 7715,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7699,
											"end": 7715,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7699,
											"end": 7715,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7699,
											"end": 7706,
											"name": "PUSH",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 7699,
											"end": 7715,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7699,
											"end": 7715,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7699,
											"end": 7715,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7699,
											"end": 7715,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7699,
											"end": 7715,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7699,
											"end": 7715,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7699,
											"end": 7715,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7699,
											"end": 7715,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2874,
											"end": 2930,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 2874,
											"end": 2930,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2874,
											"end": 2930,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2874,
											"end": 2930,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2874,
											"end": 2930,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2874,
											"end": 2930,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6861,
											"end": 6863,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2874,
											"end": 2930,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2874,
											"end": 2930,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2874,
											"end": 2930,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6843,
											"end": 6864,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6900,
											"end": 6902,
											"name": "PUSH",
											"source": 11,
											"value": "18"
										},
										{
											"begin": 6880,
											"end": 6898,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 6880,
											"end": 6898,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6880,
											"end": 6898,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6873,
											"end": 6903,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "115490CDCC8C4E881A5B9D985B1A59081D1BDAD95B881251"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "42"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6919,
											"end": 6937,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 6919,
											"end": 6937,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6919,
											"end": 6937,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6912,
											"end": 6966,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6983,
											"end": 7001,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 6983,
											"end": 7001,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2874,
											"end": 2930,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 6659,
											"end": 7007,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2479,
											"end": 2683,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 2479,
											"end": 2683,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2551,
											"end": 2558,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2578,
											"end": 2597,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2578,
											"end": 2597,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2570,
											"end": 2643,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 2570,
											"end": 2643,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2570,
											"end": 2643,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2570,
											"end": 2643,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2570,
											"end": 2643,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2570,
											"end": 2643,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7214,
											"end": 7216,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2570,
											"end": 2643,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2570,
											"end": 2643,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2570,
											"end": 2643,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7196,
											"end": 7217,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7253,
											"end": 7255,
											"name": "PUSH",
											"source": 11,
											"value": "29"
										},
										{
											"begin": 7233,
											"end": 7251,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 7233,
											"end": 7251,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7233,
											"end": 7251,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7226,
											"end": 7256,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7292,
											"end": 7326,
											"name": "PUSH",
											"source": 11,
											"value": "4552433732313A2061646472657373207A65726F206973206E6F742061207661"
										},
										{
											"begin": 7272,
											"end": 7290,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 7272,
											"end": 7290,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7272,
											"end": 7290,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7265,
											"end": 7327,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3634B21037BBB732B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7343,
											"end": 7361,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 7343,
											"end": 7361,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7343,
											"end": 7361,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7336,
											"end": 7375,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7392,
											"end": 7411,
											"name": "PUSH",
											"source": 11,
											"value": "84"
										},
										{
											"begin": 7392,
											"end": 7411,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2570,
											"end": 2643,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 7012,
											"end": 7417,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2570,
											"end": 2643,
											"name": "tag",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 2570,
											"end": 2643,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2660,
											"end": 2676,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2660,
											"end": 2676,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2660,
											"end": 2676,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2660,
											"end": 2676,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2660,
											"end": 2676,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2660,
											"end": 2669,
											"name": "PUSH",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2660,
											"end": 2676,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2660,
											"end": 2676,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2660,
											"end": 2676,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2660,
											"end": 2676,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2660,
											"end": 2676,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2660,
											"end": 2676,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2660,
											"end": 2676,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2479,
											"end": 2683,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3183,
											"end": 3285,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 3183,
											"end": 3285,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3239,
											"end": 3252,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3271,
											"end": 3278,
											"name": "PUSH",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 3264,
											"end": 3278,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3264,
											"end": 3278,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3264,
											"end": 3278,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 3264,
											"end": 3278,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3264,
											"end": 3278,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 3264,
											"end": 3278,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4846,
											"end": 4999,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 4846,
											"end": 4999,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4940,
											"end": 4992,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 929,
											"end": 939,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 4973,
											"end": 4981,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4983,
											"end": 4991,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4940,
											"end": 4958,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 4940,
											"end": 4992,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4940,
											"end": 4992,
											"name": "tag",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 4940,
											"end": 4992,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4846,
											"end": 4999,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4846,
											"end": 4999,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4846,
											"end": 4999,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5005,
											"end": 5091,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 5005,
											"end": 5091,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4023,
											"end": 4030,
											"name": "PUSH",
											"source": 1,
											"value": "6B"
										},
										{
											"begin": 4023,
											"end": 4030,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4023,
											"end": 4030,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4009,
											"end": 4019,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 4009,
											"end": 4030,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4001,
											"end": 4058,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 4001,
											"end": 4058,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4001,
											"end": 4058,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4001,
											"end": 4058,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4001,
											"end": 4058,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4001,
											"end": 4058,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7624,
											"end": 7626,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4001,
											"end": 4058,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4001,
											"end": 4058,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4001,
											"end": 4058,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7606,
											"end": 7627,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7663,
											"end": 7665,
											"name": "PUSH",
											"source": 11,
											"value": "17"
										},
										{
											"begin": 7643,
											"end": 7661,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 7643,
											"end": 7661,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7643,
											"end": 7661,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7636,
											"end": 7666,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7702,
											"end": 7727,
											"name": "PUSH",
											"source": 11,
											"value": "43616C6C6572206973206E6F7420746865206F776E6572000000000000000000"
										},
										{
											"begin": 7682,
											"end": 7700,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 7682,
											"end": 7700,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7682,
											"end": 7700,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7675,
											"end": 7728,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7745,
											"end": 7763,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 7745,
											"end": 7763,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4001,
											"end": 4058,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 7422,
											"end": 7769,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4001,
											"end": 4058,
											"name": "tag",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 4001,
											"end": 4058,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5067,
											"end": 5076,
											"name": "PUSH",
											"source": 1,
											"value": "6B"
										},
										{
											"begin": 5067,
											"end": 5084,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5067,
											"end": 5084,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5067,
											"end": 5084,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5067,
											"end": 5084,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5067,
											"end": 5084,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5067,
											"end": 5084,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5067,
											"end": 5084,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5067,
											"end": 5084,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5067,
											"end": 5084,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5067,
											"end": 5084,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5067,
											"end": 5084,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5067,
											"end": 5084,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5067,
											"end": 5084,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 5067,
											"end": 5084,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5067,
											"end": 5084,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 5005,
											"end": 5091,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6018,
											"end": 6332,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 6018,
											"end": 6332,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6186,
											"end": 6227,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 929,
											"end": 939,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 6219,
											"end": 6226,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6186,
											"end": 6204,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 6186,
											"end": 6227,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6186,
											"end": 6227,
											"name": "tag",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 6186,
											"end": 6227,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6178,
											"end": 6277,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 6178,
											"end": 6277,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6178,
											"end": 6277,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6178,
											"end": 6277,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6178,
											"end": 6277,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6178,
											"end": 6277,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6178,
											"end": 6277,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6178,
											"end": 6277,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6178,
											"end": 6277,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 6178,
											"end": 6277,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6178,
											"end": 6277,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 6178,
											"end": 6277,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6178,
											"end": 6277,
											"name": "tag",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 6178,
											"end": 6277,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6287,
											"end": 6325,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 6301,
											"end": 6305,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6307,
											"end": 6309,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6311,
											"end": 6318,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6320,
											"end": 6324,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6287,
											"end": 6300,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 6287,
											"end": 6325,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6287,
											"end": 6325,
											"name": "tag",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 6287,
											"end": 6325,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6018,
											"end": 6332,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6018,
											"end": 6332,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6018,
											"end": 6332,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6018,
											"end": 6332,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6018,
											"end": 6332,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3351,
											"end": 3627,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 3351,
											"end": 3627,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3424,
											"end": 3437,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3449,
											"end": 3472,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 3464,
											"end": 3471,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3449,
											"end": 3463,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 3449,
											"end": 3472,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3449,
											"end": 3472,
											"name": "tag",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 3449,
											"end": 3472,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3483,
											"end": 3504,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3507,
											"end": 3517,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 3945,
											"end": 3954,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3945,
											"end": 3954,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3945,
											"end": 3954,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3945,
											"end": 3954,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3945,
											"end": 3954,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3945,
											"end": 3954,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3945,
											"end": 3954,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3945,
											"end": 3954,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3945,
											"end": 3954,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 3945,
											"end": 3954,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3945,
											"end": 3954,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3945,
											"end": 3954,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 3961,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3507,
											"end": 3517,
											"name": "tag",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 3507,
											"end": 3517,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3483,
											"end": 3517,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3483,
											"end": 3517,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3558,
											"end": 3559,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3540,
											"end": 3547,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3534,
											"end": 3555,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3534,
											"end": 3559,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 3534,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 3534,
											"end": 3620,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3534,
											"end": 3620,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3534,
											"end": 3620,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3534,
											"end": 3620,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3534,
											"end": 3620,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3534,
											"end": 3620,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3534,
											"end": 3620,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3534,
											"end": 3620,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3534,
											"end": 3620,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3534,
											"end": 3620,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3534,
											"end": 3620,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3534,
											"end": 3620,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3534,
											"end": 3620,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3534,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 3534,
											"end": 3620,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3534,
											"end": 3620,
											"name": "tag",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 3534,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3586,
											"end": 3593,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3595,
											"end": 3613,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 3595,
											"end": 3602,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3595,
											"end": 3611,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 3595,
											"end": 3613,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3595,
											"end": 3613,
											"name": "tag",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 3595,
											"end": 3613,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3569,
											"end": 3614,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3569,
											"end": 3614,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3569,
											"end": 3614,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3569,
											"end": 3614,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3569,
											"end": 3614,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 3569,
											"end": 3614,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3569,
											"end": 3614,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3569,
											"end": 3614,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3569,
											"end": 3614,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 3569,
											"end": 3614,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3569,
											"end": 3614,
											"name": "tag",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 3569,
											"end": 3614,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3569,
											"end": 3614,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3569,
											"end": 3614,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3569,
											"end": 3614,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3569,
											"end": 3614,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3569,
											"end": 3614,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3569,
											"end": 3614,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3569,
											"end": 3614,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3569,
											"end": 3614,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3569,
											"end": 3614,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3569,
											"end": 3614,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3569,
											"end": 3614,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3569,
											"end": 3614,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3534,
											"end": 3620,
											"name": "tag",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 3534,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3527,
											"end": 3620,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3351,
											"end": 3627,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3351,
											"end": 3627,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 14301,
											"end": 14434,
											"name": "tag",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 14301,
											"end": 14434,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8090,
											"end": 8094,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7699,
											"end": 7715,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7699,
											"end": 7715,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7699,
											"end": 7715,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7699,
											"end": 7706,
											"name": "PUSH",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 7699,
											"end": 7715,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7699,
											"end": 7715,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7699,
											"end": 7715,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7699,
											"end": 7715,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7699,
											"end": 7715,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7699,
											"end": 7715,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7699,
											"end": 7715,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 14374,
											"end": 14427,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 14374,
											"end": 14427,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14374,
											"end": 14427,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14374,
											"end": 14427,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14374,
											"end": 14427,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14374,
											"end": 14427,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6861,
											"end": 6863,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 14374,
											"end": 14427,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 14374,
											"end": 14427,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14374,
											"end": 14427,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6843,
											"end": 6864,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6900,
											"end": 6902,
											"name": "PUSH",
											"source": 11,
											"value": "18"
										},
										{
											"begin": 6880,
											"end": 6898,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 6880,
											"end": 6898,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6880,
											"end": 6898,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6873,
											"end": 6903,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "115490CDCC8C4E881A5B9D985B1A59081D1BDAD95B881251"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "42"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6919,
											"end": 6937,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 6919,
											"end": 6937,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6919,
											"end": 6937,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6912,
											"end": 6966,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6983,
											"end": 7001,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 6983,
											"end": 7001,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14374,
											"end": 14427,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 6659,
											"end": 7007,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14374,
											"end": 14427,
											"name": "tag",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 14374,
											"end": 14427,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14301,
											"end": 14434,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14301,
											"end": 14434,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 13592,
											"end": 13774,
											"name": "tag",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 13592,
											"end": 13774,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13666,
											"end": 13690,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13666,
											"end": 13690,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13666,
											"end": 13690,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13666,
											"end": 13690,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13666,
											"end": 13681,
											"name": "PUSH",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 13666,
											"end": 13690,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13666,
											"end": 13690,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13666,
											"end": 13690,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13666,
											"end": 13690,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13666,
											"end": 13690,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 13666,
											"end": 13695,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13666,
											"end": 13695,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 13666,
											"end": 13695,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13666,
											"end": 13695,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 13666,
											"end": 13695,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13666,
											"end": 13695,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13666,
											"end": 13695,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13666,
											"end": 13695,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 13666,
											"end": 13695,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13666,
											"end": 13695,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13666,
											"end": 13695,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 13666,
											"end": 13690,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13666,
											"end": 13690,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13719,
											"end": 13753,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 13666,
											"end": 13690,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13719,
											"end": 13744,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 13719,
											"end": 13753,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 13719,
											"end": 13753,
											"name": "tag",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 13719,
											"end": 13753,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13710,
											"end": 13767,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13710,
											"end": 13767,
											"name": "PUSH",
											"source": 1,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 13710,
											"end": 13767,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13710,
											"end": 13767,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 13710,
											"end": 13767,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13710,
											"end": 13767,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 13710,
											"end": 13767,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13710,
											"end": 13767,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13710,
											"end": 13767,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13710,
											"end": 13767,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13710,
											"end": 13767,
											"name": "LOG4",
											"source": 1
										},
										{
											"begin": 13592,
											"end": 13774,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13592,
											"end": 13774,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13592,
											"end": 13774,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 8309,
											"end": 8581,
											"name": "tag",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 8309,
											"end": 8581,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8402,
											"end": 8406,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8418,
											"end": 8431,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8434,
											"end": 8468,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 8460,
											"end": 8467,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8434,
											"end": 8459,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 8434,
											"end": 8468,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8434,
											"end": 8468,
											"name": "tag",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 8434,
											"end": 8468,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8418,
											"end": 8468,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8418,
											"end": 8468,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8497,
											"end": 8502,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8486,
											"end": 8502,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8486,
											"end": 8493,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8486,
											"end": 8502,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8486,
											"end": 8502,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 8486,
											"end": 8538,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8486,
											"end": 8538,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 8486,
											"end": 8538,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5277,
											"end": 5302,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5277,
											"end": 5302,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5277,
											"end": 5302,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5254,
											"end": 5258,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5277,
											"end": 5302,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5277,
											"end": 5302,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5277,
											"end": 5302,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5277,
											"end": 5295,
											"name": "PUSH",
											"source": 1,
											"value": "6A"
										},
										{
											"begin": 5277,
											"end": 5302,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5277,
											"end": 5302,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5277,
											"end": 5302,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5277,
											"end": 5302,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5277,
											"end": 5302,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5277,
											"end": 5302,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5277,
											"end": 5302,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5277,
											"end": 5302,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5277,
											"end": 5312,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 5277,
											"end": 5312,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 5277,
											"end": 5312,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5277,
											"end": 5312,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5277,
											"end": 5312,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5277,
											"end": 5312,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5277,
											"end": 5312,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5277,
											"end": 5312,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5277,
											"end": 5312,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5277,
											"end": 5312,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5277,
											"end": 5312,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 5277,
											"end": 5312,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8506,
											"end": 8538,
											"name": "tag",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 8506,
											"end": 8538,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8486,
											"end": 8573,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8486,
											"end": 8573,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 8486,
											"end": 8573,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8486,
											"end": 8573,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8566,
											"end": 8573,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8542,
											"end": 8573,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8542,
											"end": 8562,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "179"
										},
										{
											"begin": 8554,
											"end": 8561,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8542,
											"end": 8553,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 8542,
											"end": 8562,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8542,
											"end": 8562,
											"name": "tag",
											"source": 1,
											"value": "179"
										},
										{
											"begin": 8542,
											"end": 8562,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8542,
											"end": 8573,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8542,
											"end": 8573,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 8486,
											"end": 8573,
											"name": "tag",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 8486,
											"end": 8573,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8478,
											"end": 8574,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 8309,
											"end": 8581,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8309,
											"end": 8581,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 12225,
											"end": 13480,
											"name": "tag",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 12225,
											"end": 13480,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12390,
											"end": 12394,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12352,
											"end": 12394,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12352,
											"end": 12386,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 12378,
											"end": 12385,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12352,
											"end": 12377,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 12352,
											"end": 12386,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 12352,
											"end": 12386,
											"name": "tag",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 12352,
											"end": 12386,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12352,
											"end": 12394,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12352,
											"end": 12394,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 12344,
											"end": 12436,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 12344,
											"end": 12436,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12344,
											"end": 12436,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12344,
											"end": 12436,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12344,
											"end": 12436,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12344,
											"end": 12436,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12344,
											"end": 12436,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 12344,
											"end": 12436,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12344,
											"end": 12436,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 12344,
											"end": 12436,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12344,
											"end": 12436,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 12344,
											"end": 12436,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 12344,
											"end": 12436,
											"name": "tag",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 12344,
											"end": 12436,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12454,
											"end": 12470,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12454,
											"end": 12470,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12446,
											"end": 12511,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 12446,
											"end": 12511,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12446,
											"end": 12511,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12446,
											"end": 12511,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12446,
											"end": 12511,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12446,
											"end": 12511,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8857,
											"end": 8859,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 12446,
											"end": 12511,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 12446,
											"end": 12511,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12446,
											"end": 12511,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8839,
											"end": 8860,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8896,
											"end": 8898,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 8876,
											"end": 8894,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 8876,
											"end": 8894,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8876,
											"end": 8894,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8869,
											"end": 8899,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8935,
											"end": 8969,
											"name": "PUSH",
											"source": 11,
											"value": "4552433732313A207472616E7366657220746F20746865207A65726F20616464"
										},
										{
											"begin": 8915,
											"end": 8933,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 8915,
											"end": 8933,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8915,
											"end": 8933,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8908,
											"end": 8970,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8986,
											"end": 9004,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 8986,
											"end": 9004,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8986,
											"end": 9004,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8979,
											"end": 9013,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9030,
											"end": 9049,
											"name": "PUSH",
											"source": 11,
											"value": "84"
										},
										{
											"begin": 9030,
											"end": 9049,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12446,
											"end": 12511,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 8655,
											"end": 9055,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12446,
											"end": 12511,
											"name": "tag",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 12446,
											"end": 12511,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12702,
											"end": 12706,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12664,
											"end": 12706,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12664,
											"end": 12698,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 12690,
											"end": 12697,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12664,
											"end": 12689,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 12664,
											"end": 12698,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 12664,
											"end": 12698,
											"name": "tag",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 12664,
											"end": 12698,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12664,
											"end": 12706,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12664,
											"end": 12706,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 12656,
											"end": 12748,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 12656,
											"end": 12748,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12656,
											"end": 12748,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12656,
											"end": 12748,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12656,
											"end": 12748,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12656,
											"end": 12748,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12656,
											"end": 12748,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 12656,
											"end": 12748,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12656,
											"end": 12748,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 12656,
											"end": 12748,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12656,
											"end": 12748,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 12656,
											"end": 12748,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 12656,
											"end": 12748,
											"name": "tag",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 12656,
											"end": 12748,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12817,
											"end": 12841,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12817,
											"end": 12841,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12817,
											"end": 12841,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12817,
											"end": 12841,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12817,
											"end": 12832,
											"name": "PUSH",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 12817,
											"end": 12841,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12817,
											"end": 12841,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12817,
											"end": 12841,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12817,
											"end": 12841,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12817,
											"end": 12841,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12817,
											"end": 12841,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12817,
											"end": 12841,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12817,
											"end": 12841,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 12810,
											"end": 12841,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12810,
											"end": 12841,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 12810,
											"end": 12841,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12810,
											"end": 12841,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12810,
											"end": 12841,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12810,
											"end": 12841,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12810,
											"end": 12841,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12810,
											"end": 12841,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13285,
											"end": 13300,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 13285,
											"end": 13300,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13285,
											"end": 13300,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13285,
											"end": 13300,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13285,
											"end": 13300,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 13285,
											"end": 13300,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13285,
											"end": 13294,
											"name": "PUSH",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 13285,
											"end": 13300,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 13285,
											"end": 13300,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13285,
											"end": 13300,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13285,
											"end": 13300,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 13285,
											"end": 13300,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 13285,
											"end": 13305,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13285,
											"end": 13305,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 13285,
											"end": 13305,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13285,
											"end": 13305,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13285,
											"end": 13305,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 13319,
											"end": 13332,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13319,
											"end": 13332,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 13319,
											"end": 13332,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13319,
											"end": 13332,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13319,
											"end": 13332,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 13319,
											"end": 13332,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13319,
											"end": 13332,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13319,
											"end": 13332,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 13319,
											"end": 13332,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 13319,
											"end": 13337,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13319,
											"end": 13337,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 12810,
											"end": 12841,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 13319,
											"end": 13337,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13319,
											"end": 13337,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13319,
											"end": 13337,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 13357,
											"end": 13373,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 13357,
											"end": 13373,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 13357,
											"end": 13373,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13357,
											"end": 13364,
											"name": "PUSH",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 13357,
											"end": 13373,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13357,
											"end": 13373,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 13357,
											"end": 13373,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13357,
											"end": 13373,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13357,
											"end": 13373,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 13357,
											"end": 13373,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 13357,
											"end": 13378,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13357,
											"end": 13378,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 13357,
											"end": 13378,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13357,
											"end": 13378,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 13357,
											"end": 13378,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13357,
											"end": 13378,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 13357,
											"end": 13378,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 13357,
											"end": 13378,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13357,
											"end": 13378,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13357,
											"end": 13378,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 13394,
											"end": 13421,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13394,
											"end": 13421,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 12833,
											"end": 12840,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 12833,
											"end": 12840,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 13394,
											"end": 13421,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 13394,
											"end": 13421,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13394,
											"end": 13421,
											"name": "LOG4",
											"source": 1
										},
										{
											"begin": 4204,
											"end": 4551,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4134,
											"end": 4551,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4134,
											"end": 4551,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4134,
											"end": 4551,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 13910,
											"end": 14217,
											"name": "tag",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 13910,
											"end": 14217,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14060,
											"end": 14068,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14051,
											"end": 14068,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 14051,
											"end": 14056,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14051,
											"end": 14068,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 14051,
											"end": 14068,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 14043,
											"end": 14098,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "197"
										},
										{
											"begin": 14043,
											"end": 14098,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14043,
											"end": 14098,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14043,
											"end": 14098,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14043,
											"end": 14098,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14043,
											"end": 14098,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9262,
											"end": 9264,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 14043,
											"end": 14098,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 14043,
											"end": 14098,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14043,
											"end": 14098,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9244,
											"end": 9265,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9301,
											"end": 9303,
											"name": "PUSH",
											"source": 11,
											"value": "19"
										},
										{
											"begin": 9281,
											"end": 9299,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 9281,
											"end": 9299,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9281,
											"end": 9299,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9274,
											"end": 9304,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9340,
											"end": 9367,
											"name": "PUSH",
											"source": 11,
											"value": "4552433732313A20617070726F766520746F2063616C6C657200000000000000"
										},
										{
											"begin": 9320,
											"end": 9338,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 9320,
											"end": 9338,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9320,
											"end": 9338,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9313,
											"end": 9368,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9385,
											"end": 9403,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 9385,
											"end": 9403,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14043,
											"end": 14098,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 9060,
											"end": 9409,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14043,
											"end": 14098,
											"name": "tag",
											"source": 1,
											"value": "197"
										},
										{
											"begin": 14043,
											"end": 14098,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14108,
											"end": 14133,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14108,
											"end": 14133,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14108,
											"end": 14133,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 14108,
											"end": 14133,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14108,
											"end": 14133,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14108,
											"end": 14133,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14108,
											"end": 14133,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14108,
											"end": 14126,
											"name": "PUSH",
											"source": 1,
											"value": "6A"
										},
										{
											"begin": 14108,
											"end": 14133,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14108,
											"end": 14133,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14108,
											"end": 14133,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14108,
											"end": 14133,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14108,
											"end": 14133,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14108,
											"end": 14133,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14108,
											"end": 14133,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14108,
											"end": 14133,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 14108,
											"end": 14143,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 14108,
											"end": 14143,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 14108,
											"end": 14143,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 14108,
											"end": 14143,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14108,
											"end": 14143,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 14108,
											"end": 14143,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14108,
											"end": 14143,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 14108,
											"end": 14143,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14108,
											"end": 14143,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14108,
											"end": 14143,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14108,
											"end": 14143,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14108,
											"end": 14143,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14108,
											"end": 14143,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 14108,
											"end": 14154,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14108,
											"end": 14154,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 14108,
											"end": 14154,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 14108,
											"end": 14154,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 14108,
											"end": 14154,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 14108,
											"end": 14154,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 14108,
											"end": 14154,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14108,
											"end": 14154,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14108,
											"end": 14154,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 14108,
											"end": 14154,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14108,
											"end": 14154,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14108,
											"end": 14154,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 14169,
											"end": 14210,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14169,
											"end": 14210,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 540,
											"end": 581,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 540,
											"end": 581,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 540,
											"end": 581,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 14169,
											"end": 14210,
											"name": "PUSH",
											"source": 1,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 14169,
											"end": 14210,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 513,
											"end": 531,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14169,
											"end": 14210,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14169,
											"end": 14210,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 14169,
											"end": 14210,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14169,
											"end": 14210,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14169,
											"end": 14210,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 14169,
											"end": 14210,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14169,
											"end": 14210,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 13910,
											"end": 14217,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13910,
											"end": 14217,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13910,
											"end": 14217,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13910,
											"end": 14217,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7193,
											"end": 7498,
											"name": "tag",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 7193,
											"end": 7498,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7343,
											"end": 7371,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 7353,
											"end": 7357,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7359,
											"end": 7361,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7363,
											"end": 7370,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7343,
											"end": 7352,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 7343,
											"end": 7371,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7343,
											"end": 7371,
											"name": "tag",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 7343,
											"end": 7371,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7389,
											"end": 7436,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 7412,
											"end": 7416,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7418,
											"end": 7420,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7422,
											"end": 7429,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7431,
											"end": 7435,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7389,
											"end": 7411,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 7389,
											"end": 7436,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7389,
											"end": 7436,
											"name": "tag",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 7389,
											"end": 7436,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7381,
											"end": 7491,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 7381,
											"end": 7491,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7381,
											"end": 7491,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7381,
											"end": 7491,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7381,
											"end": 7491,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7381,
											"end": 7491,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7381,
											"end": 7491,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7381,
											"end": 7491,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7381,
											"end": 7491,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 7381,
											"end": 7491,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7381,
											"end": 7491,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 7381,
											"end": 7491,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 437,
											"end": 1144,
											"name": "tag",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 437,
											"end": 1144,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 493,
											"end": 506,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 542,
											"end": 556,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 559,
											"end": 587,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 581,
											"end": 586,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 559,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "211"
										},
										{
											"begin": 559,
											"end": 587,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 559,
											"end": 587,
											"name": "tag",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 559,
											"end": 587,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 590,
											"end": 591,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 559,
											"end": 591,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 542,
											"end": 591,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 542,
											"end": 591,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 605,
											"end": 625,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 639,
											"end": 645,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 628,
											"end": 646,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 628,
											"end": 646,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 628,
											"end": 646,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 628,
											"end": 646,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 628,
											"end": 646,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 628,
											"end": 646,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 628,
											"end": 646,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 628,
											"end": 646,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "214"
										},
										{
											"begin": 628,
											"end": 646,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 628,
											"end": 646,
											"name": "tag",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 628,
											"end": 646,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 628,
											"end": 646,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 628,
											"end": 646,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 628,
											"end": 646,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 628,
											"end": 646,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 628,
											"end": 646,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 628,
											"end": 646,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 628,
											"end": 646,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 628,
											"end": 646,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 628,
											"end": 646,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 628,
											"end": 646,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 628,
											"end": 646,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 628,
											"end": 646,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 628,
											"end": 646,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 628,
											"end": 646,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 628,
											"end": 646,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 628,
											"end": 646,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 628,
											"end": 646,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 628,
											"end": 646,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 628,
											"end": 646,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 628,
											"end": 646,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 628,
											"end": 646,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 628,
											"end": 646,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 628,
											"end": 646,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 628,
											"end": 646,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 628,
											"end": 646,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 628,
											"end": 646,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 628,
											"end": 646,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 628,
											"end": 646,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 628,
											"end": 646,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 628,
											"end": 646,
											"name": "CALLDATACOPY",
											"source": 7
										},
										{
											"begin": 628,
											"end": 646,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 628,
											"end": 646,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 628,
											"end": 646,
											"name": "tag",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 628,
											"end": 646,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 605,
											"end": 646,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 766,
											"end": 794,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 766,
											"end": 794,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 766,
											"end": 794,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 782,
											"end": 784,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 766,
											"end": 794,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 821,
											"end": 1101,
											"name": "tag",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 821,
											"end": 1101,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 852,
											"end": 857,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "181899199A1A9B1B9C1CB0B131B232B3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 986,
											"end": 988,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 975,
											"end": 989,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 975,
											"end": 989,
											"name": "MOD",
											"source": 7
										},
										{
											"begin": 970,
											"end": 1000,
											"name": "BYTE",
											"source": 7
										},
										{
											"begin": 852,
											"end": 857,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 957,
											"end": 1001,
											"name": "MSTORE8",
											"source": 7
										},
										{
											"begin": 1045,
											"end": 1047,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 1036,
											"end": 1047,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1036,
											"end": 1047,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 1036,
											"end": 1047,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1065,
											"end": 1086,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 821,
											"end": 1101,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 1065,
											"end": 1086,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1121,
											"end": 1127,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 437,
											"end": 1144,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 437,
											"end": 1144,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 14986,
											"end": 15839,
											"name": "tag",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 14986,
											"end": 15839,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15135,
											"end": 15139,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15155,
											"end": 15168,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 15155,
											"end": 15168,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1476,
											"end": 1495,
											"name": "EXTCODESIZE",
											"source": 5
										},
										{
											"begin": 1476,
											"end": 1499,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 15151,
											"end": 15833,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 15151,
											"end": 15833,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 15190,
											"end": 15272,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15190,
											"end": 15272,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A85BD01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15190,
											"end": 15272,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15190,
											"end": 15272,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15190,
											"end": 15237,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 15190,
											"end": 15237,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15190,
											"end": 15237,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15190,
											"end": 15237,
											"name": "PUSH",
											"source": 1,
											"value": "150B7A02"
										},
										{
											"begin": 15190,
											"end": 15237,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15190,
											"end": 15272,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 15190,
											"end": 15272,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 929,
											"end": 939,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 929,
											"end": 939,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 15252,
											"end": 15256,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 15252,
											"end": 15256,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15258,
											"end": 15265,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 15258,
											"end": 15265,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15267,
											"end": 15271,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 15267,
											"end": 15271,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15190,
											"end": 15272,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 15190,
											"end": 15272,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15190,
											"end": 15272,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "232"
										},
										{
											"begin": 15190,
											"end": 15272,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 15190,
											"end": 15272,
											"name": "tag",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 15190,
											"end": 15272,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15190,
											"end": 15272,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15190,
											"end": 15272,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15190,
											"end": 15272,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15190,
											"end": 15272,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15190,
											"end": 15272,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15190,
											"end": 15272,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 15190,
											"end": 15272,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15190,
											"end": 15272,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15190,
											"end": 15272,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 15190,
											"end": 15272,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 15190,
											"end": 15272,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 15190,
											"end": 15272,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 15190,
											"end": 15272,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15190,
											"end": 15272,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15190,
											"end": 15272,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15190,
											"end": 15272,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15190,
											"end": 15272,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 15190,
											"end": 15272,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 15190,
											"end": 15272,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15190,
											"end": 15272,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15190,
											"end": 15272,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15190,
											"end": 15272,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15190,
											"end": 15272,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 15190,
											"end": 15272,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 15190,
											"end": 15272,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15190,
											"end": 15272,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15190,
											"end": 15272,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 15190,
											"end": 15272,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15190,
											"end": 15272,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15190,
											"end": 15272,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15190,
											"end": 15272,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15190,
											"end": 15272,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 15190,
											"end": 15272,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15190,
											"end": 15272,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "234"
										},
										{
											"begin": 15190,
											"end": 15272,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15190,
											"end": 15272,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15190,
											"end": 15272,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15190,
											"end": 15272,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15190,
											"end": 15272,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "235"
										},
										{
											"begin": 15190,
											"end": 15272,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 15190,
											"end": 15272,
											"name": "tag",
											"source": 1,
											"value": "234"
										},
										{
											"begin": 15190,
											"end": 15272,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15190,
											"end": 15272,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 15190,
											"end": 15272,
											"name": "tag",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 15190,
											"end": 15272,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15186,
											"end": 15781,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "236"
										},
										{
											"begin": 15186,
											"end": 15781,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 15186,
											"end": 15781,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 15186,
											"end": 15781,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15186,
											"end": 15781,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15186,
											"end": 15781,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 15186,
											"end": 15781,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "241"
										},
										{
											"begin": 15186,
											"end": 15781,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 15186,
											"end": 15781,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15186,
											"end": 15781,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15186,
											"end": 15781,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15186,
											"end": 15781,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15186,
											"end": 15781,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 15186,
											"end": 15781,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 15186,
											"end": 15781,
											"name": "PUSH",
											"source": 1,
											"value": "3F"
										},
										{
											"begin": 15186,
											"end": 15781,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 15186,
											"end": 15781,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15186,
											"end": 15781,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15186,
											"end": 15781,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15186,
											"end": 15781,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15186,
											"end": 15781,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15186,
											"end": 15781,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15186,
											"end": 15781,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 15186,
											"end": 15781,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15186,
											"end": 15781,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15186,
											"end": 15781,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 15186,
											"end": 15781,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15186,
											"end": 15781,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15186,
											"end": 15781,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 15186,
											"end": 15781,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15186,
											"end": 15781,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 15186,
											"end": 15781,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 15186,
											"end": 15781,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15186,
											"end": 15781,
											"name": "tag",
											"source": 1,
											"value": "241"
										},
										{
											"begin": 15186,
											"end": 15781,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15186,
											"end": 15781,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 15186,
											"end": 15781,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15186,
											"end": 15781,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15186,
											"end": 15781,
											"name": "tag",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 15186,
											"end": 15781,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15186,
											"end": 15781,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15450,
											"end": 15456,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15450,
											"end": 15463,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15467,
											"end": 15468,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15450,
											"end": 15468,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 15446,
											"end": 15767,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "242"
										},
										{
											"begin": 15446,
											"end": 15767,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 15492,
											"end": 15552,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15492,
											"end": 15552,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15492,
											"end": 15552,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15492,
											"end": 15552,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15492,
											"end": 15552,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 15492,
											"end": 15552,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15492,
											"end": 15552,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 15492,
											"end": 15552,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15492,
											"end": 15552,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 15492,
											"end": 15552,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 15446,
											"end": 15767,
											"name": "tag",
											"source": 1,
											"value": "242"
										},
										{
											"begin": 15446,
											"end": 15767,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15719,
											"end": 15725,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15713,
											"end": 15726,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15704,
											"end": 15710,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15700,
											"end": 15702,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15696,
											"end": 15711,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15689,
											"end": 15727,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 15186,
											"end": 15781,
											"name": "tag",
											"source": 1,
											"value": "236"
										},
										{
											"begin": 15186,
											"end": 15781,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 15322,
											"end": 15384,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A85BD01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15322,
											"end": 15384,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 15322,
											"end": 15384,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15315,
											"end": 15384,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 15315,
											"end": 15384,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15151,
											"end": 15833,
											"name": "tag",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 15151,
											"end": 15833,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15818,
											"end": 15822,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 14986,
											"end": 15839,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 14986,
											"end": 15839,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 14986,
											"end": 15839,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14986,
											"end": 15839,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14986,
											"end": 15839,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14986,
											"end": 15839,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14986,
											"end": 15839,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 9900,
											"end": 10790,
											"name": "tag",
											"source": 10,
											"value": "211"
										},
										{
											"begin": 9900,
											"end": 10790,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9953,
											"end": 9960,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9953,
											"end": 9960,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10028,
											"end": 10043,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10028,
											"end": 10043,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 10024,
											"end": 10123,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "248"
										},
										{
											"begin": 10024,
											"end": 10123,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10063,
											"end": 10078,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10063,
											"end": 10078,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 10063,
											"end": 10078,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10106,
											"end": 10108,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 10096,
											"end": 10108,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10024,
											"end": 10123,
											"name": "tag",
											"source": 10,
											"value": "248"
										},
										{
											"begin": 10024,
											"end": 10123,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10149,
											"end": 10155,
											"name": "PUSH",
											"source": 10,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 10140,
											"end": 10145,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10140,
											"end": 10155,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 10136,
											"end": 10235,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "251"
										},
										{
											"begin": 10136,
											"end": 10235,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 10184,
											"end": 10190,
											"name": "PUSH",
											"source": 10,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 10175,
											"end": 10190,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10175,
											"end": 10190,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 10175,
											"end": 10190,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10218,
											"end": 10220,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10208,
											"end": 10220,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10136,
											"end": 10235,
											"name": "tag",
											"source": 10,
											"value": "251"
										},
										{
											"begin": 10136,
											"end": 10235,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10261,
											"end": 10267,
											"name": "PUSH",
											"source": 10,
											"value": "2386F26FC10000"
										},
										{
											"begin": 10252,
											"end": 10257,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10252,
											"end": 10267,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 10248,
											"end": 10347,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "254"
										},
										{
											"begin": 10248,
											"end": 10347,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 10296,
											"end": 10302,
											"name": "PUSH",
											"source": 10,
											"value": "2386F26FC10000"
										},
										{
											"begin": 10287,
											"end": 10302,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10287,
											"end": 10302,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 10287,
											"end": 10302,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10330,
											"end": 10332,
											"name": "PUSH",
											"source": 10,
											"value": "10"
										},
										{
											"begin": 10320,
											"end": 10332,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10248,
											"end": 10347,
											"name": "tag",
											"source": 10,
											"value": "254"
										},
										{
											"begin": 10248,
											"end": 10347,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10373,
											"end": 10378,
											"name": "PUSH",
											"source": 10,
											"value": "5F5E100"
										},
										{
											"begin": 10364,
											"end": 10369,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10364,
											"end": 10378,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 10360,
											"end": 10456,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "257"
										},
										{
											"begin": 10360,
											"end": 10456,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 10407,
											"end": 10412,
											"name": "PUSH",
											"source": 10,
											"value": "5F5E100"
										},
										{
											"begin": 10398,
											"end": 10412,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10398,
											"end": 10412,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 10398,
											"end": 10412,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10440,
											"end": 10441,
											"name": "PUSH",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 10430,
											"end": 10441,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10360,
											"end": 10456,
											"name": "tag",
											"source": 10,
											"value": "257"
										},
										{
											"begin": 10360,
											"end": 10456,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10482,
											"end": 10487,
											"name": "PUSH",
											"source": 10,
											"value": "2710"
										},
										{
											"begin": 10473,
											"end": 10478,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10473,
											"end": 10487,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 10469,
											"end": 10565,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "260"
										},
										{
											"begin": 10469,
											"end": 10565,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 10516,
											"end": 10521,
											"name": "PUSH",
											"source": 10,
											"value": "2710"
										},
										{
											"begin": 10507,
											"end": 10521,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10507,
											"end": 10521,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 10507,
											"end": 10521,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10549,
											"end": 10550,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 10539,
											"end": 10550,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10469,
											"end": 10565,
											"name": "tag",
											"source": 10,
											"value": "260"
										},
										{
											"begin": 10469,
											"end": 10565,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10591,
											"end": 10596,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 10582,
											"end": 10587,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10582,
											"end": 10596,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 10578,
											"end": 10674,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "263"
										},
										{
											"begin": 10578,
											"end": 10674,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 10625,
											"end": 10630,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 10616,
											"end": 10630,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10616,
											"end": 10630,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 10616,
											"end": 10630,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10658,
											"end": 10659,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 10648,
											"end": 10659,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10578,
											"end": 10674,
											"name": "tag",
											"source": 10,
											"value": "263"
										},
										{
											"begin": 10578,
											"end": 10674,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10700,
											"end": 10705,
											"name": "PUSH",
											"source": 10,
											"value": "A"
										},
										{
											"begin": 10691,
											"end": 10696,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10691,
											"end": 10705,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 10687,
											"end": 10751,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 10687,
											"end": 10751,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 10735,
											"end": 10736,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 10725,
											"end": 10736,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10777,
											"end": 10783,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9900,
											"end": 10790,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9900,
											"end": 10790,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 14,
											"end": 145,
											"name": "tag",
											"source": 11,
											"value": "268"
										},
										{
											"begin": 14,
											"end": 145,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 88,
											"end": 120,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 88,
											"end": 120,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 78,
											"end": 121,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 78,
											"end": 121,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 68,
											"end": 139,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "169"
										},
										{
											"begin": 68,
											"end": 139,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 135,
											"end": 136,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 132,
											"end": 133,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 125,
											"end": 137,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 150,
											"end": 395,
											"name": "tag",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 150,
											"end": 395,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 208,
											"end": 214,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 261,
											"end": 263,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 249,
											"end": 258,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 240,
											"end": 247,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 236,
											"end": 259,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 232,
											"end": 264,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 229,
											"end": 281,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 229,
											"end": 281,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "277"
										},
										{
											"begin": 229,
											"end": 281,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 277,
											"end": 278,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 274,
											"end": 275,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 267,
											"end": 279,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 229,
											"end": 281,
											"name": "tag",
											"source": 11,
											"value": "277"
										},
										{
											"begin": 229,
											"end": 281,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 316,
											"end": 325,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 303,
											"end": 326,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 335,
											"end": 365,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "159"
										},
										{
											"begin": 359,
											"end": 364,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 335,
											"end": 365,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "268"
										},
										{
											"begin": 335,
											"end": 365,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 592,
											"end": 850,
											"name": "tag",
											"source": 11,
											"value": "269"
										},
										{
											"begin": 592,
											"end": 850,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 664,
											"end": 665,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 674,
											"end": 787,
											"name": "tag",
											"source": 11,
											"value": "281"
										},
										{
											"begin": 674,
											"end": 787,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 688,
											"end": 694,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 685,
											"end": 686,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 682,
											"end": 695,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 674,
											"end": 787,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 674,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "283"
										},
										{
											"begin": 674,
											"end": 787,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 764,
											"end": 775,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 764,
											"end": 775,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 764,
											"end": 775,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 758,
											"end": 776,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 745,
											"end": 756,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 745,
											"end": 756,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 745,
											"end": 756,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 738,
											"end": 777,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 710,
											"end": 712,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 703,
											"end": 713,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 674,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "281"
										},
										{
											"begin": 674,
											"end": 787,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 674,
											"end": 787,
											"name": "tag",
											"source": 11,
											"value": "283"
										},
										{
											"begin": 674,
											"end": 787,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 805,
											"end": 811,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 802,
											"end": 803,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 799,
											"end": 812,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 796,
											"end": 844,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 796,
											"end": 844,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "152"
										},
										{
											"begin": 796,
											"end": 844,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 840,
											"end": 841,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 822,
											"end": 838,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 822,
											"end": 838,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 815,
											"end": 842,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 592,
											"end": 850,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 855,
											"end": 1113,
											"name": "tag",
											"source": 11,
											"value": "270"
										},
										{
											"begin": 855,
											"end": 1113,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 897,
											"end": 900,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 935,
											"end": 940,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 929,
											"end": 941,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 962,
											"end": 968,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 957,
											"end": 960,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 950,
											"end": 969,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 978,
											"end": 1041,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "286"
										},
										{
											"begin": 1034,
											"end": 1040,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1027,
											"end": 1031,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1022,
											"end": 1025,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 1018,
											"end": 1032,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1011,
											"end": 1015,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1004,
											"end": 1009,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 1000,
											"end": 1016,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 978,
											"end": 1041,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "269"
										},
										{
											"begin": 978,
											"end": 1041,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 978,
											"end": 1041,
											"name": "tag",
											"source": 11,
											"value": "286"
										},
										{
											"begin": 978,
											"end": 1041,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1095,
											"end": 1097,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 1074,
											"end": 1089,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1070,
											"end": 1099,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1061,
											"end": 1100,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1061,
											"end": 1100,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1061,
											"end": 1100,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1061,
											"end": 1100,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1102,
											"end": 1106,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1057,
											"end": 1107,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1057,
											"end": 1107,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 855,
											"end": 1113,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 855,
											"end": 1113,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 1118,
											"end": 1338,
											"name": "tag",
											"source": 11,
											"value": "29"
										},
										{
											"begin": 1118,
											"end": 1338,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1267,
											"end": 1269,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1256,
											"end": 1265,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1249,
											"end": 1270,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1230,
											"end": 1234,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1287,
											"end": 1332,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "159"
										},
										{
											"begin": 1328,
											"end": 1330,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1317,
											"end": 1326,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1313,
											"end": 1331,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1305,
											"end": 1311,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1287,
											"end": 1332,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "270"
										},
										{
											"begin": 1287,
											"end": 1332,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1343,
											"end": 1523,
											"name": "tag",
											"source": 11,
											"value": "32"
										},
										{
											"begin": 1343,
											"end": 1523,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1402,
											"end": 1408,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1455,
											"end": 1457,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1443,
											"end": 1452,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1434,
											"end": 1441,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1430,
											"end": 1453,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1426,
											"end": 1458,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 1423,
											"end": 1475,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1423,
											"end": 1475,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "290"
										},
										{
											"begin": 1423,
											"end": 1475,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1471,
											"end": 1472,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1468,
											"end": 1469,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1461,
											"end": 1473,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1423,
											"end": 1475,
											"name": "tag",
											"source": 11,
											"value": "290"
										},
										{
											"begin": 1423,
											"end": 1475,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1494,
											"end": 1517,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 1494,
											"end": 1517,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1343,
											"end": 1523,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1343,
											"end": 1523,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 1736,
											"end": 1909,
											"name": "tag",
											"source": 11,
											"value": "271"
										},
										{
											"begin": 1736,
											"end": 1909,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1804,
											"end": 1824,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1804,
											"end": 1824,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1853,
											"end": 1884,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1853,
											"end": 1884,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1843,
											"end": 1885,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1843,
											"end": 1885,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1833,
											"end": 1903,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "293"
										},
										{
											"begin": 1833,
											"end": 1903,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1899,
											"end": 1900,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1896,
											"end": 1897,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1889,
											"end": 1901,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1833,
											"end": 1903,
											"name": "tag",
											"source": 11,
											"value": "293"
										},
										{
											"begin": 1833,
											"end": 1903,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1736,
											"end": 1909,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1736,
											"end": 1909,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1736,
											"end": 1909,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1736,
											"end": 1909,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 1914,
											"end": 2168,
											"name": "tag",
											"source": 11,
											"value": "38"
										},
										{
											"begin": 1914,
											"end": 2168,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1982,
											"end": 1988,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1990,
											"end": 1996,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2043,
											"end": 2045,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2031,
											"end": 2040,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2022,
											"end": 2029,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 2018,
											"end": 2041,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2014,
											"end": 2046,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 2011,
											"end": 2063,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2011,
											"end": 2063,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "295"
										},
										{
											"begin": 2011,
											"end": 2063,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2059,
											"end": 2060,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2056,
											"end": 2057,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2049,
											"end": 2061,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2011,
											"end": 2063,
											"name": "tag",
											"source": 11,
											"value": "295"
										},
										{
											"begin": 2011,
											"end": 2063,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2082,
											"end": 2111,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "296"
										},
										{
											"begin": 2101,
											"end": 2110,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2082,
											"end": 2111,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "271"
										},
										{
											"begin": 2082,
											"end": 2111,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 2082,
											"end": 2111,
											"name": "tag",
											"source": 11,
											"value": "296"
										},
										{
											"begin": 2082,
											"end": 2111,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2072,
											"end": 2111,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 2158,
											"end": 2160,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2143,
											"end": 2161,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 2143,
											"end": 2161,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2143,
											"end": 2161,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 2143,
											"end": 2161,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2130,
											"end": 2162,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 2130,
											"end": 2162,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1914,
											"end": 2168,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 2173,
											"end": 2501,
											"name": "tag",
											"source": 11,
											"value": "42"
										},
										{
											"begin": 2173,
											"end": 2501,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2250,
											"end": 2256,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2258,
											"end": 2264,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2266,
											"end": 2272,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2319,
											"end": 2321,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 2307,
											"end": 2316,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2298,
											"end": 2305,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 2294,
											"end": 2317,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2290,
											"end": 2322,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 2287,
											"end": 2339,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2287,
											"end": 2339,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "298"
										},
										{
											"begin": 2287,
											"end": 2339,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2335,
											"end": 2336,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2332,
											"end": 2333,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2325,
											"end": 2337,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2287,
											"end": 2339,
											"name": "tag",
											"source": 11,
											"value": "298"
										},
										{
											"begin": 2287,
											"end": 2339,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2358,
											"end": 2387,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "299"
										},
										{
											"begin": 2377,
											"end": 2386,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2358,
											"end": 2387,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "271"
										},
										{
											"begin": 2358,
											"end": 2387,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 2358,
											"end": 2387,
											"name": "tag",
											"source": 11,
											"value": "299"
										},
										{
											"begin": 2358,
											"end": 2387,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2348,
											"end": 2387,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2348,
											"end": 2387,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2406,
											"end": 2444,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "300"
										},
										{
											"begin": 2440,
											"end": 2442,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2429,
											"end": 2438,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 2425,
											"end": 2443,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2406,
											"end": 2444,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "271"
										},
										{
											"begin": 2406,
											"end": 2444,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 2406,
											"end": 2444,
											"name": "tag",
											"source": 11,
											"value": "300"
										},
										{
											"begin": 2406,
											"end": 2444,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2396,
											"end": 2444,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2396,
											"end": 2444,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2491,
											"end": 2493,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2480,
											"end": 2489,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2476,
											"end": 2494,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2463,
											"end": 2495,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 2453,
											"end": 2495,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2453,
											"end": 2495,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2173,
											"end": 2501,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2173,
											"end": 2501,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2173,
											"end": 2501,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2173,
											"end": 2501,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2173,
											"end": 2501,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2173,
											"end": 2501,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 2506,
											"end": 2692,
											"name": "tag",
											"source": 11,
											"value": "53"
										},
										{
											"begin": 2506,
											"end": 2692,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2565,
											"end": 2571,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2618,
											"end": 2620,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2606,
											"end": 2615,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2597,
											"end": 2604,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2593,
											"end": 2616,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2589,
											"end": 2621,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 2586,
											"end": 2638,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2586,
											"end": 2638,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "302"
										},
										{
											"begin": 2586,
											"end": 2638,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2634,
											"end": 2635,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2631,
											"end": 2632,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2624,
											"end": 2636,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2586,
											"end": 2638,
											"name": "tag",
											"source": 11,
											"value": "302"
										},
										{
											"begin": 2586,
											"end": 2638,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2657,
											"end": 2686,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "159"
										},
										{
											"begin": 2676,
											"end": 2685,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2657,
											"end": 2686,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "271"
										},
										{
											"begin": 2657,
											"end": 2686,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 2879,
											"end": 3039,
											"name": "tag",
											"source": 11,
											"value": "272"
										},
										{
											"begin": 2879,
											"end": 3039,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2944,
											"end": 2964,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2944,
											"end": 2964,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 3000,
											"end": 3013,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3000,
											"end": 3013,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2993,
											"end": 3014,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2983,
											"end": 3015,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2983,
											"end": 3015,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 2973,
											"end": 3033,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "293"
										},
										{
											"begin": 2973,
											"end": 3033,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3029,
											"end": 3030,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3026,
											"end": 3027,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3019,
											"end": 3031,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3044,
											"end": 3298,
											"name": "tag",
											"source": 11,
											"value": "62"
										},
										{
											"begin": 3044,
											"end": 3298,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3109,
											"end": 3115,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3117,
											"end": 3123,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3170,
											"end": 3172,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3158,
											"end": 3167,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3149,
											"end": 3156,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 3145,
											"end": 3168,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3141,
											"end": 3173,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 3138,
											"end": 3190,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3138,
											"end": 3190,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "308"
										},
										{
											"begin": 3138,
											"end": 3190,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3186,
											"end": 3187,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3183,
											"end": 3184,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3176,
											"end": 3188,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3138,
											"end": 3190,
											"name": "tag",
											"source": 11,
											"value": "308"
										},
										{
											"begin": 3138,
											"end": 3190,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3209,
											"end": 3238,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "309"
										},
										{
											"begin": 3228,
											"end": 3237,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3209,
											"end": 3238,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "271"
										},
										{
											"begin": 3209,
											"end": 3238,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 3209,
											"end": 3238,
											"name": "tag",
											"source": 11,
											"value": "309"
										},
										{
											"begin": 3209,
											"end": 3238,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3199,
											"end": 3238,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3199,
											"end": 3238,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3257,
											"end": 3292,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "310"
										},
										{
											"begin": 3288,
											"end": 3290,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3277,
											"end": 3286,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3273,
											"end": 3291,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3257,
											"end": 3292,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "272"
										},
										{
											"begin": 3257,
											"end": 3292,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 3257,
											"end": 3292,
											"name": "tag",
											"source": 11,
											"value": "310"
										},
										{
											"begin": 3257,
											"end": 3292,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3247,
											"end": 3292,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3247,
											"end": 3292,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3044,
											"end": 3298,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3044,
											"end": 3298,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3044,
											"end": 3298,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3044,
											"end": 3298,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3044,
											"end": 3298,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3044,
											"end": 3298,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 3303,
											"end": 3483,
											"name": "tag",
											"source": 11,
											"value": "66"
										},
										{
											"begin": 3303,
											"end": 3483,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3359,
											"end": 3365,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3412,
											"end": 3414,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3400,
											"end": 3409,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3391,
											"end": 3398,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3387,
											"end": 3410,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3383,
											"end": 3415,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 3380,
											"end": 3432,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3380,
											"end": 3432,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "312"
										},
										{
											"begin": 3380,
											"end": 3432,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3428,
											"end": 3429,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3425,
											"end": 3426,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3418,
											"end": 3430,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3380,
											"end": 3432,
											"name": "tag",
											"source": 11,
											"value": "312"
										},
										{
											"begin": 3380,
											"end": 3432,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3451,
											"end": 3477,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "159"
										},
										{
											"begin": 3467,
											"end": 3476,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3451,
											"end": 3477,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "272"
										},
										{
											"begin": 3451,
											"end": 3477,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 3488,
											"end": 3615,
											"name": "tag",
											"source": 11,
											"value": "214"
										},
										{
											"begin": 3488,
											"end": 3615,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3549,
											"end": 3559,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B71"
										},
										{
											"begin": 3544,
											"end": 3547,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 3540,
											"end": 3560,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 3537,
											"end": 3538,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3530,
											"end": 3561,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3580,
											"end": 3584,
											"name": "PUSH",
											"source": 11,
											"value": "41"
										},
										{
											"begin": 3577,
											"end": 3578,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3570,
											"end": 3585,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3604,
											"end": 3608,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 3601,
											"end": 3602,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3594,
											"end": 3609,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3620,
											"end": 4758,
											"name": "tag",
											"source": 11,
											"value": "70"
										},
										{
											"begin": 3620,
											"end": 4758,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3715,
											"end": 3721,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3723,
											"end": 3729,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3731,
											"end": 3737,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3739,
											"end": 3745,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3792,
											"end": 3795,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 3780,
											"end": 3789,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 3771,
											"end": 3778,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 3767,
											"end": 3790,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3763,
											"end": 3796,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 3760,
											"end": 3813,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3760,
											"end": 3813,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "316"
										},
										{
											"begin": 3760,
											"end": 3813,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3809,
											"end": 3810,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3806,
											"end": 3807,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3799,
											"end": 3811,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3760,
											"end": 3813,
											"name": "tag",
											"source": 11,
											"value": "316"
										},
										{
											"begin": 3760,
											"end": 3813,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3832,
											"end": 3861,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "317"
										},
										{
											"begin": 3851,
											"end": 3860,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 3832,
											"end": 3861,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "271"
										},
										{
											"begin": 3832,
											"end": 3861,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 3832,
											"end": 3861,
											"name": "tag",
											"source": 11,
											"value": "317"
										},
										{
											"begin": 3832,
											"end": 3861,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3822,
											"end": 3861,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 3822,
											"end": 3861,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3880,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "318"
										},
										{
											"begin": 3914,
											"end": 3916,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3903,
											"end": 3912,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 3899,
											"end": 3917,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3880,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "271"
										},
										{
											"begin": 3880,
											"end": 3918,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 3880,
											"end": 3918,
											"name": "tag",
											"source": 11,
											"value": "318"
										},
										{
											"begin": 3880,
											"end": 3918,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3870,
											"end": 3918,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3870,
											"end": 3918,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3965,
											"end": 3967,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3954,
											"end": 3963,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 3950,
											"end": 3968,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3937,
											"end": 3969,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 3927,
											"end": 3969,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3927,
											"end": 3969,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4020,
											"end": 4022,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 4009,
											"end": 4018,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 4005,
											"end": 4023,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3992,
											"end": 4024,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 4043,
											"end": 4061,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4084,
											"end": 4086,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4076,
											"end": 4082,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4073,
											"end": 4087,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 4070,
											"end": 4104,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4070,
											"end": 4104,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "319"
										},
										{
											"begin": 4070,
											"end": 4104,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4100,
											"end": 4101,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4097,
											"end": 4098,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4090,
											"end": 4102,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4070,
											"end": 4104,
											"name": "tag",
											"source": 11,
											"value": "319"
										},
										{
											"begin": 4070,
											"end": 4104,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4138,
											"end": 4144,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4127,
											"end": 4136,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 4123,
											"end": 4145,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4113,
											"end": 4145,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4113,
											"end": 4145,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4183,
											"end": 4190,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 4176,
											"end": 4180,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 4172,
											"end": 4174,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4168,
											"end": 4181,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4164,
											"end": 4191,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 4154,
											"end": 4209,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "320"
										},
										{
											"begin": 4154,
											"end": 4209,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4205,
											"end": 4206,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4202,
											"end": 4203,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4195,
											"end": 4207,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4154,
											"end": 4209,
											"name": "tag",
											"source": 11,
											"value": "320"
										},
										{
											"begin": 4154,
											"end": 4209,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4241,
											"end": 4243,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4228,
											"end": 4244,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 4263,
											"end": 4265,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4259,
											"end": 4261,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4256,
											"end": 4266,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 4253,
											"end": 4289,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4253,
											"end": 4289,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "322"
										},
										{
											"begin": 4253,
											"end": 4289,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4269,
											"end": 4287,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "322"
										},
										{
											"begin": 4269,
											"end": 4287,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "214"
										},
										{
											"begin": 4269,
											"end": 4287,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 4269,
											"end": 4287,
											"name": "tag",
											"source": 11,
											"value": "322"
										},
										{
											"begin": 4269,
											"end": 4287,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4344,
											"end": 4346,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4338,
											"end": 4347,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4312,
											"end": 4314,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 4398,
											"end": 4411,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4398,
											"end": 4411,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4394,
											"end": 4416,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4394,
											"end": 4416,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4394,
											"end": 4416,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4418,
											"end": 4420,
											"name": "PUSH",
											"source": 11,
											"value": "3F"
										},
										{
											"begin": 4390,
											"end": 4421,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4386,
											"end": 4426,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4374,
											"end": 4427,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4374,
											"end": 4427,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4374,
											"end": 4427,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4442,
											"end": 4460,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4442,
											"end": 4460,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4442,
											"end": 4460,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 4462,
											"end": 4484,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4462,
											"end": 4484,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4462,
											"end": 4484,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 4439,
											"end": 4485,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 4436,
											"end": 4508,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4436,
											"end": 4508,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "324"
										},
										{
											"begin": 4436,
											"end": 4508,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4488,
											"end": 4506,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "324"
										},
										{
											"begin": 4488,
											"end": 4506,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "214"
										},
										{
											"begin": 4488,
											"end": 4506,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 4488,
											"end": 4506,
											"name": "tag",
											"source": 11,
											"value": "324"
										},
										{
											"begin": 4488,
											"end": 4506,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4528,
											"end": 4538,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4524,
											"end": 4526,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4517,
											"end": 4539,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4563,
											"end": 4565,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4555,
											"end": 4561,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4548,
											"end": 4566,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4603,
											"end": 4610,
											"name": "DUP11",
											"source": 11
										},
										{
											"begin": 4598,
											"end": 4600,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4593,
											"end": 4595,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4589,
											"end": 4591,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 4585,
											"end": 4596,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4581,
											"end": 4601,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4578,
											"end": 4611,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 4575,
											"end": 4628,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4575,
											"end": 4628,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "325"
										},
										{
											"begin": 4575,
											"end": 4628,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4624,
											"end": 4625,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4621,
											"end": 4622,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4614,
											"end": 4626,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4575,
											"end": 4628,
											"name": "tag",
											"source": 11,
											"value": "325"
										},
										{
											"begin": 4575,
											"end": 4628,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4680,
											"end": 4682,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4675,
											"end": 4677,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4671,
											"end": 4673,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 4667,
											"end": 4678,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4662,
											"end": 4664,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4654,
											"end": 4660,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4650,
											"end": 4665,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4637,
											"end": 4683,
											"name": "CALLDATACOPY",
											"source": 11
										},
										{
											"begin": 4725,
											"end": 4726,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4720,
											"end": 4722,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4715,
											"end": 4717,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4707,
											"end": 4713,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4703,
											"end": 4718,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4699,
											"end": 4723,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4692,
											"end": 4727,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4746,
											"end": 4752,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4736,
											"end": 4752,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 4736,
											"end": 4752,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4736,
											"end": 4752,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4736,
											"end": 4752,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4736,
											"end": 4752,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4736,
											"end": 4752,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4736,
											"end": 4752,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3620,
											"end": 4758,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3620,
											"end": 4758,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 3620,
											"end": 4758,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3620,
											"end": 4758,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 3620,
											"end": 4758,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3620,
											"end": 4758,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3620,
											"end": 4758,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3620,
											"end": 4758,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 4763,
											"end": 5023,
											"name": "tag",
											"source": 11,
											"value": "78"
										},
										{
											"begin": 4763,
											"end": 5023,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4831,
											"end": 4837,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4839,
											"end": 4845,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4892,
											"end": 4894,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4880,
											"end": 4889,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4871,
											"end": 4878,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 4867,
											"end": 4890,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4863,
											"end": 4895,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 4860,
											"end": 4912,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4860,
											"end": 4912,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "327"
										},
										{
											"begin": 4860,
											"end": 4912,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4908,
											"end": 4909,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4905,
											"end": 4906,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4898,
											"end": 4910,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4860,
											"end": 4912,
											"name": "tag",
											"source": 11,
											"value": "327"
										},
										{
											"begin": 4860,
											"end": 4912,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4931,
											"end": 4960,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "328"
										},
										{
											"begin": 4950,
											"end": 4959,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4931,
											"end": 4960,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "271"
										},
										{
											"begin": 4931,
											"end": 4960,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 4931,
											"end": 4960,
											"name": "tag",
											"source": 11,
											"value": "328"
										},
										{
											"begin": 4931,
											"end": 4960,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4921,
											"end": 4960,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4921,
											"end": 4960,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4979,
											"end": 5017,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "310"
										},
										{
											"begin": 5013,
											"end": 5015,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5002,
											"end": 5011,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4998,
											"end": 5016,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4979,
											"end": 5017,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "271"
										},
										{
											"begin": 4979,
											"end": 5017,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 5028,
											"end": 5408,
											"name": "tag",
											"source": 11,
											"value": "88"
										},
										{
											"begin": 5028,
											"end": 5408,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5107,
											"end": 5108,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 5103,
											"end": 5115,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5103,
											"end": 5115,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5103,
											"end": 5115,
											"name": "SHR",
											"source": 11
										},
										{
											"begin": 5103,
											"end": 5115,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5150,
											"end": 5162,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5150,
											"end": 5162,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5150,
											"end": 5162,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5171,
											"end": 5232,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "331"
										},
										{
											"begin": 5171,
											"end": 5232,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5225,
											"end": 5229,
											"name": "PUSH",
											"source": 11,
											"value": "7F"
										},
										{
											"begin": 5217,
											"end": 5223,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5213,
											"end": 5230,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5203,
											"end": 5230,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5203,
											"end": 5230,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5171,
											"end": 5232,
											"name": "tag",
											"source": 11,
											"value": "331"
										},
										{
											"begin": 5171,
											"end": 5232,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5278,
											"end": 5280,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5270,
											"end": 5276,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5267,
											"end": 5281,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 5247,
											"end": 5265,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5244,
											"end": 5282,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5241,
											"end": 5402,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "332"
										},
										{
											"begin": 5241,
											"end": 5402,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5324,
											"end": 5334,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B71"
										},
										{
											"begin": 5319,
											"end": 5322,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 5315,
											"end": 5335,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 5312,
											"end": 5313,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5305,
											"end": 5336,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5359,
											"end": 5363,
											"name": "PUSH",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 5356,
											"end": 5357,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5349,
											"end": 5364,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5387,
											"end": 5391,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 5384,
											"end": 5385,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5377,
											"end": 5392,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 5241,
											"end": 5402,
											"name": "tag",
											"source": 11,
											"value": "332"
										},
										{
											"begin": 5241,
											"end": 5402,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5241,
											"end": 5402,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5028,
											"end": 5408,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5028,
											"end": 5408,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5028,
											"end": 5408,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5028,
											"end": 5408,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 6245,
											"end": 6654,
											"name": "tag",
											"source": 11,
											"value": "117"
										},
										{
											"begin": 6245,
											"end": 6654,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6447,
											"end": 6449,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6429,
											"end": 6450,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6429,
											"end": 6450,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6429,
											"end": 6450,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6486,
											"end": 6488,
											"name": "PUSH",
											"source": 11,
											"value": "2D"
										},
										{
											"begin": 6466,
											"end": 6484,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6466,
											"end": 6484,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6466,
											"end": 6484,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6459,
											"end": 6489,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6525,
											"end": 6559,
											"name": "PUSH",
											"source": 11,
											"value": "4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65"
										},
										{
											"begin": 6520,
											"end": 6522,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6505,
											"end": 6523,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6505,
											"end": 6523,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6498,
											"end": 6560,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1C881BDC88185C1C1C9BDD9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "9A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6591,
											"end": 6593,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 6576,
											"end": 6594,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6576,
											"end": 6594,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6569,
											"end": 6612,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6644,
											"end": 6647,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 6629,
											"end": 6648,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6629,
											"end": 6648,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6245,
											"end": 6654,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 7774,
											"end": 8244,
											"name": "tag",
											"source": 11,
											"value": "163"
										},
										{
											"begin": 7774,
											"end": 8244,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7953,
											"end": 7956,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7991,
											"end": 7997,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 7985,
											"end": 7998,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 8007,
											"end": 8060,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "340"
										},
										{
											"begin": 8053,
											"end": 8059,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8048,
											"end": 8051,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 8041,
											"end": 8045,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 8033,
											"end": 8039,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 8029,
											"end": 8046,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8007,
											"end": 8060,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "269"
										},
										{
											"begin": 8007,
											"end": 8060,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 8007,
											"end": 8060,
											"name": "tag",
											"source": 11,
											"value": "340"
										},
										{
											"begin": 8007,
											"end": 8060,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8123,
											"end": 8136,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 8123,
											"end": 8136,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 8082,
											"end": 8098,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8082,
											"end": 8098,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 8082,
											"end": 8098,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8082,
											"end": 8098,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8145,
											"end": 8202,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "341"
										},
										{
											"begin": 8123,
											"end": 8136,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8082,
											"end": 8098,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 8179,
											"end": 8183,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 8167,
											"end": 8184,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 8167,
											"end": 8184,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8145,
											"end": 8202,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "269"
										},
										{
											"begin": 8145,
											"end": 8202,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 8145,
											"end": 8202,
											"name": "tag",
											"source": 11,
											"value": "341"
										},
										{
											"begin": 8145,
											"end": 8202,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8218,
											"end": 8238,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8218,
											"end": 8238,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 7774,
											"end": 8244,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7774,
											"end": 8244,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 8249,
											"end": 8650,
											"name": "tag",
											"source": 11,
											"value": "184"
										},
										{
											"begin": 8249,
											"end": 8650,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8451,
											"end": 8453,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 8433,
											"end": 8454,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 8433,
											"end": 8454,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8433,
											"end": 8454,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8490,
											"end": 8492,
											"name": "PUSH",
											"source": 11,
											"value": "25"
										},
										{
											"begin": 8470,
											"end": 8488,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8470,
											"end": 8488,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8470,
											"end": 8488,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8463,
											"end": 8493,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8529,
											"end": 8563,
											"name": "PUSH",
											"source": 11,
											"value": "4552433732313A207472616E736665722066726F6D20696E636F727265637420"
										},
										{
											"begin": 8524,
											"end": 8526,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 8509,
											"end": 8527,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8509,
											"end": 8527,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8502,
											"end": 8564,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "37BBB732B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8595,
											"end": 8597,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 8580,
											"end": 8598,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8580,
											"end": 8598,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8573,
											"end": 8608,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8640,
											"end": 8643,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 8625,
											"end": 8644,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8625,
											"end": 8644,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8249,
											"end": 8650,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 9414,
											"end": 9828,
											"name": "tag",
											"source": 11,
											"value": "207"
										},
										{
											"begin": 9414,
											"end": 9828,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9616,
											"end": 9618,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 9598,
											"end": 9619,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 9598,
											"end": 9619,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9598,
											"end": 9619,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9655,
											"end": 9657,
											"name": "PUSH",
											"source": 11,
											"value": "32"
										},
										{
											"begin": 9635,
											"end": 9653,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9635,
											"end": 9653,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9635,
											"end": 9653,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9628,
											"end": 9658,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9694,
											"end": 9728,
											"name": "PUSH",
											"source": 11,
											"value": "4552433732313A207472616E7366657220746F206E6F6E204552433732315265"
										},
										{
											"begin": 9689,
											"end": 9691,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 9674,
											"end": 9692,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9674,
											"end": 9692,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9667,
											"end": 9729,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "31B2B4BB32B91034B6B83632B6B2B73A32B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9760,
											"end": 9762,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 9745,
											"end": 9763,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9745,
											"end": 9763,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9738,
											"end": 9786,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9818,
											"end": 9821,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 9803,
											"end": 9822,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9803,
											"end": 9822,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9414,
											"end": 9828,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 9965,
											"end": 10454,
											"name": "tag",
											"source": 11,
											"value": "232"
										},
										{
											"begin": 9965,
											"end": 10454,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10234,
											"end": 10249,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 10234,
											"end": 10249,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10234,
											"end": 10249,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 10216,
											"end": 10250,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10216,
											"end": 10250,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10286,
											"end": 10301,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 10286,
											"end": 10301,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 10281,
											"end": 10283,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 10266,
											"end": 10284,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10266,
											"end": 10284,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10259,
											"end": 10302,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10333,
											"end": 10335,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 10318,
											"end": 10336,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10318,
											"end": 10336,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10311,
											"end": 10345,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 10311,
											"end": 10345,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10311,
											"end": 10345,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10381,
											"end": 10384,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 10376,
											"end": 10378,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 10361,
											"end": 10379,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10361,
											"end": 10379,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10354,
											"end": 10385,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10354,
											"end": 10385,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10354,
											"end": 10385,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10159,
											"end": 10163,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10159,
											"end": 10163,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10402,
											"end": 10448,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "348"
										},
										{
											"begin": 10402,
											"end": 10448,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10428,
											"end": 10447,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 10428,
											"end": 10447,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10420,
											"end": 10426,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 10402,
											"end": 10448,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "270"
										},
										{
											"begin": 10402,
											"end": 10448,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 10402,
											"end": 10448,
											"name": "tag",
											"source": 11,
											"value": "348"
										},
										{
											"begin": 10402,
											"end": 10448,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10394,
											"end": 10448,
											"name": "SWAP7",
											"source": 11
										},
										{
											"begin": 9965,
											"end": 10454,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9965,
											"end": 10454,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 10459,
											"end": 10708,
											"name": "tag",
											"source": 11,
											"value": "235"
										},
										{
											"begin": 10459,
											"end": 10708,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10528,
											"end": 10534,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10581,
											"end": 10583,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 10569,
											"end": 10578,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10560,
											"end": 10567,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 10556,
											"end": 10579,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 10552,
											"end": 10584,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 10549,
											"end": 10601,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 10549,
											"end": 10601,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "350"
										},
										{
											"begin": 10549,
											"end": 10601,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 10597,
											"end": 10598,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10594,
											"end": 10595,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 10587,
											"end": 10599,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 10549,
											"end": 10601,
											"name": "tag",
											"source": 11,
											"value": "350"
										},
										{
											"begin": 10549,
											"end": 10601,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10629,
											"end": 10638,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10623,
											"end": 10639,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 10648,
											"end": 10678,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "159"
										},
										{
											"begin": 10672,
											"end": 10677,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10648,
											"end": 10678,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "268"
										},
										{
											"begin": 10648,
											"end": 10678,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"setIsBounded(bool)": "a9f51b23",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_flag\",\"type\":\"bool\"}],\"name\":\"setIsBounded\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":\"ERC721Upgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"mlmContracts/contracts-upgradeable@4.8/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x037c334add4b033ad3493038c25be1682d78c00992e1acb0e2795caff3925271\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8a313cf42389440e2706837c91370323b85971c06afd6d056d21e2bc86459618\",\"dweb:/ipfs/QmT8XUrUvQ9aZaPKrqgRU2JVGWnaxBcUYJA7Q7K5KcLBSZ\"]},\"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol\":{\"keccak256\":\"0x39da87f768912d897ea7d74f96f540bfff87296c5d1df230f0c2d4e8fb42ce0d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://775c06b4f91c11920ac98e9cafee502527d30db0439502fd7d5dcaaf047d424d\",\"dweb:/ipfs/QmY3Ccu7A3pZnWtAnAD6Yd2oigmyJ3XvcZAUHKUx6h3B9r\"]},\"mlmContracts/contracts-upgradeable@4.8/token/ERC721/IERC721ReceiverUpgradeable.sol\":{\"keccak256\":\"0xbb2ed8106d94aeae6858e2551a1e7174df73994b77b13ebd120ccaaef80155f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8bc3c6a456dba727d8dd9fd33420febede490abb49a07469f61d2a3ace66a95a\",\"dweb:/ipfs/QmVAWtEVj7K5AbvgJa9Dz22KiDq9eoptCjnVZqsTMtKXyd\"]},\"mlmContracts/contracts-upgradeable@4.8/token/ERC721/IERC721Upgradeable.sol\":{\"keccak256\":\"0x2c0b89cef83f353c6f9488c013d8a5968587ffdd6dfc26aad53774214b97e229\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4a68e662c2a82412308b1feb24f3d61a44b3b8772f44cbd440446237313c3195\",\"dweb:/ipfs/QmfBuWUE2TQef9hghDzzuVkDskw3UGAyPgLmPifTNV7K6g\"]},\"mlmContracts/contracts-upgradeable@4.8/token/ERC721/extensions/IERC721MetadataUpgradeable.sol\":{\"keccak256\":\"0x95a471796eb5f030fdc438660bebec121ad5d063763e64d92376ffb4b5ce8b70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ffbd627e6958983d288801acdedbf3491ee0ebf1a430338bce47c96481ce9e3\",\"dweb:/ipfs/QmUM1vpmNgBV34sYf946SthDJNGhwwqjoRggmj4TUUQmdB\"]},\"mlmContracts/contracts-upgradeable@4.8/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72460c66cd1c3b1c11b863e0d8df0a1c56f37743019e468dc312c754f43e3b06\",\"dweb:/ipfs/QmPExYKiNb9PUsgktQBupPaM33kzDHxaYoVeJdLhv8s879\"]},\"mlmContracts/contracts-upgradeable@4.8/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"mlmContracts/contracts-upgradeable@4.8/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0x6b9a5d35b744b25529a2856a8093e7c03fb35a34b1c4fb5499e560f8ade140da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://187b5c3a1c9e77678732a2cc5284237f9cfca6bc28ee8bc0a0f4f951d7b3a2f8\",\"dweb:/ipfs/Qmb2KFr7WuQu7btdCiftQG64vTzrG4UyzVmo53EYHcnHYA\"]},\"mlmContracts/contracts-upgradeable@4.8/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0x9a3b990bd56d139df3e454a9edf1c64668530b5a77fc32eb063bc206f958274a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0895399d170daab2d69b4c43a0202e5a07f2e67a93b26e3354dcbedb062232f7\",\"dweb:/ipfs/QmUM1VH3XDk559Dsgh4QPvupr3YVKjz87HrSyYzzVFZbxw\"]},\"mlmContracts/contracts-upgradeable@4.8/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]},\"mlmContracts/contracts-upgradeable@4.8/utils/math/MathUpgradeable.sol\":{\"keccak256\":\"0xc1bd5b53319c68f84e3becd75694d941e8f4be94049903232cd8bc7c535aaa5a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://056027a78e6f4b78a39be530983551651ee5a052e786ca2c1c6a3bb1222b03b4\",\"dweb:/ipfs/QmXRUpywAqNwAfXS89vrtiE2THRM9dX9pQ4QxAkV1Wx9kt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 6,
								"contract": "mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol:ERC721Upgradeable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 9,
								"contract": "mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol:ERC721Upgradeable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 1640,
								"contract": "mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol:ERC721Upgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 1859,
								"contract": "mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol:ERC721Upgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "51",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 197,
								"contract": "mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol:ERC721Upgradeable",
								"label": "_name",
								"offset": 0,
								"slot": "101",
								"type": "t_string_storage"
							},
							{
								"astId": 199,
								"contract": "mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol:ERC721Upgradeable",
								"label": "_symbol",
								"offset": 0,
								"slot": "102",
								"type": "t_string_storage"
							},
							{
								"astId": 203,
								"contract": "mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol:ERC721Upgradeable",
								"label": "_owners",
								"offset": 0,
								"slot": "103",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 207,
								"contract": "mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol:ERC721Upgradeable",
								"label": "_balances",
								"offset": 0,
								"slot": "104",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 211,
								"contract": "mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol:ERC721Upgradeable",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "105",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 217,
								"contract": "mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol:ERC721Upgradeable",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "106",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 219,
								"contract": "mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol:ERC721Upgradeable",
								"label": "manager",
								"offset": 0,
								"slot": "107",
								"type": "t_address"
							},
							{
								"astId": 221,
								"contract": "mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol:ERC721Upgradeable",
								"label": "isBounded",
								"offset": 20,
								"slot": "107",
								"type": "t_bool"
							},
							{
								"astId": 1153,
								"contract": "mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol:ERC721Upgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "108",
								"type": "t_array(t_uint256)44_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)44_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[44]",
								"numberOfBytes": "1408"
							},
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"mlmContracts/contracts-upgradeable@4.8/token/ERC721/IERC721ReceiverUpgradeable.sol": {
				"IERC721ReceiverUpgradeable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.",
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
							}
						},
						"title": "ERC721 token receiver interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"mlmContracts/contracts-upgradeable@4.8/token/ERC721/IERC721ReceiverUpgradeable.sol\":\"IERC721ReceiverUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"mlmContracts/contracts-upgradeable@4.8/token/ERC721/IERC721ReceiverUpgradeable.sol\":{\"keccak256\":\"0xbb2ed8106d94aeae6858e2551a1e7174df73994b77b13ebd120ccaaef80155f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8bc3c6a456dba727d8dd9fd33420febede490abb49a07469f61d2a3ace66a95a\",\"dweb:/ipfs/QmVAWtEVj7K5AbvgJa9Dz22KiDq9eoptCjnVZqsTMtKXyd\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"mlmContracts/contracts-upgradeable@4.8/token/ERC721/IERC721Upgradeable.sol": {
				"IERC721Upgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"mlmContracts/contracts-upgradeable@4.8/token/ERC721/IERC721Upgradeable.sol\":\"IERC721Upgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"mlmContracts/contracts-upgradeable@4.8/token/ERC721/IERC721Upgradeable.sol\":{\"keccak256\":\"0x2c0b89cef83f353c6f9488c013d8a5968587ffdd6dfc26aad53774214b97e229\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4a68e662c2a82412308b1feb24f3d61a44b3b8772f44cbd440446237313c3195\",\"dweb:/ipfs/QmfBuWUE2TQef9hghDzzuVkDskw3UGAyPgLmPifTNV7K6g\"]},\"mlmContracts/contracts-upgradeable@4.8/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"mlmContracts/contracts-upgradeable@4.8/token/ERC721/extensions/IERC721MetadataUpgradeable.sol": {
				"IERC721MetadataUpgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "See https://eips.ethereum.org/EIPS/eip-721",
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC-721 Non-Fungible Token Standard, optional metadata extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"mlmContracts/contracts-upgradeable@4.8/token/ERC721/extensions/IERC721MetadataUpgradeable.sol\":\"IERC721MetadataUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"mlmContracts/contracts-upgradeable@4.8/token/ERC721/IERC721Upgradeable.sol\":{\"keccak256\":\"0x2c0b89cef83f353c6f9488c013d8a5968587ffdd6dfc26aad53774214b97e229\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4a68e662c2a82412308b1feb24f3d61a44b3b8772f44cbd440446237313c3195\",\"dweb:/ipfs/QmfBuWUE2TQef9hghDzzuVkDskw3UGAyPgLmPifTNV7K6g\"]},\"mlmContracts/contracts-upgradeable@4.8/token/ERC721/extensions/IERC721MetadataUpgradeable.sol\":{\"keccak256\":\"0x95a471796eb5f030fdc438660bebec121ad5d063763e64d92376ffb4b5ce8b70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ffbd627e6958983d288801acdedbf3491ee0ebf1a430338bce47c96481ce9e3\",\"dweb:/ipfs/QmUM1vpmNgBV34sYf946SthDJNGhwwqjoRggmj4TUUQmdB\"]},\"mlmContracts/contracts-upgradeable@4.8/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"mlmContracts/contracts-upgradeable@4.8/utils/AddressUpgradeable.sol": {
				"AddressUpgradeable": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"mlmContracts/contracts-upgradeable@4.8/utils/AddressUpgradeable.sol\":194:8281  library AddressUpgradeable {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"mlmContracts/contracts-upgradeable@4.8/utils/AddressUpgradeable.sol\":194:8281  library AddressUpgradeable {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220944960fef7da0b13badaf95c3ae7e444a5d8f4906e4a44509cfb2d5b3ac9cd3564736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220944960fef7da0b13badaf95c3ae7e444a5d8f4906e4a44509cfb2d5b3ac9cd3564736f6c634300080d0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP5 0x49 PUSH1 0xFE 0xF7 0xDA SIGNEXTEND SGT 0xBA 0xDA 0xF9 0x5C GASPRICE 0xE7 0xE4 DIFFICULTY 0xA5 0xD8 DELEGATECALL SWAP1 PUSH15 0x4A44509CFB2D5B3AC9CD3564736F6C PUSH4 0x4300080D STOP CALLER ",
							"sourceMap": "194:8087:5:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;194:8087:5;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220944960fef7da0b13badaf95c3ae7e444a5d8f4906e4a44509cfb2d5b3ac9cd3564736f6c634300080d0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP5 0x49 PUSH1 0xFE 0xF7 0xDA SIGNEXTEND SGT 0xBA 0xDA 0xF9 0x5C GASPRICE 0xE7 0xE4 DIFFICULTY 0xA5 0xD8 DELEGATECALL SWAP1 PUSH15 0x4A44509CFB2D5B3AC9CD3564736F6C PUSH4 0x4300080D STOP CALLER ",
							"sourceMap": "194:8087:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"_revert(bytes memory,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 194,
									"end": 8281,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8281,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8281,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 194,
									"end": 8281,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8281,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8281,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8281,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8281,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8281,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8281,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8281,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8281,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 8281,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8281,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 8281,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 194,
									"end": 8281,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8281,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8281,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8281,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 194,
									"end": 8281,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8281,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 194,
									"end": 8281,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8281,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8281,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 8281,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8281,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8281,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8281,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8281,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 8281,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8281,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8281,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8281,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 194,
									"end": 8281,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220944960fef7da0b13badaf95c3ae7e444a5d8f4906e4a44509cfb2d5b3ac9cd3564736f6c634300080d0033",
									".code": [
										{
											"begin": 194,
											"end": 8281,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 194,
											"end": 8281,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 194,
											"end": 8281,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 194,
											"end": 8281,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 194,
											"end": 8281,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 8281,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 194,
											"end": 8281,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 8281,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 194,
											"end": 8281,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"mlmContracts/contracts-upgradeable@4.8/utils/AddressUpgradeable.sol\":\"AddressUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"mlmContracts/contracts-upgradeable@4.8/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72460c66cd1c3b1c11b863e0d8df0a1c56f37743019e468dc312c754f43e3b06\",\"dweb:/ipfs/QmPExYKiNb9PUsgktQBupPaM33kzDHxaYoVeJdLhv8s879\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"mlmContracts/contracts-upgradeable@4.8/utils/ContextUpgradeable.sol": {
				"ContextUpgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"__gap": {
								"details": "This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"mlmContracts/contracts-upgradeable@4.8/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"mlmContracts/contracts-upgradeable@4.8/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x037c334add4b033ad3493038c25be1682d78c00992e1acb0e2795caff3925271\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8a313cf42389440e2706837c91370323b85971c06afd6d056d21e2bc86459618\",\"dweb:/ipfs/QmT8XUrUvQ9aZaPKrqgRU2JVGWnaxBcUYJA7Q7K5KcLBSZ\"]},\"mlmContracts/contracts-upgradeable@4.8/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72460c66cd1c3b1c11b863e0d8df0a1c56f37743019e468dc312c754f43e3b06\",\"dweb:/ipfs/QmPExYKiNb9PUsgktQBupPaM33kzDHxaYoVeJdLhv8s879\"]},\"mlmContracts/contracts-upgradeable@4.8/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 6,
								"contract": "mlmContracts/contracts-upgradeable@4.8/utils/ContextUpgradeable.sol:ContextUpgradeable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 9,
								"contract": "mlmContracts/contracts-upgradeable@4.8/utils/ContextUpgradeable.sol:ContextUpgradeable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 1640,
								"contract": "mlmContracts/contracts-upgradeable@4.8/utils/ContextUpgradeable.sol:ContextUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							}
						],
						"types": {
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"mlmContracts/contracts-upgradeable@4.8/utils/StringsUpgradeable.sol": {
				"StringsUpgradeable": {
					"abi": [],
					"devdoc": {
						"details": "String operations.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"mlmContracts/contracts-upgradeable@4.8/utils/StringsUpgradeable.sol\":199:2297  library StringsUpgradeable {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"mlmContracts/contracts-upgradeable@4.8/utils/StringsUpgradeable.sol\":199:2297  library StringsUpgradeable {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220281269e84baf640ed1852bb99977505b34d59476ddd4c00a0723984e58e8ea4164736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220281269e84baf640ed1852bb99977505b34d59476ddd4c00a0723984e58e8ea4164736f6c634300080d0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x28 SLT PUSH10 0xE84BAF640ED1852BB999 PUSH24 0x505B34D59476DDD4C00A0723984E58E8EA4164736F6C6343 STOP ADDMOD 0xD STOP CALLER ",
							"sourceMap": "199:2098:7:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;199:2098:7;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220281269e84baf640ed1852bb99977505b34d59476ddd4c00a0723984e58e8ea4164736f6c634300080d0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x28 SLT PUSH10 0xE84BAF640ED1852BB999 PUSH24 0x505B34D59476DDD4C00A0723984E58E8EA4164736F6C6343 STOP ADDMOD 0xD STOP CALLER ",
							"sourceMap": "199:2098:7:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 199,
									"end": 2297,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 199,
									"end": 2297,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 199,
									"end": 2297,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 199,
									"end": 2297,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 199,
									"end": 2297,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 199,
									"end": 2297,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 199,
									"end": 2297,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 199,
									"end": 2297,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 199,
									"end": 2297,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 199,
									"end": 2297,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 199,
									"end": 2297,
									"name": "BYTE",
									"source": 7
								},
								{
									"begin": 199,
									"end": 2297,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 199,
									"end": 2297,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 199,
									"end": 2297,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 199,
									"end": 2297,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 199,
									"end": 2297,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 199,
									"end": 2297,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 199,
									"end": 2297,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 199,
									"end": 2297,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 199,
									"end": 2297,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 199,
									"end": 2297,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 199,
									"end": 2297,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 199,
									"end": 2297,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 199,
									"end": 2297,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 199,
									"end": 2297,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 199,
									"end": 2297,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 199,
									"end": 2297,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 199,
									"end": 2297,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 199,
									"end": 2297,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 199,
									"end": 2297,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 199,
									"end": 2297,
									"name": "MSTORE8",
									"source": 7
								},
								{
									"begin": 199,
									"end": 2297,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 199,
									"end": 2297,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 199,
									"end": 2297,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220281269e84baf640ed1852bb99977505b34d59476ddd4c00a0723984e58e8ea4164736f6c634300080d0033",
									".code": [
										{
											"begin": 199,
											"end": 2297,
											"name": "PUSHDEPLOYADDRESS",
											"source": 7
										},
										{
											"begin": 199,
											"end": 2297,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 199,
											"end": 2297,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 199,
											"end": 2297,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 199,
											"end": 2297,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 199,
											"end": 2297,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 199,
											"end": 2297,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 199,
											"end": 2297,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 199,
											"end": 2297,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"mlmContracts/contracts-upgradeable@4.8/utils/StringsUpgradeable.sol\":\"StringsUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"mlmContracts/contracts-upgradeable@4.8/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0x6b9a5d35b744b25529a2856a8093e7c03fb35a34b1c4fb5499e560f8ade140da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://187b5c3a1c9e77678732a2cc5284237f9cfca6bc28ee8bc0a0f4f951d7b3a2f8\",\"dweb:/ipfs/Qmb2KFr7WuQu7btdCiftQG64vTzrG4UyzVmo53EYHcnHYA\"]},\"mlmContracts/contracts-upgradeable@4.8/utils/math/MathUpgradeable.sol\":{\"keccak256\":\"0xc1bd5b53319c68f84e3becd75694d941e8f4be94049903232cd8bc7c535aaa5a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://056027a78e6f4b78a39be530983551651ee5a052e786ca2c1c6a3bb1222b03b4\",\"dweb:/ipfs/QmXRUpywAqNwAfXS89vrtiE2THRM9dX9pQ4QxAkV1Wx9kt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"mlmContracts/contracts-upgradeable@4.8/utils/introspection/ERC165Upgradeable.sol": {
				"ERC165Upgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"stateVariables": {
							"__gap": {
								"details": "This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"mlmContracts/contracts-upgradeable@4.8/utils/introspection/ERC165Upgradeable.sol\":\"ERC165Upgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"mlmContracts/contracts-upgradeable@4.8/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x037c334add4b033ad3493038c25be1682d78c00992e1acb0e2795caff3925271\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8a313cf42389440e2706837c91370323b85971c06afd6d056d21e2bc86459618\",\"dweb:/ipfs/QmT8XUrUvQ9aZaPKrqgRU2JVGWnaxBcUYJA7Q7K5KcLBSZ\"]},\"mlmContracts/contracts-upgradeable@4.8/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72460c66cd1c3b1c11b863e0d8df0a1c56f37743019e468dc312c754f43e3b06\",\"dweb:/ipfs/QmPExYKiNb9PUsgktQBupPaM33kzDHxaYoVeJdLhv8s879\"]},\"mlmContracts/contracts-upgradeable@4.8/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0x9a3b990bd56d139df3e454a9edf1c64668530b5a77fc32eb063bc206f958274a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0895399d170daab2d69b4c43a0202e5a07f2e67a93b26e3354dcbedb062232f7\",\"dweb:/ipfs/QmUM1VH3XDk559Dsgh4QPvupr3YVKjz87HrSyYzzVFZbxw\"]},\"mlmContracts/contracts-upgradeable@4.8/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 6,
								"contract": "mlmContracts/contracts-upgradeable@4.8/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 9,
								"contract": "mlmContracts/contracts-upgradeable@4.8/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 1859,
								"contract": "mlmContracts/contracts-upgradeable@4.8/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							}
						],
						"types": {
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"mlmContracts/contracts-upgradeable@4.8/utils/introspection/IERC165Upgradeable.sol": {
				"IERC165Upgradeable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"mlmContracts/contracts-upgradeable@4.8/utils/introspection/IERC165Upgradeable.sol\":\"IERC165Upgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"mlmContracts/contracts-upgradeable@4.8/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"mlmContracts/contracts-upgradeable@4.8/utils/math/MathUpgradeable.sol": {
				"MathUpgradeable": {
					"abi": [],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"mlmContracts/contracts-upgradeable@4.8/utils/math/MathUpgradeable.sol\":202:12515  library MathUpgradeable {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"mlmContracts/contracts-upgradeable@4.8/utils/math/MathUpgradeable.sol\":202:12515  library MathUpgradeable {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220574cfd9383ecd1af49f17b47389fbb462564c971465a951772bf795bee445c8a64736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220574cfd9383ecd1af49f17b47389fbb462564c971465a951772bf795bee445c8a64736f6c634300080d0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMPI 0x4C REVERT SWAP4 DUP4 0xEC 0xD1 0xAF 0x49 CALL PUSH28 0x47389FBB462564C971465A951772BF795BEE445C8A64736F6C634300 ADDMOD 0xD STOP CALLER ",
							"sourceMap": "202:12313:10:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;202:12313:10;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220574cfd9383ecd1af49f17b47389fbb462564c971465a951772bf795bee445c8a64736f6c634300080d0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMPI 0x4C REVERT SWAP4 DUP4 0xEC 0xD1 0xAF 0x49 CALL PUSH28 0x47389FBB462564C971465A951772BF795BEE445C8A64736F6C634300 ADDMOD 0xD STOP CALLER ",
							"sourceMap": "202:12313:10:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum MathUpgradeable.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum MathUpgradeable.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum MathUpgradeable.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum MathUpgradeable.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum MathUpgradeable.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 202,
									"end": 12515,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 12515,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 12515,
									"name": "PUSH",
									"source": 10,
									"value": "B"
								},
								{
									"begin": 202,
									"end": 12515,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 202,
									"end": 12515,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 202,
									"end": 12515,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 202,
									"end": 12515,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 202,
									"end": 12515,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 202,
									"end": 12515,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 202,
									"end": 12515,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12515,
									"name": "BYTE",
									"source": 10
								},
								{
									"begin": 202,
									"end": 12515,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 202,
									"end": 12515,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 202,
									"end": 12515,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 202,
									"end": 12515,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 202,
									"end": 12515,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12515,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 202,
									"end": 12515,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12515,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 202,
									"end": 12515,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 202,
									"end": 12515,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 202,
									"end": 12515,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12515,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 202,
									"end": 12515,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 202,
									"end": 12515,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 202,
									"end": 12515,
									"name": "ADDRESS",
									"source": 10
								},
								{
									"begin": 202,
									"end": 12515,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12515,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 202,
									"end": 12515,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 202,
									"end": 12515,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 202,
									"end": 12515,
									"name": "MSTORE8",
									"source": 10
								},
								{
									"begin": 202,
									"end": 12515,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 202,
									"end": 12515,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 202,
									"end": 12515,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220574cfd9383ecd1af49f17b47389fbb462564c971465a951772bf795bee445c8a64736f6c634300080d0033",
									".code": [
										{
											"begin": 202,
											"end": 12515,
											"name": "PUSHDEPLOYADDRESS",
											"source": 10
										},
										{
											"begin": 202,
											"end": 12515,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 202,
											"end": 12515,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 202,
											"end": 12515,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 202,
											"end": 12515,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 202,
											"end": 12515,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 202,
											"end": 12515,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 202,
											"end": 12515,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 202,
											"end": 12515,
											"name": "REVERT",
											"source": 10
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"mlmContracts/contracts-upgradeable@4.8/utils/math/MathUpgradeable.sol\":\"MathUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"mlmContracts/contracts-upgradeable@4.8/utils/math/MathUpgradeable.sol\":{\"keccak256\":\"0xc1bd5b53319c68f84e3becd75694d941e8f4be94049903232cd8bc7c535aaa5a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://056027a78e6f4b78a39be530983551651ee5a052e786ca2c1c6a3bb1222b03b4\",\"dweb:/ipfs/QmXRUpywAqNwAfXS89vrtiE2THRM9dX9pQ4QxAkV1Wx9kt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"mlmContracts/contracts-upgradeable@4.8/proxy/utils/Initializable.sol": {
				"ast": {
					"absolutePath": "mlmContracts/contracts-upgradeable@4.8/proxy/utils/Initializable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							1599
						],
						"Initializable": [
							168
						]
					},
					"id": 169,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "113:23:0"
						},
						{
							"absolutePath": "mlmContracts/contracts-upgradeable@4.8/utils/AddressUpgradeable.sol",
							"file": "../../utils/AddressUpgradeable.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 169,
							"sourceUnit": 1600,
							"src": "138:44:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Initializable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "184:2198:0",
								"text": " @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="
							},
							"fullyImplemented": true,
							"id": 168,
							"linearizedBaseContracts": [
								168
							],
							"name": "Initializable",
							"nameLocation": "2401:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"documentation": {
										"id": 4,
										"nodeType": "StructuredDocumentation",
										"src": "2421:109:0",
										"text": " @dev Indicates that the contract has been initialized.\n @custom:oz-retyped-from bool"
									},
									"id": 6,
									"mutability": "mutable",
									"name": "_initialized",
									"nameLocation": "2549:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 168,
									"src": "2535:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 5,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "2535:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"documentation": {
										"id": 7,
										"nodeType": "StructuredDocumentation",
										"src": "2568:91:0",
										"text": " @dev Indicates that the contract is in the process of being initialized."
									},
									"id": 9,
									"mutability": "mutable",
									"name": "_initializing",
									"nameLocation": "2677:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 168,
									"src": "2664:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 8,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "2664:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 10,
										"nodeType": "StructuredDocumentation",
										"src": "2697:90:0",
										"text": " @dev Triggered when the contract has been initialized or reinitialized."
									},
									"eventSelector": "7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498",
									"id": 14,
									"name": "Initialized",
									"nameLocation": "2798:11:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 12,
												"indexed": false,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "2816:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 14,
												"src": "2810:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 11,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2810:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2809:15:0"
									},
									"src": "2792:33:0"
								},
								{
									"body": {
										"id": 69,
										"nodeType": "Block",
										"src": "3258:483:0",
										"statements": [
											{
												"assignments": [
													18
												],
												"declarations": [
													{
														"constant": false,
														"id": 18,
														"mutability": "mutable",
														"name": "isTopLevelCall",
														"nameLocation": "3273:14:0",
														"nodeType": "VariableDeclaration",
														"scope": 69,
														"src": "3268:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 17,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3268:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 21,
												"initialValue": {
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3290:14:0",
													"subExpression": {
														"id": 19,
														"name": "_initializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 9,
														"src": "3291:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3268:36:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 42,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 27,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 23,
																			"name": "isTopLevelCall",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 18,
																			"src": "3336:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			},
																			"id": 26,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 24,
																				"name": "_initialized",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 6,
																				"src": "3354:12:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 25,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3369:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "3354:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "3336:34:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 28,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3335:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 36,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "!",
																			"prefix": true,
																			"src": "3376:45:0",
																			"subExpression": {
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"id": 33,
																								"name": "this",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4294967268,
																								"src": "3415:4:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_contract$_Initializable_$168",
																									"typeString": "contract Initializable"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_contract$_Initializable_$168",
																									"typeString": "contract Initializable"
																								}
																							],
																							"id": 32,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "3407:7:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_address_$",
																								"typeString": "type(address)"
																							},
																							"typeName": {
																								"id": 31,
																								"name": "address",
																								"nodeType": "ElementaryTypeName",
																								"src": "3407:7:0",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 34,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "3407:13:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"expression": {
																						"id": 29,
																						"name": "AddressUpgradeable",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1599,
																						"src": "3377:18:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_AddressUpgradeable_$1599_$",
																							"typeString": "type(library AddressUpgradeable)"
																						}
																					},
																					"id": 30,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "isContract",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1333,
																					"src": "3377:29:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																						"typeString": "function (address) view returns (bool)"
																					}
																				},
																				"id": 35,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "3377:44:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			},
																			"id": 39,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 37,
																				"name": "_initialized",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 6,
																				"src": "3425:12:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 38,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3441:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "3425:17:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "3376:66:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 41,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3375:68:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3335:108:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564",
															"id": 43,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3457:48:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															},
															"value": "Initializable: contract is already initialized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															}
														],
														"id": 22,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3314:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 44,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3314:201:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 45,
												"nodeType": "ExpressionStatement",
												"src": "3314:201:0"
											},
											{
												"expression": {
													"id": 48,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 46,
														"name": "_initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 6,
														"src": "3525:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 47,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3540:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "3525:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 49,
												"nodeType": "ExpressionStatement",
												"src": "3525:16:0"
											},
											{
												"condition": {
													"id": 50,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 18,
													"src": "3555:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 56,
												"nodeType": "IfStatement",
												"src": "3551:65:0",
												"trueBody": {
													"id": 55,
													"nodeType": "Block",
													"src": "3571:45:0",
													"statements": [
														{
															"expression": {
																"id": 53,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 51,
																	"name": "_initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 9,
																	"src": "3585:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 52,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3601:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "3585:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 54,
															"nodeType": "ExpressionStatement",
															"src": "3585:20:0"
														}
													]
												}
											},
											{
												"id": 57,
												"nodeType": "PlaceholderStatement",
												"src": "3625:1:0"
											},
											{
												"condition": {
													"id": 58,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 18,
													"src": "3640:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 68,
												"nodeType": "IfStatement",
												"src": "3636:99:0",
												"trueBody": {
													"id": 67,
													"nodeType": "Block",
													"src": "3656:79:0",
													"statements": [
														{
															"expression": {
																"id": 61,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 59,
																	"name": "_initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 9,
																	"src": "3670:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 60,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3686:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "3670:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 62,
															"nodeType": "ExpressionStatement",
															"src": "3670:21:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"hexValue": "31",
																		"id": 64,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3722:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		}
																	],
																	"id": 63,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 14,
																	"src": "3710:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint8_$returns$__$",
																		"typeString": "function (uint8)"
																	}
																},
																"id": 65,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3710:14:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 66,
															"nodeType": "EmitStatement",
															"src": "3705:19:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 15,
										"nodeType": "StructuredDocumentation",
										"src": "2831:399:0",
										"text": " @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\n constructor.\n Emits an {Initialized} event."
									},
									"id": 70,
									"name": "initializer",
									"nameLocation": "3244:11:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3255:2:0"
									},
									"src": "3235:506:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 102,
										"nodeType": "Block",
										"src": "4852:255:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 81,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 77,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "4870:14:0",
																"subExpression": {
																	"id": 76,
																	"name": "_initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 9,
																	"src": "4871:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																"id": 80,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 78,
																	"name": "_initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 6,
																	"src": "4888:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 79,
																	"name": "version",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 73,
																	"src": "4903:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "4888:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "4870:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564",
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4912:48:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															},
															"value": "Initializable: contract is already initialized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															}
														],
														"id": 75,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4862:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 83,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4862:99:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 84,
												"nodeType": "ExpressionStatement",
												"src": "4862:99:0"
											},
											{
												"expression": {
													"id": 87,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 85,
														"name": "_initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 6,
														"src": "4971:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 86,
														"name": "version",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 73,
														"src": "4986:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "4971:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 88,
												"nodeType": "ExpressionStatement",
												"src": "4971:22:0"
											},
											{
												"expression": {
													"id": 91,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 89,
														"name": "_initializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 9,
														"src": "5003:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 90,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5019:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "5003:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 92,
												"nodeType": "ExpressionStatement",
												"src": "5003:20:0"
											},
											{
												"id": 93,
												"nodeType": "PlaceholderStatement",
												"src": "5033:1:0"
											},
											{
												"expression": {
													"id": 96,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 94,
														"name": "_initializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 9,
														"src": "5044:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 95,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5060:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "5044:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 97,
												"nodeType": "ExpressionStatement",
												"src": "5044:21:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 99,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 73,
															"src": "5092:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 98,
														"name": "Initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 14,
														"src": "5080:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint8_$returns$__$",
															"typeString": "function (uint8)"
														}
													},
													"id": 100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5080:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 101,
												"nodeType": "EmitStatement",
												"src": "5075:25:0"
											}
										]
									},
									"documentation": {
										"id": 71,
										"nodeType": "StructuredDocumentation",
										"src": "3747:1062:0",
										"text": " @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: setting the version to 255 will prevent any future reinitialization.\n Emits an {Initialized} event."
									},
									"id": 103,
									"name": "reinitializer",
									"nameLocation": "4823:13:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 74,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 73,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "4843:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 103,
												"src": "4837:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 72,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "4837:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4836:15:0"
									},
									"src": "4814:293:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 112,
										"nodeType": "Block",
										"src": "5345:97:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 107,
															"name": "_initializing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 9,
															"src": "5363:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c697a61626c653a20636f6e7472616374206973206e6f7420696e697469616c697a696e67",
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5378:45:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b",
																"typeString": "literal_string \"Initializable: contract is not initializing\""
															},
															"value": "Initializable: contract is not initializing"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b",
																"typeString": "literal_string \"Initializable: contract is not initializing\""
															}
														],
														"id": 106,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5355:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 109,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5355:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 110,
												"nodeType": "ExpressionStatement",
												"src": "5355:69:0"
											},
											{
												"id": 111,
												"nodeType": "PlaceholderStatement",
												"src": "5434:1:0"
											}
										]
									},
									"documentation": {
										"id": 104,
										"nodeType": "StructuredDocumentation",
										"src": "5113:199:0",
										"text": " @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."
									},
									"id": 113,
									"name": "onlyInitializing",
									"nameLocation": "5326:16:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5342:2:0"
									},
									"src": "5317:125:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 148,
										"nodeType": "Block",
										"src": "5977:230:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 119,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "5995:14:0",
															"subExpression": {
																"id": 118,
																"name": "_initializing",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 9,
																"src": "5996:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320696e697469616c697a696e67",
															"id": 120,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6011:41:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a",
																"typeString": "literal_string \"Initializable: contract is initializing\""
															},
															"value": "Initializable: contract is initializing"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a",
																"typeString": "literal_string \"Initializable: contract is initializing\""
															}
														],
														"id": 117,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5987:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5987:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 122,
												"nodeType": "ExpressionStatement",
												"src": "5987:66:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 129,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 123,
														"name": "_initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 6,
														"src": "6067:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 126,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6087:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint8_$",
																		"typeString": "type(uint8)"
																	},
																	"typeName": {
																		"id": 125,
																		"name": "uint8",
																		"nodeType": "ElementaryTypeName",
																		"src": "6087:5:0",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint8_$",
																		"typeString": "type(uint8)"
																	}
																],
																"id": 124,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "6082:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 127,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6082:11:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint8",
																"typeString": "type(uint8)"
															}
														},
														"id": 128,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "6082:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "6067:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 147,
												"nodeType": "IfStatement",
												"src": "6063:138:0",
												"trueBody": {
													"id": 146,
													"nodeType": "Block",
													"src": "6099:102:0",
													"statements": [
														{
															"expression": {
																"id": 136,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 130,
																	"name": "_initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 6,
																	"src": "6113:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 133,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6133:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint8_$",
																					"typeString": "type(uint8)"
																				},
																				"typeName": {
																					"id": 132,
																					"name": "uint8",
																					"nodeType": "ElementaryTypeName",
																					"src": "6133:5:0",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_uint8_$",
																					"typeString": "type(uint8)"
																				}
																			],
																			"id": 131,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "6128:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 134,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6128:11:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_uint8",
																			"typeString": "type(uint8)"
																		}
																	},
																	"id": 135,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "max",
																	"nodeType": "MemberAccess",
																	"src": "6128:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "6113:30:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 137,
															"nodeType": "ExpressionStatement",
															"src": "6113:30:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 141,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "6179:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint8_$",
																						"typeString": "type(uint8)"
																					},
																					"typeName": {
																						"id": 140,
																						"name": "uint8",
																						"nodeType": "ElementaryTypeName",
																						"src": "6179:5:0",
																						"typeDescriptions": {}
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_type$_t_uint8_$",
																						"typeString": "type(uint8)"
																					}
																				],
																				"id": 139,
																				"name": "type",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967269,
																				"src": "6174:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 142,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6174:11:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_meta_type_t_uint8",
																				"typeString": "type(uint8)"
																			}
																		},
																		"id": 143,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "max",
																		"nodeType": "MemberAccess",
																		"src": "6174:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	],
																	"id": 138,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 14,
																	"src": "6162:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint8_$returns$__$",
																		"typeString": "function (uint8)"
																	}
																},
																"id": 144,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6162:28:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 145,
															"nodeType": "EmitStatement",
															"src": "6157:33:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 114,
										"nodeType": "StructuredDocumentation",
										"src": "5448:475:0",
										"text": " @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."
									},
									"id": 149,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_disableInitializers",
									"nameLocation": "5937:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5957:2:0"
									},
									"returnParameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5977:0:0"
									},
									"scope": 168,
									"src": "5928:279:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 157,
										"nodeType": "Block",
										"src": "6381:36:0",
										"statements": [
											{
												"expression": {
													"id": 155,
													"name": "_initialized",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 6,
													"src": "6398:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 154,
												"id": 156,
												"nodeType": "Return",
												"src": "6391:19:0"
											}
										]
									},
									"documentation": {
										"id": 150,
										"nodeType": "StructuredDocumentation",
										"src": "6213:99:0",
										"text": " @dev Returns the highest version that has been initialized. See {reinitializer}."
									},
									"id": 158,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializedVersion",
									"nameLocation": "6326:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6348:2:0"
									},
									"returnParameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "6374:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 152,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "6374:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6373:7:0"
									},
									"scope": 168,
									"src": "6317:100:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 166,
										"nodeType": "Block",
										"src": "6589:37:0",
										"statements": [
											{
												"expression": {
													"id": 164,
													"name": "_initializing",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 9,
													"src": "6606:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 163,
												"id": 165,
												"nodeType": "Return",
												"src": "6599:20:0"
											}
										]
									},
									"documentation": {
										"id": 159,
										"nodeType": "StructuredDocumentation",
										"src": "6423:105:0",
										"text": " @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."
									},
									"id": 167,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isInitializing",
									"nameLocation": "6542:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6557:2:0"
									},
									"returnParameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "6583:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 161,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6583:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6582:6:0"
									},
									"scope": 168,
									"src": "6533:93:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 169,
							"src": "2383:4245:0",
							"usedErrors": []
						}
					],
					"src": "113:6516:0"
				},
				"id": 0
			},
			"mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol": {
				"ast": {
					"absolutePath": "mlmContracts/contracts-upgradeable@4.8/token/ERC721/ERC721Upgradeable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							1599
						],
						"ContextUpgradeable": [
							1641
						],
						"ERC165Upgradeable": [
							1860
						],
						"ERC721Upgradeable": [
							1154
						],
						"IERC165Upgradeable": [
							1872
						],
						"IERC721MetadataUpgradeable": [
							1315
						],
						"IERC721ReceiverUpgradeable": [
							1172
						],
						"IERC721Upgradeable": [
							1288
						],
						"Initializable": [
							168
						],
						"MathUpgradeable": [
							2737
						],
						"StringsUpgradeable": [
							1816
						]
					},
					"id": 1155,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 170,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:1"
						},
						{
							"absolutePath": "mlmContracts/contracts-upgradeable@4.8/token/ERC721/IERC721Upgradeable.sol",
							"file": "./IERC721Upgradeable.sol",
							"id": 171,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1155,
							"sourceUnit": 1289,
							"src": "132:34:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "mlmContracts/contracts-upgradeable@4.8/token/ERC721/IERC721ReceiverUpgradeable.sol",
							"file": "./IERC721ReceiverUpgradeable.sol",
							"id": 172,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1155,
							"sourceUnit": 1173,
							"src": "167:42:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "mlmContracts/contracts-upgradeable@4.8/token/ERC721/extensions/IERC721MetadataUpgradeable.sol",
							"file": "./extensions/IERC721MetadataUpgradeable.sol",
							"id": 173,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1155,
							"sourceUnit": 1316,
							"src": "210:53:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "mlmContracts/contracts-upgradeable@4.8/utils/AddressUpgradeable.sol",
							"file": "../../utils/AddressUpgradeable.sol",
							"id": 174,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1155,
							"sourceUnit": 1600,
							"src": "264:44:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "mlmContracts/contracts-upgradeable@4.8/utils/ContextUpgradeable.sol",
							"file": "../../utils/ContextUpgradeable.sol",
							"id": 175,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1155,
							"sourceUnit": 1642,
							"src": "309:44:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "mlmContracts/contracts-upgradeable@4.8/utils/StringsUpgradeable.sol",
							"file": "../../utils/StringsUpgradeable.sol",
							"id": 176,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1155,
							"sourceUnit": 1817,
							"src": "354:44:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "mlmContracts/contracts-upgradeable@4.8/utils/introspection/ERC165Upgradeable.sol",
							"file": "../../utils/introspection/ERC165Upgradeable.sol",
							"id": 177,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1155,
							"sourceUnit": 1861,
							"src": "399:57:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "mlmContracts/contracts-upgradeable@4.8/proxy/utils/Initializable.sol",
							"file": "../../proxy/utils/Initializable.sol",
							"id": 178,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1155,
							"sourceUnit": 169,
							"src": "457:45:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 180,
										"name": "Initializable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 168,
										"src": "781:13:1"
									},
									"id": 181,
									"nodeType": "InheritanceSpecifier",
									"src": "781:13:1"
								},
								{
									"baseName": {
										"id": 182,
										"name": "ContextUpgradeable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1641,
										"src": "796:18:1"
									},
									"id": 183,
									"nodeType": "InheritanceSpecifier",
									"src": "796:18:1"
								},
								{
									"baseName": {
										"id": 184,
										"name": "ERC165Upgradeable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1860,
										"src": "816:17:1"
									},
									"id": 185,
									"nodeType": "InheritanceSpecifier",
									"src": "816:17:1"
								},
								{
									"baseName": {
										"id": 186,
										"name": "IERC721Upgradeable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1288,
										"src": "835:18:1"
									},
									"id": 187,
									"nodeType": "InheritanceSpecifier",
									"src": "835:18:1"
								},
								{
									"baseName": {
										"id": 188,
										"name": "IERC721MetadataUpgradeable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1315,
										"src": "855:26:1"
									},
									"id": 189,
									"nodeType": "InheritanceSpecifier",
									"src": "855:26:1"
								}
							],
							"canonicalName": "ERC721Upgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 179,
								"nodeType": "StructuredDocumentation",
								"src": "504:246:1",
								"text": " @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."
							},
							"fullyImplemented": true,
							"id": 1154,
							"linearizedBaseContracts": [
								1154,
								1315,
								1288,
								1860,
								1872,
								1641,
								168
							],
							"name": "ERC721Upgradeable",
							"nameLocation": "760:17:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 192,
									"libraryName": {
										"id": 190,
										"name": "AddressUpgradeable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1599,
										"src": "894:18:1"
									},
									"nodeType": "UsingForDirective",
									"src": "888:37:1",
									"typeName": {
										"id": 191,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "917:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"global": false,
									"id": 195,
									"libraryName": {
										"id": 193,
										"name": "StringsUpgradeable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1816,
										"src": "936:18:1"
									},
									"nodeType": "UsingForDirective",
									"src": "930:37:1",
									"typeName": {
										"id": 194,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "959:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 197,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1006:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 1154,
									"src": "991:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 196,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "991:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 199,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1053:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 1154,
									"src": "1038:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 198,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1038:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 203,
									"mutability": "mutable",
									"name": "_owners",
									"nameLocation": "1149:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 1154,
									"src": "1113:43:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 202,
										"keyType": {
											"id": 200,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1121:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1113:27:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueType": {
											"id": 201,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1132:7:1",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 207,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1243:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 1154,
									"src": "1207:45:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 206,
										"keyType": {
											"id": 204,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1215:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1207:27:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 205,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1226:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 211,
									"mutability": "mutable",
									"name": "_tokenApprovals",
									"nameLocation": "1344:15:1",
									"nodeType": "VariableDeclaration",
									"scope": 1154,
									"src": "1308:51:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 210,
										"keyType": {
											"id": 208,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1316:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1308:27:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueType": {
											"id": 209,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1327:7:1",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 217,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "1467:18:1",
									"nodeType": "VariableDeclaration",
									"scope": 1154,
									"src": "1414:71:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 216,
										"keyType": {
											"id": 212,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1422:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1414:44:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueType": {
											"id": 215,
											"keyType": {
												"id": 213,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1441:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1433:24:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueType": {
												"id": 214,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1452:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 219,
									"mutability": "mutable",
									"name": "manager",
									"nameLocation": "1500:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 1154,
									"src": "1492:15:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 218,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1492:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 221,
									"mutability": "mutable",
									"name": "isBounded",
									"nameLocation": "1519:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 1154,
									"src": "1514:14:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 220,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "1514:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 242,
										"nodeType": "Block",
										"src": "1759:84:1",
										"statements": [
											{
												"expression": {
													"id": 235,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 233,
														"name": "manager",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 219,
														"src": "1769:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 234,
														"name": "_manager",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 228,
														"src": "1779:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1769:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 236,
												"nodeType": "ExpressionStatement",
												"src": "1769:18:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 238,
															"name": "name_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 224,
															"src": "1821:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"id": 239,
															"name": "symbol_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 226,
															"src": "1828:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 237,
														"name": "__ERC721_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 261,
														"src": "1797:23:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory,string memory)"
														}
													},
													"id": 240,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1797:39:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 241,
												"nodeType": "ExpressionStatement",
												"src": "1797:39:1"
											}
										]
									},
									"documentation": {
										"id": 222,
										"nodeType": "StructuredDocumentation",
										"src": "1535:108:1",
										"text": " @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."
									},
									"id": 243,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 231,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 230,
												"name": "onlyInitializing",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 113,
												"src": "1742:16:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "1742:16:1"
										}
									],
									"name": "__ERC721_init",
									"nameLocation": "1657:13:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1685:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "1671:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 223,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1671:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1706:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "1692:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 225,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1692:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 228,
												"mutability": "mutable",
												"name": "_manager",
												"nameLocation": "1723:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "1715:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 227,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1715:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1670:62:1"
									},
									"returnParameters": {
										"id": 232,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1759:0:1"
									},
									"scope": 1154,
									"src": "1648:195:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 260,
										"nodeType": "Block",
										"src": "1952:57:1",
										"statements": [
											{
												"expression": {
													"id": 254,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 252,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 197,
														"src": "1962:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 253,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 245,
														"src": "1970:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1962:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 255,
												"nodeType": "ExpressionStatement",
												"src": "1962:13:1"
											},
											{
												"expression": {
													"id": 258,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 256,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 199,
														"src": "1985:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 257,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 247,
														"src": "1995:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1985:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 259,
												"nodeType": "ExpressionStatement",
												"src": "1985:17:1"
											}
										]
									},
									"id": 261,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 250,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 249,
												"name": "onlyInitializing",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 113,
												"src": "1935:16:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "1935:16:1"
										}
									],
									"name": "__ERC721_init_unchained",
									"nameLocation": "1858:23:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1896:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "1882:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 244,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1882:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1917:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "1903:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 246,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1903:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1881:44:1"
									},
									"returnParameters": {
										"id": 251,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1952:0:1"
									},
									"scope": 1154,
									"src": "1849:160:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1854,
										1871
									],
									"body": {
										"id": 291,
										"nodeType": "Block",
										"src": "2206:214:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 289,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 284,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 277,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 272,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 264,
																"src": "2235:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 274,
																			"name": "IERC721Upgradeable",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1288,
																			"src": "2255:18:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Upgradeable_$1288_$",
																				"typeString": "type(contract IERC721Upgradeable)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721Upgradeable_$1288_$",
																				"typeString": "type(contract IERC721Upgradeable)"
																			}
																		],
																		"id": 273,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "2250:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 275,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2250:24:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Upgradeable_$1288",
																		"typeString": "type(contract IERC721Upgradeable)"
																	}
																},
																"id": 276,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "2250:36:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "2235:51:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 283,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 278,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 264,
																"src": "2302:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 280,
																			"name": "IERC721MetadataUpgradeable",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1315,
																			"src": "2322:26:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721MetadataUpgradeable_$1315_$",
																				"typeString": "type(contract IERC721MetadataUpgradeable)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721MetadataUpgradeable_$1315_$",
																				"typeString": "type(contract IERC721MetadataUpgradeable)"
																			}
																		],
																		"id": 279,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "2317:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 281,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2317:32:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721MetadataUpgradeable_$1315",
																		"typeString": "type(contract IERC721MetadataUpgradeable)"
																	}
																},
																"id": 282,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "2317:44:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "2302:59:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "2235:126:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 287,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 264,
																"src": "2401:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 285,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "2377:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC721Upgradeable_$1154_$",
																	"typeString": "type(contract super ERC721Upgradeable)"
																}
															},
															"id": 286,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1854,
															"src": "2377:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 288,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2377:36:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2235:178:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 271,
												"id": 290,
												"nodeType": "Return",
												"src": "2216:197:1"
											}
										]
									},
									"documentation": {
										"id": 262,
										"nodeType": "StructuredDocumentation",
										"src": "2015:56:1",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 292,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "2085:17:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 268,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 266,
												"name": "ERC165Upgradeable",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1860,
												"src": "2152:17:1"
											},
											{
												"id": 267,
												"name": "IERC165Upgradeable",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1872,
												"src": "2171:18:1"
											}
										],
										"src": "2143:47:1"
									},
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "2110:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "2103:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 263,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2103:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2102:20:1"
									},
									"returnParameters": {
										"id": 271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "2200:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 269,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2200:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2199:6:1"
									},
									"scope": 1154,
									"src": "2076:344:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1213
									],
									"body": {
										"id": 315,
										"nodeType": "Block",
										"src": "2560:123:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 307,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 302,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 295,
																"src": "2578:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 305,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2595:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 304,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2587:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 303,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2587:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 306,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2587:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2578:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a2061646472657373207a65726f206973206e6f7420612076616c6964206f776e6572",
															"id": 308,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2599:43:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159",
																"typeString": "literal_string \"ERC721: address zero is not a valid owner\""
															},
															"value": "ERC721: address zero is not a valid owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159",
																"typeString": "literal_string \"ERC721: address zero is not a valid owner\""
															}
														],
														"id": 301,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2570:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 309,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2570:73:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 310,
												"nodeType": "ExpressionStatement",
												"src": "2570:73:1"
											},
											{
												"expression": {
													"baseExpression": {
														"id": 311,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 207,
														"src": "2660:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 313,
													"indexExpression": {
														"id": 312,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 295,
														"src": "2670:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2660:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 300,
												"id": 314,
												"nodeType": "Return",
												"src": "2653:23:1"
											}
										]
									},
									"documentation": {
										"id": 293,
										"nodeType": "StructuredDocumentation",
										"src": "2426:48:1",
										"text": " @dev See {IERC721-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 316,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "2488:9:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 297,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2533:8:1"
									},
									"parameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2506:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 316,
												"src": "2498:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 294,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2498:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2497:15:1"
									},
									"returnParameters": {
										"id": 300,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 299,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 316,
												"src": "2551:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 298,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2551:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2550:9:1"
									},
									"scope": 1154,
									"src": "2479:204:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1221
									],
									"body": {
										"id": 343,
										"nodeType": "Block",
										"src": "2821:138:1",
										"statements": [
											{
												"assignments": [
													326
												],
												"declarations": [
													{
														"constant": false,
														"id": 326,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "2839:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 343,
														"src": "2831:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 325,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2831:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 330,
												"initialValue": {
													"arguments": [
														{
															"id": 328,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 319,
															"src": "2856:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 327,
														"name": "_ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 650,
														"src": "2847:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2847:17:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2831:33:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 337,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 332,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 326,
																"src": "2882:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 335,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2899:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 334,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2891:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 333,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2891:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 336,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2891:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2882:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a20696e76616c696420746f6b656e204944",
															"id": 338,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2903:26:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f",
																"typeString": "literal_string \"ERC721: invalid token ID\""
															},
															"value": "ERC721: invalid token ID"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f",
																"typeString": "literal_string \"ERC721: invalid token ID\""
															}
														],
														"id": 331,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2874:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 339,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2874:56:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 340,
												"nodeType": "ExpressionStatement",
												"src": "2874:56:1"
											},
											{
												"expression": {
													"id": 341,
													"name": "owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 326,
													"src": "2947:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 324,
												"id": 342,
												"nodeType": "Return",
												"src": "2940:12:1"
											}
										]
									},
									"documentation": {
										"id": 317,
										"nodeType": "StructuredDocumentation",
										"src": "2689:46:1",
										"text": " @dev See {IERC721-ownerOf}."
									},
									"functionSelector": "6352211e",
									"id": 344,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "2749:7:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 321,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2794:8:1"
									},
									"parameters": {
										"id": 320,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 319,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2765:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 344,
												"src": "2757:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 318,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2757:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2756:17:1"
									},
									"returnParameters": {
										"id": 324,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 323,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 344,
												"src": "2812:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 322,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2812:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2811:9:1"
									},
									"scope": 1154,
									"src": "2740:219:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1300
									],
									"body": {
										"id": 353,
										"nodeType": "Block",
										"src": "3090:29:1",
										"statements": [
											{
												"expression": {
													"id": 351,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 197,
													"src": "3107:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 350,
												"id": 352,
												"nodeType": "Return",
												"src": "3100:12:1"
											}
										]
									},
									"documentation": {
										"id": 345,
										"nodeType": "StructuredDocumentation",
										"src": "2965:51:1",
										"text": " @dev See {IERC721Metadata-name}."
									},
									"functionSelector": "06fdde03",
									"id": 354,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "3030:4:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 347,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3057:8:1"
									},
									"parameters": {
										"id": 346,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3034:2:1"
									},
									"returnParameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "3075:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 348,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3075:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3074:15:1"
									},
									"scope": 1154,
									"src": "3021:98:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1306
									],
									"body": {
										"id": 363,
										"nodeType": "Block",
										"src": "3254:31:1",
										"statements": [
											{
												"expression": {
													"id": 361,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 199,
													"src": "3271:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 360,
												"id": 362,
												"nodeType": "Return",
												"src": "3264:14:1"
											}
										]
									},
									"documentation": {
										"id": 355,
										"nodeType": "StructuredDocumentation",
										"src": "3125:53:1",
										"text": " @dev See {IERC721Metadata-symbol}."
									},
									"functionSelector": "95d89b41",
									"id": 364,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "3192:6:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 357,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3221:8:1"
									},
									"parameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3198:2:1"
									},
									"returnParameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 359,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "3239:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 358,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3239:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3238:15:1"
									},
									"scope": 1154,
									"src": "3183:102:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1314
									],
									"body": {
										"id": 402,
										"nodeType": "Block",
										"src": "3439:188:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 374,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 367,
															"src": "3464:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 373,
														"name": "_requireMinted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1045,
														"src": "3449:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$__$",
															"typeString": "function (uint256) view"
														}
													},
													"id": 375,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3449:23:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 376,
												"nodeType": "ExpressionStatement",
												"src": "3449:23:1"
											},
											{
												"assignments": [
													378
												],
												"declarations": [
													{
														"constant": false,
														"id": 378,
														"mutability": "mutable",
														"name": "baseURI",
														"nameLocation": "3497:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 402,
														"src": "3483:21:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 377,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "3483:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 381,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 379,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 412,
														"src": "3507:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 380,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3507:10:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3483:34:1"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 388,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 384,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 378,
																		"src": "3540:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 383,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3534:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 382,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3534:5:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 385,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3534:14:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 386,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3534:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 387,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3558:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "3534:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "",
														"id": 399,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3618:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
															"typeString": "literal_string \"\""
														},
														"value": ""
													},
													"id": 400,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "3534:86:1",
													"trueExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 393,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 378,
																		"src": "3586:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"id": 394,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 367,
																				"src": "3595:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 395,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "toString",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1699,
																			"src": "3595:16:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (string memory)"
																			}
																		},
																		"id": 396,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3595:18:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"expression": {
																		"id": 391,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967295,
																		"src": "3569:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 392,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "encodePacked",
																	"nodeType": "MemberAccess",
																	"src": "3569:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function () pure returns (bytes memory)"
																	}
																},
																"id": 397,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3569:45:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 390,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3562:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 389,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "3562:6:1",
																"typeDescriptions": {}
															}
														},
														"id": 398,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3562:53:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 372,
												"id": 401,
												"nodeType": "Return",
												"src": "3527:93:1"
											}
										]
									},
									"documentation": {
										"id": 365,
										"nodeType": "StructuredDocumentation",
										"src": "3291:55:1",
										"text": " @dev See {IERC721Metadata-tokenURI}."
									},
									"functionSelector": "c87b56dd",
									"id": 403,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "3360:8:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 369,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3406:8:1"
									},
									"parameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3377:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "3369:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3369:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3368:17:1"
									},
									"returnParameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 371,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "3424:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 370,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3424:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3423:15:1"
									},
									"scope": 1154,
									"src": "3351:276:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 411,
										"nodeType": "Block",
										"src": "3935:26:1",
										"statements": [
											{
												"expression": {
													"hexValue": "",
													"id": 409,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3952:2:1",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
														"typeString": "literal_string \"\""
													},
													"value": ""
												},
												"functionReturnParameters": 408,
												"id": 410,
												"nodeType": "Return",
												"src": "3945:9:1"
											}
										]
									},
									"documentation": {
										"id": 404,
										"nodeType": "StructuredDocumentation",
										"src": "3633:231:1",
										"text": " @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."
									},
									"id": 412,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_baseURI",
									"nameLocation": "3878:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 405,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3886:2:1"
									},
									"returnParameters": {
										"id": 408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 407,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "3920:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 406,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3920:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3919:15:1"
									},
									"scope": 1154,
									"src": "3869:92:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 423,
										"nodeType": "Block",
										"src": "3991:85:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 418,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 415,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "4009:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 416,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "4009:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 417,
																"name": "manager",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 219,
																"src": "4023:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4009:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616c6c6572206973206e6f7420746865206f776e6572",
															"id": 419,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4032:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_15ed5034391ed5ef65b8bb8dbcb08f9b6c4034ebcf89f76344a17e1651e92b33",
																"typeString": "literal_string \"Caller is not the owner\""
															},
															"value": "Caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_15ed5034391ed5ef65b8bb8dbcb08f9b6c4034ebcf89f76344a17e1651e92b33",
																"typeString": "literal_string \"Caller is not the owner\""
															}
														],
														"id": 414,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4001:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 420,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4001:57:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 421,
												"nodeType": "ExpressionStatement",
												"src": "4001:57:1"
											},
											{
												"id": 422,
												"nodeType": "PlaceholderStatement",
												"src": "4068:1:1"
											}
										]
									},
									"id": 424,
									"name": "onlyManager",
									"nameLocation": "3977:11:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 413,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3988:2:1"
									},
									"src": "3968:108:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1261
									],
									"body": {
										"id": 466,
										"nodeType": "Block",
										"src": "4204:347:1",
										"statements": [
											{
												"assignments": [
													434
												],
												"declarations": [
													{
														"constant": false,
														"id": 434,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4222:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 466,
														"src": "4214:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 433,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4214:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 439,
												"initialValue": {
													"arguments": [
														{
															"id": 437,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "4256:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 435,
															"name": "ERC721Upgradeable",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1154,
															"src": "4230:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ERC721Upgradeable_$1154_$",
																"typeString": "type(contract ERC721Upgradeable)"
															}
														},
														"id": 436,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "ownerOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 344,
														"src": "4230:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 438,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4230:34:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4214:50:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 443,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 441,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 427,
																"src": "4282:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 442,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 434,
																"src": "4288:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4282:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a20617070726f76616c20746f2063757272656e74206f776e6572",
															"id": 444,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4295:35:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942",
																"typeString": "literal_string \"ERC721: approval to current owner\""
															},
															"value": "ERC721: approval to current owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942",
																"typeString": "literal_string \"ERC721: approval to current owner\""
															}
														],
														"id": 440,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4274:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4274:57:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 446,
												"nodeType": "ExpressionStatement",
												"src": "4274:57:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 457,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 451,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 448,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1626,
																		"src": "4363:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 449,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4363:12:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 450,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 434,
																	"src": "4379:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "4363:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 453,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 434,
																		"src": "4405:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 454,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1626,
																			"src": "4412:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 455,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4412:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 452,
																	"name": "isApprovedForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 532,
																	"src": "4388:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address,address) view returns (bool)"
																	}
																},
																"id": 456,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4388:37:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "4363:62:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c",
															"id": 458,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4439:63:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83",
																"typeString": "literal_string \"ERC721: approve caller is not token owner or approved for all\""
															},
															"value": "ERC721: approve caller is not token owner or approved for all"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83",
																"typeString": "literal_string \"ERC721: approve caller is not token owner or approved for all\""
															}
														],
														"id": 447,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4342:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 459,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4342:170:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 460,
												"nodeType": "ExpressionStatement",
												"src": "4342:170:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 462,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 427,
															"src": "4532:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 463,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "4536:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 461,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 999,
														"src": "4523:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 464,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4523:21:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 465,
												"nodeType": "ExpressionStatement",
												"src": "4523:21:1"
											}
										]
									},
									"documentation": {
										"id": 425,
										"nodeType": "StructuredDocumentation",
										"src": "4083:46:1",
										"text": " @dev See {IERC721-approve}."
									},
									"functionSelector": "095ea7b3",
									"id": 467,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4143:7:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 431,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4195:8:1"
									},
									"parameters": {
										"id": 430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 427,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4159:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 467,
												"src": "4151:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 426,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4151:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4171:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 467,
												"src": "4163:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 428,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4163:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4150:29:1"
									},
									"returnParameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4204:0:1"
									},
									"scope": 1154,
									"src": "4134:417:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1277
									],
									"body": {
										"id": 484,
										"nodeType": "Block",
										"src": "4697:82:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 477,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 470,
															"src": "4722:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 476,
														"name": "_requireMinted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1045,
														"src": "4707:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$__$",
															"typeString": "function (uint256) view"
														}
													},
													"id": 478,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4707:23:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 479,
												"nodeType": "ExpressionStatement",
												"src": "4707:23:1"
											},
											{
												"expression": {
													"baseExpression": {
														"id": 480,
														"name": "_tokenApprovals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 211,
														"src": "4748:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 482,
													"indexExpression": {
														"id": 481,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 470,
														"src": "4764:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4748:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 475,
												"id": 483,
												"nodeType": "Return",
												"src": "4741:31:1"
											}
										]
									},
									"documentation": {
										"id": 468,
										"nodeType": "StructuredDocumentation",
										"src": "4557:50:1",
										"text": " @dev See {IERC721-getApproved}."
									},
									"functionSelector": "081812fc",
									"id": 485,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4621:11:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 472,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4670:8:1"
									},
									"parameters": {
										"id": 471,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 470,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4641:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 485,
												"src": "4633:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 469,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4633:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4632:17:1"
									},
									"returnParameters": {
										"id": 475,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 474,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 485,
												"src": "4688:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 473,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4688:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4687:9:1"
									},
									"scope": 1154,
									"src": "4612:167:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1269
									],
									"body": {
										"id": 501,
										"nodeType": "Block",
										"src": "4930:69:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 495,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1626,
																"src": "4959:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 496,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4959:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 497,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 488,
															"src": "4973:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 498,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 490,
															"src": "4983:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 494,
														"name": "_setApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1031,
														"src": "4940:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 499,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4940:52:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 500,
												"nodeType": "ExpressionStatement",
												"src": "4940:52:1"
											}
										]
									},
									"documentation": {
										"id": 486,
										"nodeType": "StructuredDocumentation",
										"src": "4785:56:1",
										"text": " @dev See {IERC721-setApprovalForAll}."
									},
									"functionSelector": "a22cb465",
									"id": 502,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4855:17:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 492,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4921:8:1"
									},
									"parameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 488,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4881:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 502,
												"src": "4873:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 487,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4873:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 490,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "4896:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 502,
												"src": "4891:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 489,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4891:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4872:33:1"
									},
									"returnParameters": {
										"id": 493,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4930:0:1"
									},
									"scope": 1154,
									"src": "4846:153:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 513,
										"nodeType": "Block",
										"src": "5057:34:1",
										"statements": [
											{
												"expression": {
													"id": 511,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 509,
														"name": "isBounded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 221,
														"src": "5067:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 510,
														"name": "_flag",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 504,
														"src": "5079:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "5067:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 512,
												"nodeType": "ExpressionStatement",
												"src": "5067:17:1"
											}
										]
									},
									"functionSelector": "a9f51b23",
									"id": 514,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 507,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 506,
												"name": "onlyManager",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 424,
												"src": "5046:11:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "5046:11:1"
										}
									],
									"name": "setIsBounded",
									"nameLocation": "5014:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 505,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 504,
												"mutability": "mutable",
												"name": "_flag",
												"nameLocation": "5032:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 514,
												"src": "5027:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 503,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5027:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5026:12:1"
									},
									"returnParameters": {
										"id": 508,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5057:0:1"
									},
									"scope": 1154,
									"src": "5005:86:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1287
									],
									"body": {
										"id": 531,
										"nodeType": "Block",
										"src": "5260:59:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 525,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 217,
															"src": "5277:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 527,
														"indexExpression": {
															"id": 526,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 517,
															"src": "5296:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "5277:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 529,
													"indexExpression": {
														"id": 528,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 519,
														"src": "5303:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5277:35:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 524,
												"id": 530,
												"nodeType": "Return",
												"src": "5270:42:1"
											}
										]
									},
									"documentation": {
										"id": 515,
										"nodeType": "StructuredDocumentation",
										"src": "5097:55:1",
										"text": " @dev See {IERC721-isApprovedForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 532,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "5166:16:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 521,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5236:8:1"
									},
									"parameters": {
										"id": 520,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 517,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5191:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 532,
												"src": "5183:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 516,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5183:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 519,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5206:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 532,
												"src": "5198:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 518,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5198:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5182:33:1"
									},
									"returnParameters": {
										"id": 524,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 523,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 532,
												"src": "5254:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 522,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5254:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5253:6:1"
									},
									"scope": 1154,
									"src": "5157:162:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1253
									],
									"body": {
										"id": 558,
										"nodeType": "Block",
										"src": "5500:207:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 545,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1626,
																		"src": "5589:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 546,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5589:12:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 547,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 539,
																	"src": "5603:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 544,
																"name": "_isApprovedOrOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 702,
																"src": "5570:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) view returns (bool)"
																}
															},
															"id": 548,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5570:41:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6572206f7220617070726f766564",
															"id": 549,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5613:47:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af",
																"typeString": "literal_string \"ERC721: caller is not token owner or approved\""
															},
															"value": "ERC721: caller is not token owner or approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af",
																"typeString": "literal_string \"ERC721: caller is not token owner or approved\""
															}
														],
														"id": 543,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5562:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 550,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5562:99:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 551,
												"nodeType": "ExpressionStatement",
												"src": "5562:99:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 553,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 535,
															"src": "5682:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 554,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 537,
															"src": "5688:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 555,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 539,
															"src": "5692:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 552,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 975,
														"src": "5672:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 556,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5672:28:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 557,
												"nodeType": "ExpressionStatement",
												"src": "5672:28:1"
											}
										]
									},
									"documentation": {
										"id": 533,
										"nodeType": "StructuredDocumentation",
										"src": "5325:51:1",
										"text": " @dev See {IERC721-transferFrom}."
									},
									"functionSelector": "23b872dd",
									"id": 559,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5390:12:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 541,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5491:8:1"
									},
									"parameters": {
										"id": 540,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 535,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5420:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 559,
												"src": "5412:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 534,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5412:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 537,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5442:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 559,
												"src": "5434:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 536,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5434:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 539,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5462:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 559,
												"src": "5454:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 538,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5454:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5402:73:1"
									},
									"returnParameters": {
										"id": 542,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5500:0:1"
									},
									"scope": 1154,
									"src": "5381:326:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1243
									],
									"body": {
										"id": 577,
										"nodeType": "Block",
										"src": "5896:56:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 571,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 562,
															"src": "5923:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 572,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 564,
															"src": "5929:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 573,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 566,
															"src": "5933:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 574,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5942:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 570,
														"name": "safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															578,
															608
														],
														"referencedDeclaration": 608,
														"src": "5906:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 575,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5906:39:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 576,
												"nodeType": "ExpressionStatement",
												"src": "5906:39:1"
											}
										]
									},
									"documentation": {
										"id": 560,
										"nodeType": "StructuredDocumentation",
										"src": "5713:55:1",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "42842e0e",
									"id": 578,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "5782:16:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 568,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5887:8:1"
									},
									"parameters": {
										"id": 567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 562,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5816:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "5808:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 561,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5808:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 564,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5838:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "5830:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 563,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5830:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 566,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5858:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "5850:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 565,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5850:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5798:73:1"
									},
									"returnParameters": {
										"id": 569,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5896:0:1"
									},
									"scope": 1154,
									"src": "5773:179:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1233
									],
									"body": {
										"id": 607,
										"nodeType": "Block",
										"src": "6168:164:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 593,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1626,
																		"src": "6205:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 594,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6205:12:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 595,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 585,
																	"src": "6219:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 592,
																"name": "_isApprovedOrOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 702,
																"src": "6186:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) view returns (bool)"
																}
															},
															"id": 596,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6186:41:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6572206f7220617070726f766564",
															"id": 597,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6229:47:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af",
																"typeString": "literal_string \"ERC721: caller is not token owner or approved\""
															},
															"value": "ERC721: caller is not token owner or approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af",
																"typeString": "literal_string \"ERC721: caller is not token owner or approved\""
															}
														],
														"id": 591,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6178:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 598,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6178:99:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 599,
												"nodeType": "ExpressionStatement",
												"src": "6178:99:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 601,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 581,
															"src": "6301:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 602,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 583,
															"src": "6307:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 603,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 585,
															"src": "6311:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 604,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 587,
															"src": "6320:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 600,
														"name": "_safeTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 637,
														"src": "6287:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 605,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6287:38:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 606,
												"nodeType": "ExpressionStatement",
												"src": "6287:38:1"
											}
										]
									},
									"documentation": {
										"id": 579,
										"nodeType": "StructuredDocumentation",
										"src": "5958:55:1",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "b88d4fde",
									"id": 608,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "6027:16:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 589,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "6159:8:1"
									},
									"parameters": {
										"id": 588,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 581,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6061:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 608,
												"src": "6053:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 580,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6053:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 583,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6083:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 608,
												"src": "6075:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 582,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6075:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 585,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6103:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 608,
												"src": "6095:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 584,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6095:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 587,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6133:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 608,
												"src": "6120:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 586,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6120:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6043:100:1"
									},
									"returnParameters": {
										"id": 590,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6168:0:1"
									},
									"scope": 1154,
									"src": "6018:314:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 636,
										"nodeType": "Block",
										"src": "7333:165:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 621,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 611,
															"src": "7353:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 622,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 613,
															"src": "7359:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 623,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 615,
															"src": "7363:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 620,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 975,
														"src": "7343:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 624,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7343:28:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 625,
												"nodeType": "ExpressionStatement",
												"src": "7343:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 628,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 611,
																	"src": "7412:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 629,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 613,
																	"src": "7418:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 630,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 615,
																	"src": "7422:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 631,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 617,
																	"src": "7431:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 627,
																"name": "_checkOnERC721Received",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1107,
																"src": "7389:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) returns (bool)"
																}
															},
															"id": 632,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7389:47:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
															"id": 633,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7438:52:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																"typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
															},
															"value": "ERC721: transfer to non ERC721Receiver implementer"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																"typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
															}
														],
														"id": 626,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7381:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 634,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7381:110:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 635,
												"nodeType": "ExpressionStatement",
												"src": "7381:110:1"
											}
										]
									},
									"documentation": {
										"id": 609,
										"nodeType": "StructuredDocumentation",
										"src": "6338:850:1",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n `data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 637,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "7202:13:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 618,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "7233:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "7225:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 610,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7225:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 613,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7255:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "7247:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 612,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7247:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 615,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7275:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "7267:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 614,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7267:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 617,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7305:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "7292:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 616,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7292:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7215:100:1"
									},
									"returnParameters": {
										"id": 619,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7333:0:1"
									},
									"scope": 1154,
									"src": "7193:305:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 649,
										"nodeType": "Block",
										"src": "7682:40:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 645,
														"name": "_owners",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 203,
														"src": "7699:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 647,
													"indexExpression": {
														"id": 646,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 640,
														"src": "7707:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7699:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 644,
												"id": 648,
												"nodeType": "Return",
												"src": "7692:23:1"
											}
										]
									},
									"documentation": {
										"id": 638,
										"nodeType": "StructuredDocumentation",
										"src": "7504:98:1",
										"text": " @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist"
									},
									"id": 650,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_ownerOf",
									"nameLocation": "7616:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 641,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 640,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7633:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "7625:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 639,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7625:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7624:17:1"
									},
									"returnParameters": {
										"id": 644,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 643,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "7673:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 642,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7673:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7672:9:1"
									},
									"scope": 1154,
									"src": "7607:115:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 667,
										"nodeType": "Block",
										"src": "8096:55:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 665,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 659,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 653,
																"src": "8122:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 658,
															"name": "_ownerOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 650,
															"src": "8113:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																"typeString": "function (uint256) view returns (address)"
															}
														},
														"id": 660,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8113:17:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 663,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8142:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 662,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8134:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 661,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8134:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 664,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8134:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8113:31:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 657,
												"id": 666,
												"nodeType": "Return",
												"src": "8106:38:1"
											}
										]
									},
									"documentation": {
										"id": 651,
										"nodeType": "StructuredDocumentation",
										"src": "7728:292:1",
										"text": " @dev Returns whether `tokenId` exists.\n Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n Tokens start existing when they are minted (`_mint`),\n and stop existing when they are burned (`_burn`)."
									},
									"id": 668,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_exists",
									"nameLocation": "8034:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 654,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 653,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8050:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 668,
												"src": "8042:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 652,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8042:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8041:17:1"
									},
									"returnParameters": {
										"id": 657,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 656,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 668,
												"src": "8090:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 655,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8090:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8089:6:1"
									},
									"scope": 1154,
									"src": "8025:126:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 701,
										"nodeType": "Block",
										"src": "8408:173:1",
										"statements": [
											{
												"assignments": [
													679
												],
												"declarations": [
													{
														"constant": false,
														"id": 679,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "8426:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 701,
														"src": "8418:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 678,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "8418:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 684,
												"initialValue": {
													"arguments": [
														{
															"id": 682,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 673,
															"src": "8460:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 680,
															"name": "ERC721Upgradeable",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1154,
															"src": "8434:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ERC721Upgradeable_$1154_$",
																"typeString": "type(contract ERC721Upgradeable)"
															}
														},
														"id": 681,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "ownerOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 344,
														"src": "8434:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 683,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8434:34:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8418:50:1"
											},
											{
												"expression": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 698,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 692,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 687,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 685,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 671,
																		"src": "8486:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"id": 686,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 679,
																		"src": "8497:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "8486:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"arguments": [
																		{
																			"id": 689,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 679,
																			"src": "8523:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 690,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 671,
																			"src": "8530:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 688,
																		"name": "isApprovedForAll",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 532,
																		"src": "8506:16:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																			"typeString": "function (address,address) view returns (bool)"
																		}
																	},
																	"id": 691,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8506:32:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "8486:52:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 697,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 694,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 673,
																			"src": "8554:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 693,
																		"name": "getApproved",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 485,
																		"src": "8542:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																			"typeString": "function (uint256) view returns (address)"
																		}
																	},
																	"id": 695,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8542:20:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 696,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 671,
																	"src": "8566:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "8542:31:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "8486:87:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"id": 699,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "8485:89:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 677,
												"id": 700,
												"nodeType": "Return",
												"src": "8478:96:1"
											}
										]
									},
									"documentation": {
										"id": 669,
										"nodeType": "StructuredDocumentation",
										"src": "8157:147:1",
										"text": " @dev Returns whether `spender` is allowed to manage `tokenId`.\n Requirements:\n - `tokenId` must exist."
									},
									"id": 702,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isApprovedOrOwner",
									"nameLocation": "8318:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 671,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8345:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "8337:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 670,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8337:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 673,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8362:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "8354:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 672,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8354:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8336:34:1"
									},
									"returnParameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "8402:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 675,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8402:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8401:6:1"
									},
									"scope": 1154,
									"src": "8309:272:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 716,
										"nodeType": "Block",
										"src": "8976:43:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 711,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 705,
															"src": "8996:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 712,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 707,
															"src": "9000:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 713,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9009:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 710,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															717,
															746
														],
														"referencedDeclaration": 746,
														"src": "8986:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,bytes memory)"
														}
													},
													"id": 714,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8986:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 715,
												"nodeType": "ExpressionStatement",
												"src": "8986:26:1"
											}
										]
									},
									"documentation": {
										"id": 703,
										"nodeType": "StructuredDocumentation",
										"src": "8587:319:1",
										"text": " @dev Safely mints `tokenId` and transfers it to `to`.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 717,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "8920:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 708,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 705,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8938:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 717,
												"src": "8930:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 704,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8930:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 707,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8950:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 717,
												"src": "8942:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 706,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8942:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8929:29:1"
									},
									"returnParameters": {
										"id": 709,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8976:0:1"
									},
									"scope": 1154,
									"src": "8911:108:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 745,
										"nodeType": "Block",
										"src": "9354:195:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 728,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 720,
															"src": "9370:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 729,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 722,
															"src": "9374:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 727,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 823,
														"src": "9364:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 730,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9364:18:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 731,
												"nodeType": "ExpressionStatement",
												"src": "9364:18:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 736,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9444:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 735,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "9436:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 734,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "9436:7:1",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 737,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9436:10:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 738,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 720,
																	"src": "9448:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 739,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 722,
																	"src": "9452:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 740,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 724,
																	"src": "9461:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 733,
																"name": "_checkOnERC721Received",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1107,
																"src": "9413:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) returns (bool)"
																}
															},
															"id": 741,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9413:53:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
															"id": 742,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9480:52:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																"typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
															},
															"value": "ERC721: transfer to non ERC721Receiver implementer"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																"typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
															}
														],
														"id": 732,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9392:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 743,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9392:150:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 744,
												"nodeType": "ExpressionStatement",
												"src": "9392:150:1"
											}
										]
									},
									"documentation": {
										"id": 718,
										"nodeType": "StructuredDocumentation",
										"src": "9025:210:1",
										"text": " @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
									},
									"id": 746,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "9249:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 725,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 720,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "9276:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 746,
												"src": "9268:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 719,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9268:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 722,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "9296:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 746,
												"src": "9288:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 721,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9288:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 724,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "9326:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 746,
												"src": "9313:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 723,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9313:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9258:78:1"
									},
									"returnParameters": {
										"id": 726,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9354:0:1"
									},
									"scope": 1154,
									"src": "9240:309:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 822,
										"nodeType": "Block",
										"src": "9932:859:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 760,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 755,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 749,
																"src": "9950:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 758,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9964:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 757,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9956:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 756,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9956:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 759,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9956:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9950:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 761,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9968:34:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6",
																"typeString": "literal_string \"ERC721: mint to the zero address\""
															},
															"value": "ERC721: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6",
																"typeString": "literal_string \"ERC721: mint to the zero address\""
															}
														],
														"id": 754,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9942:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 762,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9942:61:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 763,
												"nodeType": "ExpressionStatement",
												"src": "9942:61:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 768,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "10021:17:1",
															"subExpression": {
																"arguments": [
																	{
																		"id": 766,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 751,
																		"src": "10030:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 765,
																	"name": "_exists",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 668,
																	"src": "10022:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (uint256) view returns (bool)"
																	}
																},
																"id": 767,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10022:16:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a20746f6b656e20616c7265616479206d696e746564",
															"id": 769,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10040:30:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57",
																"typeString": "literal_string \"ERC721: token already minted\""
															},
															"value": "ERC721: token already minted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57",
																"typeString": "literal_string \"ERC721: token already minted\""
															}
														],
														"id": 764,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10013:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 770,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10013:58:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 771,
												"nodeType": "ExpressionStatement",
												"src": "10013:58:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 775,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10111:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 774,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10103:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 773,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10103:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 776,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10103:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 777,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 749,
															"src": "10115:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 778,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 751,
															"src": "10119:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 779,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10128:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 772,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1120,
														"src": "10082:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 780,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10082:48:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 781,
												"nodeType": "ExpressionStatement",
												"src": "10082:48:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 786,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "10225:17:1",
															"subExpression": {
																"arguments": [
																	{
																		"id": 784,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 751,
																		"src": "10234:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 783,
																	"name": "_exists",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 668,
																	"src": "10226:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (uint256) view returns (bool)"
																	}
																},
																"id": 785,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10226:16:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a20746f6b656e20616c7265616479206d696e746564",
															"id": 787,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10244:30:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57",
																"typeString": "literal_string \"ERC721: token already minted\""
															},
															"value": "ERC721: token already minted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57",
																"typeString": "literal_string \"ERC721: token already minted\""
															}
														],
														"id": 782,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10217:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 788,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10217:58:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 789,
												"nodeType": "ExpressionStatement",
												"src": "10217:58:1"
											},
											{
												"id": 796,
												"nodeType": "UncheckedBlock",
												"src": "10286:360:1",
												"statements": [
													{
														"expression": {
															"id": 794,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 790,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 207,
																	"src": "10617:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 792,
																"indexExpression": {
																	"id": 791,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 749,
																	"src": "10627:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "10617:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"hexValue": "31",
																"id": 793,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10634:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "10617:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 795,
														"nodeType": "ExpressionStatement",
														"src": "10617:18:1"
													}
												]
											},
											{
												"expression": {
													"id": 801,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 797,
															"name": "_owners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 203,
															"src": "10656:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 799,
														"indexExpression": {
															"id": 798,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 751,
															"src": "10664:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10656:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 800,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 749,
														"src": "10675:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10656:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 802,
												"nodeType": "ExpressionStatement",
												"src": "10656:21:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 806,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10710:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 805,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10702:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 804,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10702:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 807,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10702:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 808,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 749,
															"src": "10714:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 809,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 751,
															"src": "10718:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 803,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1187,
														"src": "10693:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 810,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10693:33:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 811,
												"nodeType": "EmitStatement",
												"src": "10688:38:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 815,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10765:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 814,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10757:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 813,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10757:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 816,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10757:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 817,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 749,
															"src": "10769:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 818,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 751,
															"src": "10773:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 819,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10782:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 812,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1133,
														"src": "10737:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 820,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10737:47:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 821,
												"nodeType": "ExpressionStatement",
												"src": "10737:47:1"
											}
										]
									},
									"documentation": {
										"id": 747,
										"nodeType": "StructuredDocumentation",
										"src": "9555:311:1",
										"text": " @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."
									},
									"id": 823,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "9880:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 752,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 749,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "9894:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 823,
												"src": "9886:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 748,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9886:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 751,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "9906:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 823,
												"src": "9898:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 750,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9898:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9885:29:1"
									},
									"returnParameters": {
										"id": 753,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9932:0:1"
									},
									"scope": 1154,
									"src": "9871:920:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 889,
										"nodeType": "Block",
										"src": "11166:735:1",
										"statements": [
											{
												"assignments": [
													830
												],
												"declarations": [
													{
														"constant": false,
														"id": 830,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "11184:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 889,
														"src": "11176:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 829,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "11176:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 835,
												"initialValue": {
													"arguments": [
														{
															"id": 833,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 826,
															"src": "11218:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 831,
															"name": "ERC721Upgradeable",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1154,
															"src": "11192:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ERC721Upgradeable_$1154_$",
																"typeString": "type(contract ERC721Upgradeable)"
															}
														},
														"id": 832,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "ownerOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 344,
														"src": "11192:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 834,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11192:34:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11176:50:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 837,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 830,
															"src": "11258:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 840,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11273:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 839,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11265:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 838,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11265:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 841,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11265:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 842,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 826,
															"src": "11277:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 843,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11286:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 836,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1120,
														"src": "11237:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 844,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11237:51:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 845,
												"nodeType": "ExpressionStatement",
												"src": "11237:51:1"
											},
											{
												"expression": {
													"id": 851,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 846,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 830,
														"src": "11390:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 849,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 826,
																"src": "11424:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 847,
																"name": "ERC721Upgradeable",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1154,
																"src": "11398:17:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ERC721Upgradeable_$1154_$",
																	"typeString": "type(contract ERC721Upgradeable)"
																}
															},
															"id": 848,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "ownerOf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 344,
															"src": "11398:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																"typeString": "function (uint256) view returns (address)"
															}
														},
														"id": 850,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11398:34:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11390:42:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 852,
												"nodeType": "ExpressionStatement",
												"src": "11390:42:1"
											},
											{
												"expression": {
													"id": 856,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "11470:31:1",
													"subExpression": {
														"baseExpression": {
															"id": 853,
															"name": "_tokenApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 211,
															"src": "11477:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 855,
														"indexExpression": {
															"id": 854,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 826,
															"src": "11493:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11477:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 857,
												"nodeType": "ExpressionStatement",
												"src": "11470:31:1"
											},
											{
												"id": 864,
												"nodeType": "UncheckedBlock",
												"src": "11512:237:1",
												"statements": [
													{
														"expression": {
															"id": 862,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 858,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 207,
																	"src": "11717:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 860,
																"indexExpression": {
																	"id": 859,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 830,
																	"src": "11727:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "11717:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "-=",
															"rightHandSide": {
																"hexValue": "31",
																"id": 861,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11737:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "11717:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 863,
														"nodeType": "ExpressionStatement",
														"src": "11717:21:1"
													}
												]
											},
											{
												"expression": {
													"id": 868,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "11758:23:1",
													"subExpression": {
														"baseExpression": {
															"id": 865,
															"name": "_owners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 203,
															"src": "11765:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 867,
														"indexExpression": {
															"id": 866,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 826,
															"src": "11773:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11765:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 869,
												"nodeType": "ExpressionStatement",
												"src": "11758:23:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 871,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 830,
															"src": "11806:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 874,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11821:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 873,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11813:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 872,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11813:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 875,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11813:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 876,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 826,
															"src": "11825:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 870,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1187,
														"src": "11797:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 877,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11797:36:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 878,
												"nodeType": "EmitStatement",
												"src": "11792:41:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 880,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 830,
															"src": "11864:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 883,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11879:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 882,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11871:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 881,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11871:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 884,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11871:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 885,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 826,
															"src": "11883:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 886,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11892:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 879,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1133,
														"src": "11844:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 887,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11844:50:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 888,
												"nodeType": "ExpressionStatement",
												"src": "11844:50:1"
											}
										]
									},
									"documentation": {
										"id": 824,
										"nodeType": "StructuredDocumentation",
										"src": "10797:315:1",
										"text": " @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n This is an internal function that does not check if the sender is authorized to operate on the token.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."
									},
									"id": 890,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "11126:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 827,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 826,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "11140:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 890,
												"src": "11132:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 825,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11132:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11131:17:1"
									},
									"returnParameters": {
										"id": 828,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11166:0:1"
									},
									"scope": 1154,
									"src": "11117:784:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 974,
										"nodeType": "Block",
										"src": "12334:1146:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 906,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 903,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 897,
																		"src": "12378:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 901,
																		"name": "ERC721Upgradeable",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1154,
																		"src": "12352:17:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_ERC721Upgradeable_$1154_$",
																			"typeString": "type(contract ERC721Upgradeable)"
																		}
																	},
																	"id": 902,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "ownerOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 344,
																	"src": "12352:25:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																		"typeString": "function (uint256) view returns (address)"
																	}
																},
																"id": 904,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12352:34:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 905,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 893,
																"src": "12390:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "12352:42:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a207472616e736665722066726f6d20696e636f7272656374206f776e6572",
															"id": 907,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12396:39:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48",
																"typeString": "literal_string \"ERC721: transfer from incorrect owner\""
															},
															"value": "ERC721: transfer from incorrect owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48",
																"typeString": "literal_string \"ERC721: transfer from incorrect owner\""
															}
														],
														"id": 900,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12344:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 908,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12344:92:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 909,
												"nodeType": "ExpressionStatement",
												"src": "12344:92:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 916,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 911,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 895,
																"src": "12454:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 914,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12468:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 913,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "12460:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 912,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "12460:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 915,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12460:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "12454:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 917,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12472:38:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4",
																"typeString": "literal_string \"ERC721: transfer to the zero address\""
															},
															"value": "ERC721: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4",
																"typeString": "literal_string \"ERC721: transfer to the zero address\""
															}
														],
														"id": 910,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12446:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 918,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12446:65:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 919,
												"nodeType": "ExpressionStatement",
												"src": "12446:65:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 921,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 893,
															"src": "12543:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 922,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 895,
															"src": "12549:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 923,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 897,
															"src": "12553:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 924,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12562:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 920,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1120,
														"src": "12522:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 925,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12522:42:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 926,
												"nodeType": "ExpressionStatement",
												"src": "12522:42:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 933,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 930,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 897,
																		"src": "12690:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 928,
																		"name": "ERC721Upgradeable",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1154,
																		"src": "12664:17:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_ERC721Upgradeable_$1154_$",
																			"typeString": "type(contract ERC721Upgradeable)"
																		}
																	},
																	"id": 929,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "ownerOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 344,
																	"src": "12664:25:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																		"typeString": "function (uint256) view returns (address)"
																	}
																},
																"id": 931,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12664:34:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 932,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 893,
																"src": "12702:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "12664:42:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a207472616e736665722066726f6d20696e636f7272656374206f776e6572",
															"id": 934,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12708:39:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48",
																"typeString": "literal_string \"ERC721: transfer from incorrect owner\""
															},
															"value": "ERC721: transfer from incorrect owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48",
																"typeString": "literal_string \"ERC721: transfer from incorrect owner\""
															}
														],
														"id": 927,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12656:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 935,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12656:92:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 936,
												"nodeType": "ExpressionStatement",
												"src": "12656:92:1"
											},
											{
												"expression": {
													"id": 940,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "12810:31:1",
													"subExpression": {
														"baseExpression": {
															"id": 937,
															"name": "_tokenApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 211,
															"src": "12817:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 939,
														"indexExpression": {
															"id": 938,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 897,
															"src": "12833:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "12817:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 941,
												"nodeType": "ExpressionStatement",
												"src": "12810:31:1"
											},
											{
												"id": 954,
												"nodeType": "UncheckedBlock",
												"src": "12852:496:1",
												"statements": [
													{
														"expression": {
															"id": 946,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 942,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 207,
																	"src": "13285:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 944,
																"indexExpression": {
																	"id": 943,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 893,
																	"src": "13295:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "13285:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "-=",
															"rightHandSide": {
																"hexValue": "31",
																"id": 945,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13304:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "13285:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 947,
														"nodeType": "ExpressionStatement",
														"src": "13285:20:1"
													},
													{
														"expression": {
															"id": 952,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 948,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 207,
																	"src": "13319:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 950,
																"indexExpression": {
																	"id": 949,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 895,
																	"src": "13329:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "13319:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"hexValue": "31",
																"id": 951,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13336:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "13319:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 953,
														"nodeType": "ExpressionStatement",
														"src": "13319:18:1"
													}
												]
											},
											{
												"expression": {
													"id": 959,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 955,
															"name": "_owners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 203,
															"src": "13357:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 957,
														"indexExpression": {
															"id": 956,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 897,
															"src": "13365:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "13357:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 958,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 895,
														"src": "13376:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "13357:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 960,
												"nodeType": "ExpressionStatement",
												"src": "13357:21:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 962,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 893,
															"src": "13403:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 963,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 895,
															"src": "13409:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 964,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 897,
															"src": "13413:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 961,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1187,
														"src": "13394:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 965,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13394:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 966,
												"nodeType": "EmitStatement",
												"src": "13389:32:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 968,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 893,
															"src": "13452:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 969,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 895,
															"src": "13458:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 970,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 897,
															"src": "13462:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 971,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13471:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 967,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1133,
														"src": "13432:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 972,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13432:41:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 973,
												"nodeType": "ExpressionStatement",
												"src": "13432:41:1"
											}
										]
									},
									"documentation": {
										"id": 891,
										"nodeType": "StructuredDocumentation",
										"src": "11907:313:1",
										"text": " @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."
									},
									"id": 975,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "12234:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 898,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 893,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12261:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 975,
												"src": "12253:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 892,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12253:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 895,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12283:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 975,
												"src": "12275:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 894,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12275:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 897,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "12303:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 975,
												"src": "12295:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 896,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12295:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12243:73:1"
									},
									"returnParameters": {
										"id": 899,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12334:0:1"
									},
									"scope": 1154,
									"src": "12225:1255:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 998,
										"nodeType": "Block",
										"src": "13656:118:1",
										"statements": [
											{
												"expression": {
													"id": 987,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 983,
															"name": "_tokenApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 211,
															"src": "13666:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 985,
														"indexExpression": {
															"id": 984,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 980,
															"src": "13682:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "13666:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 986,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 978,
														"src": "13693:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "13666:29:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 988,
												"nodeType": "ExpressionStatement",
												"src": "13666:29:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 992,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 980,
																	"src": "13745:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 990,
																	"name": "ERC721Upgradeable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1154,
																	"src": "13719:17:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_ERC721Upgradeable_$1154_$",
																		"typeString": "type(contract ERC721Upgradeable)"
																	}
																},
																"id": 991,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "ownerOf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 344,
																"src": "13719:25:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																	"typeString": "function (uint256) view returns (address)"
																}
															},
															"id": 993,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13719:34:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 994,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 978,
															"src": "13755:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 995,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 980,
															"src": "13759:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 989,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1196,
														"src": "13710:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 996,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13710:57:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 997,
												"nodeType": "EmitStatement",
												"src": "13705:62:1"
											}
										]
									},
									"documentation": {
										"id": 976,
										"nodeType": "StructuredDocumentation",
										"src": "13486:101:1",
										"text": " @dev Approve `to` to operate on `tokenId`\n Emits an {Approval} event."
									},
									"id": 999,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "13601:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 981,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 978,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13618:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 999,
												"src": "13610:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 977,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13610:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 980,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13630:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 999,
												"src": "13622:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 979,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13622:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13609:29:1"
									},
									"returnParameters": {
										"id": 982,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13656:0:1"
									},
									"scope": 1154,
									"src": "13592:182:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1030,
										"nodeType": "Block",
										"src": "14033:184:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1012,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1010,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1002,
																"src": "14051:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1011,
																"name": "operator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1004,
																"src": "14060:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "14051:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a20617070726f766520746f2063616c6c6572",
															"id": 1013,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14070:27:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05",
																"typeString": "literal_string \"ERC721: approve to caller\""
															},
															"value": "ERC721: approve to caller"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05",
																"typeString": "literal_string \"ERC721: approve to caller\""
															}
														],
														"id": 1009,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "14043:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1014,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14043:55:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1015,
												"nodeType": "ExpressionStatement",
												"src": "14043:55:1"
											},
											{
												"expression": {
													"id": 1022,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1016,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 217,
																"src": "14108:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 1019,
															"indexExpression": {
																"id": 1017,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1002,
																"src": "14127:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "14108:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1020,
														"indexExpression": {
															"id": 1018,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1004,
															"src": "14134:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "14108:35:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1021,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1006,
														"src": "14146:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "14108:46:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1023,
												"nodeType": "ExpressionStatement",
												"src": "14108:46:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1025,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1002,
															"src": "14184:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1026,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1004,
															"src": "14191:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1027,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1006,
															"src": "14201:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1024,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1205,
														"src": "14169:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 1028,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14169:41:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1029,
												"nodeType": "EmitStatement",
												"src": "14164:46:1"
											}
										]
									},
									"documentation": {
										"id": 1000,
										"nodeType": "StructuredDocumentation",
										"src": "13780:125:1",
										"text": " @dev Approve `operator` to operate on all of `owner` tokens\n Emits an {ApprovalForAll} event."
									},
									"id": 1031,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setApprovalForAll",
									"nameLocation": "13919:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1007,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1002,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "13955:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1031,
												"src": "13947:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1001,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13947:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1004,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "13978:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1031,
												"src": "13970:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1003,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13970:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1006,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "14001:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1031,
												"src": "13996:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1005,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "13996:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13937:78:1"
									},
									"returnParameters": {
										"id": 1008,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14033:0:1"
									},
									"scope": 1154,
									"src": "13910:307:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1044,
										"nodeType": "Block",
										"src": "14364:70:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1039,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1034,
																	"src": "14390:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1038,
																"name": "_exists",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 668,
																"src": "14382:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (uint256) view returns (bool)"
																}
															},
															"id": 1040,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14382:16:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a20696e76616c696420746f6b656e204944",
															"id": 1041,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14400:26:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f",
																"typeString": "literal_string \"ERC721: invalid token ID\""
															},
															"value": "ERC721: invalid token ID"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f",
																"typeString": "literal_string \"ERC721: invalid token ID\""
															}
														],
														"id": 1037,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "14374:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1042,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14374:53:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1043,
												"nodeType": "ExpressionStatement",
												"src": "14374:53:1"
											}
										]
									},
									"documentation": {
										"id": 1032,
										"nodeType": "StructuredDocumentation",
										"src": "14223:73:1",
										"text": " @dev Reverts if the `tokenId` has not been minted yet."
									},
									"id": 1045,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireMinted",
									"nameLocation": "14310:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1035,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1034,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14333:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1045,
												"src": "14325:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1033,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14325:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14324:17:1"
									},
									"returnParameters": {
										"id": 1036,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14364:0:1"
									},
									"scope": 1154,
									"src": "14301:133:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1106,
										"nodeType": "Block",
										"src": "15141:698:1",
										"statements": [
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1059,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1050,
															"src": "15155:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1060,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "isContract",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1333,
														"src": "15155:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
															"typeString": "function (address) view returns (bool)"
														}
													},
													"id": 1061,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15155:15:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1104,
													"nodeType": "Block",
													"src": "15797:36:1",
													"statements": [
														{
															"expression": {
																"hexValue": "74727565",
																"id": 1102,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "15818:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 1058,
															"id": 1103,
															"nodeType": "Return",
															"src": "15811:11:1"
														}
													]
												},
												"id": 1105,
												"nodeType": "IfStatement",
												"src": "15151:682:1",
												"trueBody": {
													"id": 1101,
													"nodeType": "Block",
													"src": "15172:619:1",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1081,
																		"nodeType": "Block",
																		"src": "15297:102:1",
																		"statements": [
																			{
																				"expression": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1079,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1075,
																						"name": "retval",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1073,
																						"src": "15322:6:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 1076,
																								"name": "IERC721ReceiverUpgradeable",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1172,
																								"src": "15332:26:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC721ReceiverUpgradeable_$1172_$",
																									"typeString": "type(contract IERC721ReceiverUpgradeable)"
																								}
																							},
																							"id": 1077,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberName": "onERC721Received",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1171,
																							"src": "15332:43:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC721ReceiverUpgradeable.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 1078,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "15332:52:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "15322:62:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"functionReturnParameters": 1058,
																				"id": 1080,
																				"nodeType": "Return",
																				"src": "15315:69:1"
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1082,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1074,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1073,
																				"mutability": "mutable",
																				"name": "retval",
																				"nameLocation": "15289:6:1",
																				"nodeType": "VariableDeclaration",
																				"scope": 1082,
																				"src": "15282:13:1",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1072,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "15282:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "15281:15:1"
																	},
																	"src": "15273:126:1"
																},
																{
																	"block": {
																		"id": 1098,
																		"nodeType": "Block",
																		"src": "15428:353:1",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1089,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 1086,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1084,
																							"src": "15450:6:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						},
																						"id": 1087,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "15450:13:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"hexValue": "30",
																						"id": 1088,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "15467:1:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "15450:18:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseBody": {
																					"id": 1096,
																					"nodeType": "Block",
																					"src": "15577:190:1",
																					"statements": [
																						{
																							"AST": {
																								"nodeType": "YulBlock",
																								"src": "15663:86:1",
																								"statements": [
																									{
																										"expression": {
																											"arguments": [
																												{
																													"arguments": [
																														{
																															"kind": "number",
																															"nodeType": "YulLiteral",
																															"src": "15700:2:1",
																															"type": "",
																															"value": "32"
																														},
																														{
																															"name": "reason",
																															"nodeType": "YulIdentifier",
																															"src": "15704:6:1"
																														}
																													],
																													"functionName": {
																														"name": "add",
																														"nodeType": "YulIdentifier",
																														"src": "15696:3:1"
																													},
																													"nodeType": "YulFunctionCall",
																													"src": "15696:15:1"
																												},
																												{
																													"arguments": [
																														{
																															"name": "reason",
																															"nodeType": "YulIdentifier",
																															"src": "15719:6:1"
																														}
																													],
																													"functionName": {
																														"name": "mload",
																														"nodeType": "YulIdentifier",
																														"src": "15713:5:1"
																													},
																													"nodeType": "YulFunctionCall",
																													"src": "15713:13:1"
																												}
																											],
																											"functionName": {
																												"name": "revert",
																												"nodeType": "YulIdentifier",
																												"src": "15689:6:1"
																											},
																											"nodeType": "YulFunctionCall",
																											"src": "15689:38:1"
																										},
																										"nodeType": "YulExpressionStatement",
																										"src": "15689:38:1"
																									}
																								]
																							},
																							"documentation": "@solidity memory-safe-assembly",
																							"evmVersion": "london",
																							"externalReferences": [
																								{
																									"declaration": 1084,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "15704:6:1",
																									"valueSize": 1
																								},
																								{
																									"declaration": 1084,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "15719:6:1",
																									"valueSize": 1
																								}
																							],
																							"id": 1095,
																							"nodeType": "InlineAssembly",
																							"src": "15654:95:1"
																						}
																					]
																				},
																				"id": 1097,
																				"nodeType": "IfStatement",
																				"src": "15446:321:1",
																				"trueBody": {
																					"id": 1094,
																					"nodeType": "Block",
																					"src": "15470:101:1",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
																										"id": 1091,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "string",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "15499:52:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																											"typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
																										},
																										"value": "ERC721: transfer to non ERC721Receiver implementer"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																											"typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
																										}
																									],
																									"id": 1090,
																									"name": "revert",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [
																										4294967277,
																										4294967277
																									],
																									"referencedDeclaration": 4294967277,
																									"src": "15492:6:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																										"typeString": "function (string memory) pure"
																									}
																								},
																								"id": 1092,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "15492:60:1",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1093,
																							"nodeType": "ExpressionStatement",
																							"src": "15492:60:1"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1099,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1085,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1084,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "15420:6:1",
																				"nodeType": "VariableDeclaration",
																				"scope": 1099,
																				"src": "15407:19:1",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes"
																				},
																				"typeName": {
																					"id": 1083,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "15407:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_storage_ptr",
																						"typeString": "bytes"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "15406:21:1"
																	},
																	"src": "15400:381:1"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1066,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1626,
																			"src": "15238:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1067,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "15238:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1068,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1048,
																		"src": "15252:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1069,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1052,
																		"src": "15258:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1070,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1054,
																		"src": "15267:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1063,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1050,
																				"src": "15217:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1062,
																			"name": "IERC721ReceiverUpgradeable",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1172,
																			"src": "15190:26:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721ReceiverUpgradeable_$1172_$",
																				"typeString": "type(contract IERC721ReceiverUpgradeable)"
																			}
																		},
																		"id": 1064,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "15190:30:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC721ReceiverUpgradeable_$1172",
																			"typeString": "contract IERC721ReceiverUpgradeable"
																		}
																	},
																	"id": 1065,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "onERC721Received",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1171,
																	"src": "15190:47:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1071,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15190:82:1",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1100,
															"nodeType": "TryStatement",
															"src": "15186:595:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1046,
										"nodeType": "StructuredDocumentation",
										"src": "14440:541:1",
										"text": " @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param data bytes optional data to send along with the call\n @return bool whether the call correctly returned the expected magic value"
									},
									"id": 1107,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOnERC721Received",
									"nameLocation": "14995:22:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1055,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1048,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "15035:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1107,
												"src": "15027:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1047,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15027:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1050,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "15057:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1107,
												"src": "15049:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1049,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15049:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1052,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "15077:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1107,
												"src": "15069:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1051,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15069:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1054,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "15107:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1107,
												"src": "15094:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1053,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "15094:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15017:100:1"
									},
									"returnParameters": {
										"id": 1058,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1057,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1107,
												"src": "15135:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1056,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15135:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15134:6:1"
									},
									"scope": 1154,
									"src": "14986:853:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1119,
										"nodeType": "Block",
										"src": "16707:2:1",
										"statements": []
									},
									"documentation": {
										"id": 1108,
										"nodeType": "StructuredDocumentation",
										"src": "15845:705:1",
										"text": " @dev Hook that is called before any token transfer. This includes minting and burning. If {ERC721Consecutive} is\n used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\n Calling conditions:\n - When `from` and `to` are both non-zero, ``from``'s tokens will be transferred to `to`.\n - When `from` is zero, the tokens will be minted for `to`.\n - When `to` is zero, ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n - `batchSize` is non-zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 1120,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "16564:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1110,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16602:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1120,
												"src": "16594:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1109,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16594:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1112,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16624:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1120,
												"src": "16616:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1111,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16616:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1114,
												"mutability": "mutable",
												"name": "firstTokenId",
												"nameLocation": "16644:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 1120,
												"src": "16636:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1113,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16636:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1116,
												"mutability": "mutable",
												"name": "batchSize",
												"nameLocation": "16674:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 1120,
												"src": "16666:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1115,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16666:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16584:105:1"
									},
									"returnParameters": {
										"id": 1118,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16707:0:1"
									},
									"scope": 1154,
									"src": "16555:154:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1132,
										"nodeType": "Block",
										"src": "17566:2:1",
										"statements": []
									},
									"documentation": {
										"id": 1121,
										"nodeType": "StructuredDocumentation",
										"src": "16715:695:1",
										"text": " @dev Hook that is called after any token transfer. This includes minting and burning. If {ERC721Consecutive} is\n used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\n Calling conditions:\n - When `from` and `to` are both non-zero, ``from``'s tokens were transferred to `to`.\n - When `from` is zero, the tokens were minted for `to`.\n - When `to` is zero, ``from``'s tokens were burned.\n - `from` and `to` are never both zero.\n - `batchSize` is non-zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 1133,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfer",
									"nameLocation": "17424:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1123,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "17461:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1133,
												"src": "17453:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1122,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17453:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1125,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "17483:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1133,
												"src": "17475:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1124,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17475:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1127,
												"mutability": "mutable",
												"name": "firstTokenId",
												"nameLocation": "17503:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 1133,
												"src": "17495:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1126,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17495:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1129,
												"mutability": "mutable",
												"name": "batchSize",
												"nameLocation": "17533:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 1133,
												"src": "17525:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1128,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17525:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17443:105:1"
									},
									"returnParameters": {
										"id": 1131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17566:0:1"
									},
									"scope": 1154,
									"src": "17415:153:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1147,
										"nodeType": "Block",
										"src": "18117:45:1",
										"statements": [
											{
												"expression": {
													"id": 1145,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1141,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 207,
															"src": "18127:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1143,
														"indexExpression": {
															"id": 1142,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1136,
															"src": "18137:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "18127:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1144,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1138,
														"src": "18149:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "18127:28:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1146,
												"nodeType": "ExpressionStatement",
												"src": "18127:28:1"
											}
										]
									},
									"documentation": {
										"id": 1134,
										"nodeType": "StructuredDocumentation",
										"src": "17574:409:1",
										"text": " @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n WARNING: Anyone calling this MUST ensure that the balances remain consistent with the ownership. The invariant\n being that for any address `a` the value returned by `balanceOf(a)` must be equal to the number of tokens such\n that `ownerOf(tokenId)` is `a`."
									},
									"id": 1148,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "__unsafe_increaseBalance",
									"nameLocation": "18050:24:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1136,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "18083:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1148,
												"src": "18075:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1135,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18075:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1138,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "18100:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 1148,
												"src": "18092:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1137,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18092:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18074:33:1"
									},
									"returnParameters": {
										"id": 1140,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18117:0:1"
									},
									"scope": 1154,
									"src": "18041:121:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 1149,
										"nodeType": "StructuredDocumentation",
										"src": "18168:254:1",
										"text": " @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
									},
									"id": 1153,
									"mutability": "mutable",
									"name": "__gap",
									"nameLocation": "18447:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 1154,
									"src": "18427:25:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$44_storage",
										"typeString": "uint256[44]"
									},
									"typeName": {
										"baseType": {
											"id": 1150,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "18427:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 1152,
										"length": {
											"hexValue": "3434",
											"id": 1151,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "18435:2:1",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_44_by_1",
												"typeString": "int_const 44"
											},
											"value": "44"
										},
										"nodeType": "ArrayTypeName",
										"src": "18427:11:1",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$44_storage_ptr",
											"typeString": "uint256[44]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 1155,
							"src": "751:17704:1",
							"usedErrors": []
						}
					],
					"src": "107:18349:1"
				},
				"id": 1
			},
			"mlmContracts/contracts-upgradeable@4.8/token/ERC721/IERC721ReceiverUpgradeable.sol": {
				"ast": {
					"absolutePath": "mlmContracts/contracts-upgradeable@4.8/token/ERC721/IERC721ReceiverUpgradeable.sol",
					"exportedSymbols": {
						"IERC721ReceiverUpgradeable": [
							1172
						]
					},
					"id": 1173,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1156,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "116:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721ReceiverUpgradeable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1157,
								"nodeType": "StructuredDocumentation",
								"src": "141:152:2",
								"text": " @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."
							},
							"fullyImplemented": false,
							"id": 1172,
							"linearizedBaseContracts": [
								1172
							],
							"name": "IERC721ReceiverUpgradeable",
							"nameLocation": "304:26:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1158,
										"nodeType": "StructuredDocumentation",
										"src": "337:493:2",
										"text": " @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
									},
									"functionSelector": "150b7a02",
									"id": 1171,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "844:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1160,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "878:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1171,
												"src": "870:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1159,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "870:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1162,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "904:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1171,
												"src": "896:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "896:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1164,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "926:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1171,
												"src": "918:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1163,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "918:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1166,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "958:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1171,
												"src": "943:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1165,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "943:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "860:108:2"
									},
									"returnParameters": {
										"id": 1170,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1169,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1171,
												"src": "987:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1168,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "987:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "986:8:2"
									},
									"scope": 1172,
									"src": "835:160:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1173,
							"src": "294:703:2",
							"usedErrors": []
						}
					],
					"src": "116:882:2"
				},
				"id": 2
			},
			"mlmContracts/contracts-upgradeable@4.8/token/ERC721/IERC721Upgradeable.sol": {
				"ast": {
					"absolutePath": "mlmContracts/contracts-upgradeable@4.8/token/ERC721/IERC721Upgradeable.sol",
					"exportedSymbols": {
						"IERC165Upgradeable": [
							1872
						],
						"IERC721Upgradeable": [
							1288
						]
					},
					"id": 1289,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1174,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "108:23:3"
						},
						{
							"absolutePath": "mlmContracts/contracts-upgradeable@4.8/utils/introspection/IERC165Upgradeable.sol",
							"file": "../../utils/introspection/IERC165Upgradeable.sol",
							"id": 1175,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1289,
							"sourceUnit": 1873,
							"src": "133:58:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1177,
										"name": "IERC165Upgradeable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1872,
										"src": "293:18:3"
									},
									"id": 1178,
									"nodeType": "InheritanceSpecifier",
									"src": "293:18:3"
								}
							],
							"canonicalName": "IERC721Upgradeable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1176,
								"nodeType": "StructuredDocumentation",
								"src": "193:67:3",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 1288,
							"linearizedBaseContracts": [
								1288,
								1872
							],
							"name": "IERC721Upgradeable",
							"nameLocation": "271:18:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1179,
										"nodeType": "StructuredDocumentation",
										"src": "318:88:3",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1187,
									"name": "Transfer",
									"nameLocation": "417:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1181,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "442:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1187,
												"src": "426:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1183,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "464:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1187,
												"src": "448:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1182,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "448:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1185,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "484:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1187,
												"src": "468:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1184,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "468:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "425:67:3"
									},
									"src": "411:82:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1188,
										"nodeType": "StructuredDocumentation",
										"src": "499:94:3",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1196,
									"name": "Approval",
									"nameLocation": "604:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1190,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "629:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1196,
												"src": "613:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1189,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "613:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1192,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "652:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1196,
												"src": "636:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1191,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1194,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "678:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1196,
												"src": "662:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1193,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "662:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "612:74:3"
									},
									"src": "598:89:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1197,
										"nodeType": "StructuredDocumentation",
										"src": "693:117:3",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 1205,
									"name": "ApprovalForAll",
									"nameLocation": "821:14:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1204,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1199,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "852:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1205,
												"src": "836:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1198,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "836:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1201,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "875:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1205,
												"src": "859:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1200,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "859:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1203,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "890:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1205,
												"src": "885:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1202,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "885:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "835:64:3"
									},
									"src": "815:85:3"
								},
								{
									"documentation": {
										"id": 1206,
										"nodeType": "StructuredDocumentation",
										"src": "906:76:3",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 1213,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "996:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1208,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1014:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1213,
												"src": "1006:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1207,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1006:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1005:15:3"
									},
									"returnParameters": {
										"id": 1212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1211,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1052:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1213,
												"src": "1044:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1210,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1044:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1043:17:3"
									},
									"scope": 1288,
									"src": "987:74:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1214,
										"nodeType": "StructuredDocumentation",
										"src": "1067:131:3",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 1221,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1212:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1216,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1228:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1221,
												"src": "1220:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1215,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1220:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1219:17:3"
									},
									"returnParameters": {
										"id": 1220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1219,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1268:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1221,
												"src": "1260:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1218,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1260:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1259:15:3"
									},
									"scope": 1288,
									"src": "1203:72:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1222,
										"nodeType": "StructuredDocumentation",
										"src": "1281:556:3",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 1233,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1851:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1224,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1885:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1233,
												"src": "1877:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1223,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1877:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1226,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1907:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1233,
												"src": "1899:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1225,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1899:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1228,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1927:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1233,
												"src": "1919:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1227,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1919:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1230,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1959:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1233,
												"src": "1944:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1229,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1944:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1867:102:3"
									},
									"returnParameters": {
										"id": 1232,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1978:0:3"
									},
									"scope": 1288,
									"src": "1842:137:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1234,
										"nodeType": "StructuredDocumentation",
										"src": "1985:687:3",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 1243,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2686:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1236,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1243,
												"src": "2712:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1235,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1238,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2742:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1243,
												"src": "2734:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1237,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2734:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1240,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2762:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1243,
												"src": "2754:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1239,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2754:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2702:73:3"
									},
									"returnParameters": {
										"id": 1242,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2784:0:3"
									},
									"scope": 1288,
									"src": "2677:108:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1244,
										"nodeType": "StructuredDocumentation",
										"src": "2791:732:3",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1253,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3537:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1246,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3567:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1253,
												"src": "3559:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1245,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3559:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1248,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3589:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1253,
												"src": "3581:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1247,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3581:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1250,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3609:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1253,
												"src": "3601:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1249,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3601:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3549:73:3"
									},
									"returnParameters": {
										"id": 1252,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3631:0:3"
									},
									"scope": 1288,
									"src": "3528:104:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1254,
										"nodeType": "StructuredDocumentation",
										"src": "3638:452:3",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1261,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4104:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1256,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4120:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1261,
												"src": "4112:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1255,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4112:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1258,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4132:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1261,
												"src": "4124:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1257,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4124:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4111:29:3"
									},
									"returnParameters": {
										"id": 1260,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4149:0:3"
									},
									"scope": 1288,
									"src": "4095:55:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1262,
										"nodeType": "StructuredDocumentation",
										"src": "4156:309:3",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 1269,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4479:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1264,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4505:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1269,
												"src": "4497:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4497:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1266,
												"mutability": "mutable",
												"name": "_approved",
												"nameLocation": "4520:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 1269,
												"src": "4515:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1265,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4515:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4496:34:3"
									},
									"returnParameters": {
										"id": 1268,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4539:0:3"
									},
									"scope": 1288,
									"src": "4470:70:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1270,
										"nodeType": "StructuredDocumentation",
										"src": "4546:139:3",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 1277,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4699:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1272,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4719:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1277,
												"src": "4711:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1271,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4711:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4710:17:3"
									},
									"returnParameters": {
										"id": 1276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1275,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4759:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1277,
												"src": "4751:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1274,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4751:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4750:18:3"
									},
									"scope": 1288,
									"src": "4690:79:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1278,
										"nodeType": "StructuredDocumentation",
										"src": "4775:138:3",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 1287,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4927:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1283,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1280,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4952:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1287,
												"src": "4944:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1279,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4944:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1282,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4967:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1287,
												"src": "4959:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1281,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4959:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4943:33:3"
									},
									"returnParameters": {
										"id": 1286,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1285,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1287,
												"src": "5000:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1284,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5000:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4999:6:3"
									},
									"scope": 1288,
									"src": "4918:88:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1289,
							"src": "261:4747:3",
							"usedErrors": []
						}
					],
					"src": "108:4901:3"
				},
				"id": 3
			},
			"mlmContracts/contracts-upgradeable@4.8/token/ERC721/extensions/IERC721MetadataUpgradeable.sol": {
				"ast": {
					"absolutePath": "mlmContracts/contracts-upgradeable@4.8/token/ERC721/extensions/IERC721MetadataUpgradeable.sol",
					"exportedSymbols": {
						"IERC165Upgradeable": [
							1872
						],
						"IERC721MetadataUpgradeable": [
							1315
						],
						"IERC721Upgradeable": [
							1288
						]
					},
					"id": 1316,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1290,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:4"
						},
						{
							"absolutePath": "mlmContracts/contracts-upgradeable@4.8/token/ERC721/IERC721Upgradeable.sol",
							"file": "../IERC721Upgradeable.sol",
							"id": 1291,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1316,
							"sourceUnit": 1289,
							"src": "137:35:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1293,
										"name": "IERC721Upgradeable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1288,
										"src": "348:18:4"
									},
									"id": 1294,
									"nodeType": "InheritanceSpecifier",
									"src": "348:18:4"
								}
							],
							"canonicalName": "IERC721MetadataUpgradeable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1292,
								"nodeType": "StructuredDocumentation",
								"src": "174:133:4",
								"text": " @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"
							},
							"fullyImplemented": false,
							"id": 1315,
							"linearizedBaseContracts": [
								1315,
								1288,
								1872
							],
							"name": "IERC721MetadataUpgradeable",
							"nameLocation": "318:26:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1295,
										"nodeType": "StructuredDocumentation",
										"src": "373:58:4",
										"text": " @dev Returns the token collection name."
									},
									"functionSelector": "06fdde03",
									"id": 1300,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "445:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1296,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "449:2:4"
									},
									"returnParameters": {
										"id": 1299,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1298,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1300,
												"src": "475:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1297,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "475:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "474:15:4"
									},
									"scope": 1315,
									"src": "436:54:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1301,
										"nodeType": "StructuredDocumentation",
										"src": "496:60:4",
										"text": " @dev Returns the token collection symbol."
									},
									"functionSelector": "95d89b41",
									"id": 1306,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "570:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1302,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "576:2:4"
									},
									"returnParameters": {
										"id": 1305,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1304,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1306,
												"src": "602:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1303,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "602:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "601:15:4"
									},
									"scope": 1315,
									"src": "561:56:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1307,
										"nodeType": "StructuredDocumentation",
										"src": "623:90:4",
										"text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
									},
									"functionSelector": "c87b56dd",
									"id": 1314,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "727:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1309,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "744:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1314,
												"src": "736:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1308,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "736:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "735:17:4"
									},
									"returnParameters": {
										"id": 1313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1312,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1314,
												"src": "776:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1311,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "776:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "775:15:4"
									},
									"scope": 1315,
									"src": "718:73:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1316,
							"src": "308:485:4",
							"usedErrors": []
						}
					],
					"src": "112:682:4"
				},
				"id": 4
			},
			"mlmContracts/contracts-upgradeable@4.8/utils/AddressUpgradeable.sol": {
				"ast": {
					"absolutePath": "mlmContracts/contracts-upgradeable@4.8/utils/AddressUpgradeable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							1599
						]
					},
					"id": 1600,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1317,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "AddressUpgradeable",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1318,
								"nodeType": "StructuredDocumentation",
								"src": "126:67:5",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1599,
							"linearizedBaseContracts": [
								1599
							],
							"name": "AddressUpgradeable",
							"nameLocation": "202:18:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1332,
										"nodeType": "Block",
										"src": "1252:254:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1330,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1326,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1321,
																"src": "1476:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1327,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1476:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1328,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1476:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1329,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1498:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1476:23:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1325,
												"id": 1331,
												"nodeType": "Return",
												"src": "1469:30:5"
											}
										]
									},
									"documentation": {
										"id": 1319,
										"nodeType": "StructuredDocumentation",
										"src": "227:954:5",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 1333,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1195:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1321,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1214:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1333,
												"src": "1206:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1320,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1206:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1205:17:5"
									},
									"returnParameters": {
										"id": 1325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1324,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1333,
												"src": "1246:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1323,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1246:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1245:6:5"
									},
									"scope": 1599,
									"src": "1186:320:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1366,
										"nodeType": "Block",
										"src": "2494:241:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1348,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1344,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2520:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$1599",
																				"typeString": "library AddressUpgradeable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$1599",
																				"typeString": "library AddressUpgradeable"
																			}
																		],
																		"id": 1343,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2512:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1342,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2512:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1345,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2512:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1346,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2512:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1347,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1338,
																"src": "2537:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2512:31:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 1349,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2545:31:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 1341,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2504:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1350,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2504:73:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1351,
												"nodeType": "ExpressionStatement",
												"src": "2504:73:5"
											},
											{
												"assignments": [
													1353,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1353,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2594:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 1366,
														"src": "2589:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1352,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2589:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1360,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1358,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2637:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 1354,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1336,
																"src": "2607:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1355,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2607:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1357,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1356,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1338,
																"src": "2629:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2607:29:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1359,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2607:33:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2588:52:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1362,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1353,
															"src": "2658:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 1363,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2667:60:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 1361,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2650:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2650:78:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1365,
												"nodeType": "ExpressionStatement",
												"src": "2650:78:5"
											}
										]
									},
									"documentation": {
										"id": 1334,
										"nodeType": "StructuredDocumentation",
										"src": "1512:906:5",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 1367,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2432:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1336,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2458:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1367,
												"src": "2442:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1335,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2442:15:5",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1338,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2477:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1367,
												"src": "2469:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1337,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2441:43:5"
									},
									"returnParameters": {
										"id": 1340,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2494:0:5"
									},
									"scope": 1599,
									"src": "2423:312:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1384,
										"nodeType": "Block",
										"src": "3566:96:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1378,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1370,
															"src": "3605:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1379,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1372,
															"src": "3613:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1380,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3619:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 1381,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3622:32:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 1377,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1425,
															1469
														],
														"referencedDeclaration": 1469,
														"src": "3583:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1382,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3583:72:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1376,
												"id": 1383,
												"nodeType": "Return",
												"src": "3576:79:5"
											}
										]
									},
									"documentation": {
										"id": 1368,
										"nodeType": "StructuredDocumentation",
										"src": "2741:731:5",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 1385,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3486:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1373,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1370,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3507:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1385,
												"src": "3499:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1369,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3499:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1372,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3528:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1385,
												"src": "3515:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1371,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3515:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3498:35:5"
									},
									"returnParameters": {
										"id": 1376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1375,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1385,
												"src": "3552:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1374,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3552:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3551:14:5"
									},
									"scope": 1599,
									"src": "3477:185:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1404,
										"nodeType": "Block",
										"src": "4031:76:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1398,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1388,
															"src": "4070:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1399,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1390,
															"src": "4078:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1400,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4084:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 1401,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1392,
															"src": "4087:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1397,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1425,
															1469
														],
														"referencedDeclaration": 1469,
														"src": "4048:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1402,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4048:52:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1396,
												"id": 1403,
												"nodeType": "Return",
												"src": "4041:59:5"
											}
										]
									},
									"documentation": {
										"id": 1386,
										"nodeType": "StructuredDocumentation",
										"src": "3668:211:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1405,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3893:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1393,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1388,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3923:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1405,
												"src": "3915:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3915:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1390,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3952:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1405,
												"src": "3939:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1389,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3939:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1392,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3980:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1405,
												"src": "3966:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1391,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3966:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3905:93:5"
									},
									"returnParameters": {
										"id": 1396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1395,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1405,
												"src": "4017:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1394,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4017:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4016:14:5"
									},
									"scope": 1599,
									"src": "3884:223:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1424,
										"nodeType": "Block",
										"src": "4612:111:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1418,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1408,
															"src": "4651:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1419,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1410,
															"src": "4659:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1420,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1412,
															"src": "4665:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 1421,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4672:43:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 1417,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1425,
															1469
														],
														"referencedDeclaration": 1469,
														"src": "4629:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1422,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4629:87:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1416,
												"id": 1423,
												"nodeType": "Return",
												"src": "4622:94:5"
											}
										]
									},
									"documentation": {
										"id": 1406,
										"nodeType": "StructuredDocumentation",
										"src": "4113:351:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 1425,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4478:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1413,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1408,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4517:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1425,
												"src": "4509:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1407,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4509:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1410,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4546:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1425,
												"src": "4533:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1409,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4533:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1412,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4568:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1425,
												"src": "4560:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1411,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4560:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4499:80:5"
									},
									"returnParameters": {
										"id": 1416,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1415,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1425,
												"src": "4598:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1414,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4598:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4597:14:5"
									},
									"scope": 1599,
									"src": "4469:254:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1468,
										"nodeType": "Block",
										"src": "5150:267:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1446,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1442,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5176:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$1599",
																				"typeString": "library AddressUpgradeable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$1599",
																				"typeString": "library AddressUpgradeable"
																			}
																		],
																		"id": 1441,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5168:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1440,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5168:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1443,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5168:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1444,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5168:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1445,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1432,
																"src": "5193:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5168:30:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 1447,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5200:40:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 1439,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5160:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1448,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5160:81:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1449,
												"nodeType": "ExpressionStatement",
												"src": "5160:81:5"
											},
											{
												"assignments": [
													1451,
													1453
												],
												"declarations": [
													{
														"constant": false,
														"id": 1451,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5257:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 1468,
														"src": "5252:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1450,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5252:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1453,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5279:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 1468,
														"src": "5266:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1452,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5266:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1460,
												"initialValue": {
													"arguments": [
														{
															"id": 1458,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1430,
															"src": "5319:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1454,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1428,
																"src": "5293:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1455,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5293:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1457,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1456,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1432,
																"src": "5312:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5293:25:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1459,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5293:31:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5251:73:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1462,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1428,
															"src": "5368:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1463,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1451,
															"src": "5376:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1464,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1453,
															"src": "5385:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1465,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1434,
															"src": "5397:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1461,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1554,
														"src": "5341:26:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1466,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5341:69:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1438,
												"id": 1467,
												"nodeType": "Return",
												"src": "5334:76:5"
											}
										]
									},
									"documentation": {
										"id": 1426,
										"nodeType": "StructuredDocumentation",
										"src": "4729:237:5",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1469,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4980:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1428,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5019:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1469,
												"src": "5011:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1427,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5011:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1430,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5048:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1469,
												"src": "5035:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1429,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5035:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1432,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5070:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1469,
												"src": "5062:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1431,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5062:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1434,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5099:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1469,
												"src": "5085:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1433,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5085:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5001:116:5"
									},
									"returnParameters": {
										"id": 1438,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1437,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1469,
												"src": "5136:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1436,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5136:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5135:14:5"
									},
									"scope": 1599,
									"src": "4971:446:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1485,
										"nodeType": "Block",
										"src": "5694:97:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1480,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1472,
															"src": "5730:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1481,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1474,
															"src": "5738:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 1482,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5744:39:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 1479,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1486,
															1515
														],
														"referencedDeclaration": 1515,
														"src": "5711:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1483,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5711:73:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1478,
												"id": 1484,
												"nodeType": "Return",
												"src": "5704:80:5"
											}
										]
									},
									"documentation": {
										"id": 1470,
										"nodeType": "StructuredDocumentation",
										"src": "5423:166:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1486,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5603:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1475,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1472,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5630:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1486,
												"src": "5622:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1471,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5622:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1474,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5651:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1486,
												"src": "5638:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1473,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5638:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5621:35:5"
									},
									"returnParameters": {
										"id": 1478,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1477,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1486,
												"src": "5680:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1476,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5680:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5679:14:5"
									},
									"scope": 1599,
									"src": "5594:197:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1514,
										"nodeType": "Block",
										"src": "6133:168:5",
										"statements": [
											{
												"assignments": [
													1499,
													1501
												],
												"declarations": [
													{
														"constant": false,
														"id": 1499,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6149:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 1514,
														"src": "6144:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1498,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6144:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1501,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6171:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 1514,
														"src": "6158:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1500,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6158:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1506,
												"initialValue": {
													"arguments": [
														{
															"id": 1504,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1491,
															"src": "6203:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1502,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1489,
															"src": "6185:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1503,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6185:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1505,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6185:23:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6143:65:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1508,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1489,
															"src": "6252:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1509,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1499,
															"src": "6260:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1510,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1501,
															"src": "6269:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1511,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1493,
															"src": "6281:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1507,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1554,
														"src": "6225:26:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6225:69:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1497,
												"id": 1513,
												"nodeType": "Return",
												"src": "6218:76:5"
											}
										]
									},
									"documentation": {
										"id": 1487,
										"nodeType": "StructuredDocumentation",
										"src": "5797:173:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1515,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5984:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1494,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1489,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6020:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1515,
												"src": "6012:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1488,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6012:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1491,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6049:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1515,
												"src": "6036:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1490,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6036:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1493,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6077:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1515,
												"src": "6063:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1492,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6063:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6002:93:5"
									},
									"returnParameters": {
										"id": 1497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1496,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1515,
												"src": "6119:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1495,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6119:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6118:14:5"
									},
									"scope": 1599,
									"src": "5975:326:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1553,
										"nodeType": "Block",
										"src": "6783:434:5",
										"statements": [
											{
												"condition": {
													"id": 1529,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1520,
													"src": "6797:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1551,
													"nodeType": "Block",
													"src": "7153:58:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1547,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1522,
																		"src": "7175:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 1548,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1524,
																		"src": "7187:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1546,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1598,
																	"src": "7167:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 1549,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7167:33:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1550,
															"nodeType": "ExpressionStatement",
															"src": "7167:33:5"
														}
													]
												},
												"id": 1552,
												"nodeType": "IfStatement",
												"src": "6793:418:5",
												"trueBody": {
													"id": 1545,
													"nodeType": "Block",
													"src": "6806:341:5",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1533,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1530,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1522,
																		"src": "6824:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1531,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "6824:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1532,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6845:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "6824:22:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1542,
															"nodeType": "IfStatement",
															"src": "6820:286:5",
															"trueBody": {
																"id": 1541,
																"nodeType": "Block",
																"src": "6848:258:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 1536,
																							"name": "target",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1518,
																							"src": "7050:6:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 1535,
																						"name": "isContract",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1333,
																						"src": "7039:10:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																							"typeString": "function (address) view returns (bool)"
																						}
																					},
																					"id": 1537,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "7039:18:5",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																					"id": 1538,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "7059:31:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					},
																					"value": "Address: call to non-contract"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					}
																				],
																				"id": 1534,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "7031:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 1539,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7031:60:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1540,
																		"nodeType": "ExpressionStatement",
																		"src": "7031:60:5"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 1543,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1522,
																"src": "7126:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1528,
															"id": 1544,
															"nodeType": "Return",
															"src": "7119:17:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1516,
										"nodeType": "StructuredDocumentation",
										"src": "6307:277:5",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"
									},
									"id": 1554,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "6598:26:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1525,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1518,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6642:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1554,
												"src": "6634:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1517,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6634:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1520,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "6663:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1554,
												"src": "6658:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1519,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6658:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1522,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "6693:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 1554,
												"src": "6680:23:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1521,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6680:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1524,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6727:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1554,
												"src": "6713:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1523,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6713:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6624:121:5"
									},
									"returnParameters": {
										"id": 1528,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1527,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1554,
												"src": "6769:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1526,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6769:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6768:14:5"
									},
									"scope": 1599,
									"src": "6589:628:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1577,
										"nodeType": "Block",
										"src": "7598:135:5",
										"statements": [
											{
												"condition": {
													"id": 1566,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1557,
													"src": "7612:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1575,
													"nodeType": "Block",
													"src": "7669:58:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1571,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1559,
																		"src": "7691:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 1572,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1561,
																		"src": "7703:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1570,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1598,
																	"src": "7683:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 1573,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7683:33:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1574,
															"nodeType": "ExpressionStatement",
															"src": "7683:33:5"
														}
													]
												},
												"id": 1576,
												"nodeType": "IfStatement",
												"src": "7608:119:5",
												"trueBody": {
													"id": 1569,
													"nodeType": "Block",
													"src": "7621:42:5",
													"statements": [
														{
															"expression": {
																"id": 1567,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1559,
																"src": "7642:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1565,
															"id": 1568,
															"nodeType": "Return",
															"src": "7635:17:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1555,
										"nodeType": "StructuredDocumentation",
										"src": "7223:210:5",
										"text": " @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"
									},
									"id": 1578,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "7447:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1562,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1557,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7478:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1578,
												"src": "7473:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1556,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7473:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1559,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7508:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 1578,
												"src": "7495:23:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1558,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7495:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1561,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7542:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1578,
												"src": "7528:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1560,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7528:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7463:97:5"
									},
									"returnParameters": {
										"id": 1565,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1564,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1578,
												"src": "7584:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1563,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7584:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7583:14:5"
									},
									"scope": 1599,
									"src": "7438:295:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1597,
										"nodeType": "Block",
										"src": "7822:457:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1588,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1585,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1580,
															"src": "7898:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1586,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "7898:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1587,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7918:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7898:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1595,
													"nodeType": "Block",
													"src": "8228:45:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1592,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1582,
																		"src": "8249:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1591,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "8242:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 1593,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8242:20:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1594,
															"nodeType": "ExpressionStatement",
															"src": "8242:20:5"
														}
													]
												},
												"id": 1596,
												"nodeType": "IfStatement",
												"src": "7894:379:5",
												"trueBody": {
													"id": 1590,
													"nodeType": "Block",
													"src": "7921:301:5",
													"statements": [
														{
															"AST": {
																"nodeType": "YulBlock",
																"src": "8079:133:5",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "8097:40:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nodeType": "YulIdentifier",
																					"src": "8126:10:5"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "8120:5:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8120:17:5"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nodeType": "YulTypedName",
																				"src": "8101:15:5",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "8165:2:5",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nodeType": "YulIdentifier",
																							"src": "8169:10:5"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "8161:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8161:19:5"
																				},
																				{
																					"name": "returndata_size",
																					"nodeType": "YulIdentifier",
																					"src": "8182:15:5"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8154:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8154:44:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8154:44:5"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "london",
															"externalReferences": [
																{
																	"declaration": 1580,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "8126:10:5",
																	"valueSize": 1
																},
																{
																	"declaration": 1580,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "8169:10:5",
																	"valueSize": 1
																}
															],
															"id": 1589,
															"nodeType": "InlineAssembly",
															"src": "8070:142:5"
														}
													]
												}
											}
										]
									},
									"id": 1598,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "7748:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1583,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1580,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7769:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 1598,
												"src": "7756:23:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1579,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7756:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1582,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7795:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1598,
												"src": "7781:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1581,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7781:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7755:53:5"
									},
									"returnParameters": {
										"id": 1584,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7822:0:5"
									},
									"scope": 1599,
									"src": "7739:540:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1600,
							"src": "194:8087:5",
							"usedErrors": []
						}
					],
					"src": "101:8181:5"
				},
				"id": 5
			},
			"mlmContracts/contracts-upgradeable@4.8/utils/ContextUpgradeable.sol": {
				"ast": {
					"absolutePath": "mlmContracts/contracts-upgradeable@4.8/utils/ContextUpgradeable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							1599
						],
						"ContextUpgradeable": [
							1641
						],
						"Initializable": [
							168
						]
					},
					"id": 1642,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1601,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:6"
						},
						{
							"absolutePath": "mlmContracts/contracts-upgradeable@4.8/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 1602,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1642,
							"sourceUnit": 169,
							"src": "110:42:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1604,
										"name": "Initializable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 168,
										"src": "691:13:6"
									},
									"id": 1605,
									"nodeType": "InheritanceSpecifier",
									"src": "691:13:6"
								}
							],
							"canonicalName": "ContextUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1603,
								"nodeType": "StructuredDocumentation",
								"src": "154:496:6",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1641,
							"linearizedBaseContracts": [
								1641,
								168
							],
							"name": "ContextUpgradeable",
							"nameLocation": "669:18:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1610,
										"nodeType": "Block",
										"src": "763:7:6",
										"statements": []
									},
									"id": 1611,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1608,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1607,
												"name": "onlyInitializing",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 113,
												"src": "746:16:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "746:16:6"
										}
									],
									"name": "__Context_init",
									"nameLocation": "720:14:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1606,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "734:2:6"
									},
									"returnParameters": {
										"id": 1609,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "763:0:6"
									},
									"scope": 1641,
									"src": "711:59:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1616,
										"nodeType": "Block",
										"src": "838:7:6",
										"statements": []
									},
									"id": 1617,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1614,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1613,
												"name": "onlyInitializing",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 113,
												"src": "821:16:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "821:16:6"
										}
									],
									"name": "__Context_init_unchained",
									"nameLocation": "785:24:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1612,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "809:2:6"
									},
									"returnParameters": {
										"id": 1615,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "838:0:6"
									},
									"scope": 1641,
									"src": "776:69:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1625,
										"nodeType": "Block",
										"src": "912:34:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1622,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "929:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1623,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "929:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1621,
												"id": 1624,
												"nodeType": "Return",
												"src": "922:17:6"
											}
										]
									},
									"id": 1626,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "859:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1618,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "869:2:6"
									},
									"returnParameters": {
										"id": 1621,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1620,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1626,
												"src": "903:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1619,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "903:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "902:9:6"
									},
									"scope": 1641,
									"src": "850:96:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1634,
										"nodeType": "Block",
										"src": "1019:32:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1631,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1036:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1632,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "1036:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1630,
												"id": 1633,
												"nodeType": "Return",
												"src": "1029:15:6"
											}
										]
									},
									"id": 1635,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "961:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1627,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "969:2:6"
									},
									"returnParameters": {
										"id": 1630,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1629,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1635,
												"src": "1003:14:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1628,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1003:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1002:16:6"
									},
									"scope": 1641,
									"src": "952:99:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 1636,
										"nodeType": "StructuredDocumentation",
										"src": "1057:254:6",
										"text": " @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
									},
									"id": 1640,
									"mutability": "mutable",
									"name": "__gap",
									"nameLocation": "1336:5:6",
									"nodeType": "VariableDeclaration",
									"scope": 1641,
									"src": "1316:25:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$50_storage",
										"typeString": "uint256[50]"
									},
									"typeName": {
										"baseType": {
											"id": 1637,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1316:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 1639,
										"length": {
											"hexValue": "3530",
											"id": 1638,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1324:2:6",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_50_by_1",
												"typeString": "int_const 50"
											},
											"value": "50"
										},
										"nodeType": "ArrayTypeName",
										"src": "1316:11:6",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
											"typeString": "uint256[50]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 1642,
							"src": "651:693:6",
							"usedErrors": []
						}
					],
					"src": "86:1259:6"
				},
				"id": 6
			},
			"mlmContracts/contracts-upgradeable@4.8/utils/StringsUpgradeable.sol": {
				"ast": {
					"absolutePath": "mlmContracts/contracts-upgradeable@4.8/utils/StringsUpgradeable.sol",
					"exportedSymbols": {
						"MathUpgradeable": [
							2737
						],
						"StringsUpgradeable": [
							1816
						]
					},
					"id": 1817,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1643,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:7"
						},
						{
							"absolutePath": "mlmContracts/contracts-upgradeable@4.8/utils/math/MathUpgradeable.sol",
							"file": "./math/MathUpgradeable.sol",
							"id": 1644,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1817,
							"sourceUnit": 2738,
							"src": "126:36:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "StringsUpgradeable",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1645,
								"nodeType": "StructuredDocumentation",
								"src": "164:34:7",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 1816,
							"linearizedBaseContracts": [
								1816
							],
							"name": "StringsUpgradeable",
							"nameLocation": "207:18:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1648,
									"mutability": "constant",
									"name": "_SYMBOLS",
									"nameLocation": "257:8:7",
									"nodeType": "VariableDeclaration",
									"scope": 1816,
									"src": "232:54:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 1646,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "232:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 1647,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "268:18:7",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1651,
									"mutability": "constant",
									"name": "_ADDRESS_LENGTH",
									"nameLocation": "315:15:7",
									"nodeType": "VariableDeclaration",
									"scope": 1816,
									"src": "292:43:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1649,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "292:5:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 1650,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "333:2:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1698,
										"nodeType": "Block",
										"src": "508:636:7",
										"statements": [
											{
												"id": 1697,
												"nodeType": "UncheckedBlock",
												"src": "518:620:7",
												"statements": [
													{
														"assignments": [
															1660
														],
														"declarations": [
															{
																"constant": false,
																"id": 1660,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "550:6:7",
																"nodeType": "VariableDeclaration",
																"scope": 1697,
																"src": "542:14:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1659,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "542:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1667,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1666,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1663,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1654,
																		"src": "581:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1661,
																		"name": "MathUpgradeable",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2737,
																		"src": "559:15:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_MathUpgradeable_$2737_$",
																			"typeString": "type(library MathUpgradeable)"
																		}
																	},
																	"id": 1662,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "log10",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2574,
																	"src": "559:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 1664,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "559:28:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 1665,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "590:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "559:32:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "542:49:7"
													},
													{
														"assignments": [
															1669
														],
														"declarations": [
															{
																"constant": false,
																"id": 1669,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "619:6:7",
																"nodeType": "VariableDeclaration",
																"scope": 1697,
																"src": "605:20:7",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 1668,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "605:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1674,
														"initialValue": {
															"arguments": [
																{
																	"id": 1672,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1660,
																	"src": "639:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1671,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "628:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																},
																"typeName": {
																	"id": 1670,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "632:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																}
															},
															"id": 1673,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "628:18:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "605:41:7"
													},
													{
														"assignments": [
															1676
														],
														"declarations": [
															{
																"constant": false,
																"id": 1676,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "668:3:7",
																"nodeType": "VariableDeclaration",
																"scope": 1697,
																"src": "660:11:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1675,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "660:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1677,
														"nodeType": "VariableDeclarationStatement",
														"src": "660:11:7"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "741:67:7",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "759:35:7",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nodeType": "YulIdentifier",
																				"src": "770:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "782:2:7",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "786:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "778:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "778:15:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "766:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "766:28:7"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nodeType": "YulIdentifier",
																			"src": "759:3:7"
																		}
																	]
																}
															]
														},
														"documentation": "@solidity memory-safe-assembly",
														"evmVersion": "london",
														"externalReferences": [
															{
																"declaration": 1669,
																"isOffset": false,
																"isSlot": false,
																"src": "770:6:7",
																"valueSize": 1
															},
															{
																"declaration": 1660,
																"isOffset": false,
																"isSlot": false,
																"src": "786:6:7",
																"valueSize": 1
															},
															{
																"declaration": 1676,
																"isOffset": false,
																"isSlot": false,
																"src": "759:3:7",
																"valueSize": 1
															}
														],
														"id": 1678,
														"nodeType": "InlineAssembly",
														"src": "732:76:7"
													},
													{
														"body": {
															"id": 1693,
															"nodeType": "Block",
															"src": "834:267:7",
															"statements": [
																{
																	"expression": {
																		"id": 1681,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "852:5:7",
																		"subExpression": {
																			"id": 1680,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1676,
																			"src": "852:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1682,
																	"nodeType": "ExpressionStatement",
																	"src": "852:5:7"
																},
																{
																	"AST": {
																		"nodeType": "YulBlock",
																		"src": "935:84:7",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nodeType": "YulIdentifier",
																							"src": "965:3:7"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nodeType": "YulIdentifier",
																											"src": "979:5:7"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "986:2:7",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nodeType": "YulIdentifier",
																										"src": "975:3:7"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "975:14:7"
																								},
																								{
																									"name": "_SYMBOLS",
																									"nodeType": "YulIdentifier",
																									"src": "991:8:7"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nodeType": "YulIdentifier",
																								"src": "970:4:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "970:30:7"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nodeType": "YulIdentifier",
																						"src": "957:7:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "957:44:7"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "957:44:7"
																			}
																		]
																	},
																	"documentation": "@solidity memory-safe-assembly",
																	"evmVersion": "london",
																	"externalReferences": [
																		{
																			"declaration": 1648,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "991:8:7",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1676,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "965:3:7",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1654,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "979:5:7",
																			"valueSize": 1
																		}
																	],
																	"id": 1683,
																	"nodeType": "InlineAssembly",
																	"src": "926:93:7"
																},
																{
																	"expression": {
																		"id": 1686,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1684,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1654,
																			"src": "1036:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 1685,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1045:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "1036:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1687,
																	"nodeType": "ExpressionStatement",
																	"src": "1036:11:7"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1690,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1688,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1654,
																			"src": "1069:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1689,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1078:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1069:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1692,
																	"nodeType": "IfStatement",
																	"src": "1065:21:7",
																	"trueBody": {
																		"id": 1691,
																		"nodeType": "Break",
																		"src": "1081:5:7"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 1679,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "828:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 1694,
														"nodeType": "WhileStatement",
														"src": "821:280:7"
													},
													{
														"expression": {
															"id": 1695,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1669,
															"src": "1121:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1658,
														"id": 1696,
														"nodeType": "Return",
														"src": "1114:13:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1652,
										"nodeType": "StructuredDocumentation",
										"src": "342:90:7",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 1699,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "446:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1655,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1654,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "463:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1699,
												"src": "455:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1653,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "455:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "454:15:7"
									},
									"returnParameters": {
										"id": 1658,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1657,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1699,
												"src": "493:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1656,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "493:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "492:15:7"
									},
									"scope": 1816,
									"src": "437:707:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1718,
										"nodeType": "Block",
										"src": "1323:111:7",
										"statements": [
											{
												"id": 1717,
												"nodeType": "UncheckedBlock",
												"src": "1333:95:7",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 1708,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1702,
																	"src": "1376:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1714,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 1711,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1702,
																				"src": "1406:5:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 1709,
																				"name": "MathUpgradeable",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2737,
																				"src": "1383:15:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_MathUpgradeable_$2737_$",
																					"typeString": "type(library MathUpgradeable)"
																				}
																			},
																			"id": 1710,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "log256",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2697,
																			"src": "1383:22:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1712,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1383:29:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1713,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1415:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1383:33:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1707,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1719,
																	1795,
																	1815
																],
																"referencedDeclaration": 1795,
																"src": "1364:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256,uint256) pure returns (string memory)"
																}
															},
															"id": 1715,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1364:53:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1706,
														"id": 1716,
														"nodeType": "Return",
														"src": "1357:60:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1700,
										"nodeType": "StructuredDocumentation",
										"src": "1150:94:7",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 1719,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1258:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1703,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1702,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1278:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1719,
												"src": "1270:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1701,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1270:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1269:15:7"
									},
									"returnParameters": {
										"id": 1706,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1705,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1719,
												"src": "1308:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1704,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1308:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1307:15:7"
									},
									"scope": 1816,
									"src": "1249:185:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1794,
										"nodeType": "Block",
										"src": "1647:347:7",
										"statements": [
											{
												"assignments": [
													1730
												],
												"declarations": [
													{
														"constant": false,
														"id": 1730,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "1670:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 1794,
														"src": "1657:19:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1729,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1657:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1739,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1737,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1735,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1733,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1689:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1734,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1724,
																	"src": "1693:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1689:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 1736,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1702:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "1689:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1732,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "1679:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 1731,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1683:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 1738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1679:25:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1657:47:7"
											},
											{
												"expression": {
													"id": 1744,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1740,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1730,
															"src": "1714:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1742,
														"indexExpression": {
															"hexValue": "30",
															"id": 1741,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1721:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1714:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1743,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1726:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "1714:15:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1745,
												"nodeType": "ExpressionStatement",
												"src": "1714:15:7"
											},
											{
												"expression": {
													"id": 1750,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1746,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1730,
															"src": "1739:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1748,
														"indexExpression": {
															"hexValue": "31",
															"id": 1747,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1746:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1739:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 1749,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1751:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "1739:15:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1751,
												"nodeType": "ExpressionStatement",
												"src": "1739:15:7"
											},
											{
												"body": {
													"id": 1780,
													"nodeType": "Block",
													"src": "1809:83:7",
													"statements": [
														{
															"expression": {
																"id": 1774,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1766,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1730,
																		"src": "1823:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1768,
																	"indexExpression": {
																		"id": 1767,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1753,
																		"src": "1830:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1823:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1769,
																		"name": "_SYMBOLS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1648,
																		"src": "1835:8:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 1773,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1772,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1770,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1722,
																			"src": "1844:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 1771,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1852:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "1844:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1835:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "1823:33:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 1775,
															"nodeType": "ExpressionStatement",
															"src": "1823:33:7"
														},
														{
															"expression": {
																"id": 1778,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1776,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1722,
																	"src": "1870:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 1777,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1880:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "1870:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1779,
															"nodeType": "ExpressionStatement",
															"src": "1870:11:7"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1762,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1760,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1753,
														"src": "1797:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 1761,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1801:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "1797:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1781,
												"initializationExpression": {
													"assignments": [
														1753
													],
													"declarations": [
														{
															"constant": false,
															"id": 1753,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1777:1:7",
															"nodeType": "VariableDeclaration",
															"scope": 1781,
															"src": "1769:9:7",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1752,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1769:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1759,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1758,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1756,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 1754,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1781:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1755,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1724,
																"src": "1785:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1781:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1757,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1794:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1781:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1769:26:7"
												},
												"loopExpression": {
													"expression": {
														"id": 1764,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "1804:3:7",
														"subExpression": {
															"id": 1763,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1753,
															"src": "1806:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1765,
													"nodeType": "ExpressionStatement",
													"src": "1804:3:7"
												},
												"nodeType": "ForStatement",
												"src": "1764:128:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1785,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1783,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1722,
																"src": "1909:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1784,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1918:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1909:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
															"id": 1786,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1921:34:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															},
															"value": "Strings: hex length insufficient"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															}
														],
														"id": 1782,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1901:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1787,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1901:55:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1788,
												"nodeType": "ExpressionStatement",
												"src": "1901:55:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1791,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1730,
															"src": "1980:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1790,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1973:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1789,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1973:6:7",
															"typeDescriptions": {}
														}
													},
													"id": 1792,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1973:14:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1728,
												"id": 1793,
												"nodeType": "Return",
												"src": "1966:21:7"
											}
										]
									},
									"documentation": {
										"id": 1720,
										"nodeType": "StructuredDocumentation",
										"src": "1440:112:7",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 1795,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1566:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1725,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1722,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1586:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1795,
												"src": "1578:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1721,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1578:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1724,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "1601:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1795,
												"src": "1593:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1723,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1593:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1577:31:7"
									},
									"returnParameters": {
										"id": 1728,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1727,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1795,
												"src": "1632:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1726,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1632:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1631:15:7"
									},
									"scope": 1816,
									"src": "1557:437:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1814,
										"nodeType": "Block",
										"src": "2219:76:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1808,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1798,
																			"src": "2264:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1807,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2256:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 1806,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "2256:7:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1809,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2256:13:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 1805,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2248:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1804,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2248:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1810,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2248:22:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1811,
															"name": "_ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1651,
															"src": "2272:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 1803,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1719,
															1795,
															1815
														],
														"referencedDeclaration": 1795,
														"src": "2236:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 1812,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2236:52:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1802,
												"id": 1813,
												"nodeType": "Return",
												"src": "2229:59:7"
											}
										]
									},
									"documentation": {
										"id": 1796,
										"nodeType": "StructuredDocumentation",
										"src": "2000:141:7",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."
									},
									"id": 1815,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2155:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1799,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1798,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2175:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1815,
												"src": "2167:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1797,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2167:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2166:14:7"
									},
									"returnParameters": {
										"id": 1802,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1801,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1815,
												"src": "2204:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1800,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2204:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2203:15:7"
									},
									"scope": 1816,
									"src": "2146:149:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1817,
							"src": "199:2098:7",
							"usedErrors": []
						}
					],
					"src": "101:2197:7"
				},
				"id": 7
			},
			"mlmContracts/contracts-upgradeable@4.8/utils/introspection/ERC165Upgradeable.sol": {
				"ast": {
					"absolutePath": "mlmContracts/contracts-upgradeable@4.8/utils/introspection/ERC165Upgradeable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							1599
						],
						"ERC165Upgradeable": [
							1860
						],
						"IERC165Upgradeable": [
							1872
						],
						"Initializable": [
							168
						]
					},
					"id": 1861,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1818,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "99:23:8"
						},
						{
							"absolutePath": "mlmContracts/contracts-upgradeable@4.8/utils/introspection/IERC165Upgradeable.sol",
							"file": "./IERC165Upgradeable.sol",
							"id": 1819,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1861,
							"sourceUnit": 1873,
							"src": "124:34:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "mlmContracts/contracts-upgradeable@4.8/proxy/utils/Initializable.sol",
							"file": "../../proxy/utils/Initializable.sol",
							"id": 1820,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1861,
							"sourceUnit": 169,
							"src": "159:45:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1822,
										"name": "Initializable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 168,
										"src": "822:13:8"
									},
									"id": 1823,
									"nodeType": "InheritanceSpecifier",
									"src": "822:13:8"
								},
								{
									"baseName": {
										"id": 1824,
										"name": "IERC165Upgradeable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1872,
										"src": "837:18:8"
									},
									"id": 1825,
									"nodeType": "InheritanceSpecifier",
									"src": "837:18:8"
								}
							],
							"canonicalName": "ERC165Upgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1821,
								"nodeType": "StructuredDocumentation",
								"src": "206:576:8",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."
							},
							"fullyImplemented": true,
							"id": 1860,
							"linearizedBaseContracts": [
								1860,
								1872,
								168
							],
							"name": "ERC165Upgradeable",
							"nameLocation": "801:17:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1830,
										"nodeType": "Block",
										"src": "913:7:8",
										"statements": []
									},
									"id": 1831,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1828,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1827,
												"name": "onlyInitializing",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 113,
												"src": "896:16:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "896:16:8"
										}
									],
									"name": "__ERC165_init",
									"nameLocation": "871:13:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1826,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "884:2:8"
									},
									"returnParameters": {
										"id": 1829,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "913:0:8"
									},
									"scope": 1860,
									"src": "862:58:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1836,
										"nodeType": "Block",
										"src": "987:7:8",
										"statements": []
									},
									"id": 1837,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1834,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1833,
												"name": "onlyInitializing",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 113,
												"src": "970:16:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "970:16:8"
										}
									],
									"name": "__ERC165_init_unchained",
									"nameLocation": "935:23:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1832,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "958:2:8"
									},
									"returnParameters": {
										"id": 1835,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "987:0:8"
									},
									"scope": 1860,
									"src": "926:68:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1871
									],
									"body": {
										"id": 1853,
										"nodeType": "Block",
										"src": "1151:75:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1851,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1846,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1840,
														"src": "1168:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1848,
																	"name": "IERC165Upgradeable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1872,
																	"src": "1188:18:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165Upgradeable_$1872_$",
																		"typeString": "type(contract IERC165Upgradeable)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165Upgradeable_$1872_$",
																		"typeString": "type(contract IERC165Upgradeable)"
																	}
																],
																"id": 1847,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "1183:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1849,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1183:24:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165Upgradeable_$1872",
																"typeString": "type(contract IERC165Upgradeable)"
															}
														},
														"id": 1850,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "1183:36:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "1168:51:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1845,
												"id": 1852,
												"nodeType": "Return",
												"src": "1161:58:8"
											}
										]
									},
									"documentation": {
										"id": 1838,
										"nodeType": "StructuredDocumentation",
										"src": "999:56:8",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1854,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1069:17:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1842,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1127:8:8"
									},
									"parameters": {
										"id": 1841,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1840,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1094:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1854,
												"src": "1087:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1839,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1087:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1086:20:8"
									},
									"returnParameters": {
										"id": 1845,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1844,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1854,
												"src": "1145:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1843,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1145:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1144:6:8"
									},
									"scope": 1860,
									"src": "1060:166:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 1855,
										"nodeType": "StructuredDocumentation",
										"src": "1232:254:8",
										"text": " @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
									},
									"id": 1859,
									"mutability": "mutable",
									"name": "__gap",
									"nameLocation": "1511:5:8",
									"nodeType": "VariableDeclaration",
									"scope": 1860,
									"src": "1491:25:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$50_storage",
										"typeString": "uint256[50]"
									},
									"typeName": {
										"baseType": {
											"id": 1856,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1491:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 1858,
										"length": {
											"hexValue": "3530",
											"id": 1857,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1499:2:8",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_50_by_1",
												"typeString": "int_const 50"
											},
											"value": "50"
										},
										"nodeType": "ArrayTypeName",
										"src": "1491:11:8",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
											"typeString": "uint256[50]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 1861,
							"src": "783:736:8",
							"usedErrors": []
						}
					],
					"src": "99:1421:8"
				},
				"id": 8
			},
			"mlmContracts/contracts-upgradeable@4.8/utils/introspection/IERC165Upgradeable.sol": {
				"ast": {
					"absolutePath": "mlmContracts/contracts-upgradeable@4.8/utils/introspection/IERC165Upgradeable.sol",
					"exportedSymbols": {
						"IERC165Upgradeable": [
							1872
						]
					},
					"id": 1873,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1862,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165Upgradeable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1863,
								"nodeType": "StructuredDocumentation",
								"src": "125:279:9",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1872,
							"linearizedBaseContracts": [
								1872
							],
							"name": "IERC165Upgradeable",
							"nameLocation": "415:18:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1864,
										"nodeType": "StructuredDocumentation",
										"src": "440:340:9",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1871,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "794:17:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1867,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1866,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "819:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1871,
												"src": "812:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1865,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "812:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "811:20:9"
									},
									"returnParameters": {
										"id": 1870,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1869,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1871,
												"src": "855:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1868,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "855:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "854:6:9"
									},
									"scope": 1872,
									"src": "785:76:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1873,
							"src": "405:458:9",
							"usedErrors": []
						}
					],
					"src": "100:764:9"
				},
				"id": 9
			},
			"mlmContracts/contracts-upgradeable@4.8/utils/math/MathUpgradeable.sol": {
				"ast": {
					"absolutePath": "mlmContracts/contracts-upgradeable@4.8/utils/math/MathUpgradeable.sol",
					"exportedSymbols": {
						"MathUpgradeable": [
							2737
						]
					},
					"id": 2738,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1874,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "103:23:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "MathUpgradeable",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1875,
								"nodeType": "StructuredDocumentation",
								"src": "128:73:10",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 2737,
							"linearizedBaseContracts": [
								2737
							],
							"name": "MathUpgradeable",
							"nameLocation": "210:15:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "MathUpgradeable.Rounding",
									"id": 1879,
									"members": [
										{
											"id": 1876,
											"name": "Down",
											"nameLocation": "256:4:10",
											"nodeType": "EnumValue",
											"src": "256:4:10"
										},
										{
											"id": 1877,
											"name": "Up",
											"nameLocation": "298:2:10",
											"nodeType": "EnumValue",
											"src": "298:2:10"
										},
										{
											"id": 1878,
											"name": "Zero",
											"nameLocation": "329:4:10",
											"nodeType": "EnumValue",
											"src": "329:4:10"
										}
									],
									"name": "Rounding",
									"nameLocation": "237:8:10",
									"nodeType": "EnumDefinition",
									"src": "232:122:10"
								},
								{
									"body": {
										"id": 1896,
										"nodeType": "Block",
										"src": "491:37:10",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1891,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1889,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1882,
															"src": "508:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 1890,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1884,
															"src": "512:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "508:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1893,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1884,
														"src": "520:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1894,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "508:13:10",
													"trueExpression": {
														"id": 1892,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1882,
														"src": "516:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1888,
												"id": 1895,
												"nodeType": "Return",
												"src": "501:20:10"
											}
										]
									},
									"documentation": {
										"id": 1880,
										"nodeType": "StructuredDocumentation",
										"src": "360:59:10",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 1897,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "433:3:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1885,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1882,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "445:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1897,
												"src": "437:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1881,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "437:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1884,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "456:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1897,
												"src": "448:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1883,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "448:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "436:22:10"
									},
									"returnParameters": {
										"id": 1888,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1887,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1897,
												"src": "482:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1886,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "482:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "481:9:10"
									},
									"scope": 2737,
									"src": "424:104:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1914,
										"nodeType": "Block",
										"src": "666:37:10",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1909,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1907,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1900,
															"src": "683:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 1908,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1902,
															"src": "687:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "683:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1911,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1902,
														"src": "695:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "683:13:10",
													"trueExpression": {
														"id": 1910,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1900,
														"src": "691:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1906,
												"id": 1913,
												"nodeType": "Return",
												"src": "676:20:10"
											}
										]
									},
									"documentation": {
										"id": 1898,
										"nodeType": "StructuredDocumentation",
										"src": "534:60:10",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 1915,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "608:3:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1903,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1900,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "620:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1915,
												"src": "612:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1899,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1902,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "631:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1915,
												"src": "623:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1901,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "623:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "611:22:10"
									},
									"returnParameters": {
										"id": 1906,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1905,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1915,
												"src": "657:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1904,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:9:10"
									},
									"scope": 2737,
									"src": "599:104:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1937,
										"nodeType": "Block",
										"src": "887:82:10",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1935,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1927,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1925,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1918,
																	"src": "942:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 1926,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1920,
																	"src": "946:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "942:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1928,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "941:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1934,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1931,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1929,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1918,
																		"src": "952:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 1930,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1920,
																		"src": "956:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "952:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1932,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "951:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 1933,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "961:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "951:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "941:21:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1924,
												"id": 1936,
												"nodeType": "Return",
												"src": "934:28:10"
											}
										]
									},
									"documentation": {
										"id": 1916,
										"nodeType": "StructuredDocumentation",
										"src": "709:102:10",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 1938,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "825:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1921,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1918,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "841:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1938,
												"src": "833:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1917,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "833:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1920,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "852:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1938,
												"src": "844:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1919,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "844:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "832:22:10"
									},
									"returnParameters": {
										"id": 1924,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1923,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1938,
												"src": "878:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1922,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "878:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "877:9:10"
									},
									"scope": 2737,
									"src": "816:153:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1962,
										"nodeType": "Block",
										"src": "1239:123:10",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1950,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1948,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1941,
															"src": "1327:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1949,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1332:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1327:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1959,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1957,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1954,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1952,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1941,
																			"src": "1341:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1953,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1345:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "1341:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1955,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1340:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 1956,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1943,
																"src": "1350:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1340:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1958,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1354:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1340:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1960,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "1327:28:10",
													"trueExpression": {
														"hexValue": "30",
														"id": 1951,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1336:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1947,
												"id": 1961,
												"nodeType": "Return",
												"src": "1320:35:10"
											}
										]
									},
									"documentation": {
										"id": 1939,
										"nodeType": "StructuredDocumentation",
										"src": "975:188:10",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."
									},
									"id": 1963,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "1177:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1944,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1941,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1193:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1963,
												"src": "1185:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1940,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1185:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1943,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1204:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1963,
												"src": "1196:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1942,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1196:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1184:22:10"
									},
									"returnParameters": {
										"id": 1947,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1946,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1963,
												"src": "1230:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1945,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1230:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1229:9:10"
									},
									"scope": 2737,
									"src": "1168:194:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2084,
										"nodeType": "Block",
										"src": "1806:3797:10",
										"statements": [
											{
												"id": 2083,
												"nodeType": "UncheckedBlock",
												"src": "1816:3781:10",
												"statements": [
													{
														"assignments": [
															1976
														],
														"declarations": [
															{
																"constant": false,
																"id": 1976,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "2145:5:10",
																"nodeType": "VariableDeclaration",
																"scope": 2083,
																"src": "2137:13:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1975,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2137:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1977,
														"nodeType": "VariableDeclarationStatement",
														"src": "2137:13:10"
													},
													{
														"assignments": [
															1979
														],
														"declarations": [
															{
																"constant": false,
																"id": 1979,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "2217:5:10",
																"nodeType": "VariableDeclaration",
																"scope": 2083,
																"src": "2209:13:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1978,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2209:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1980,
														"nodeType": "VariableDeclarationStatement",
														"src": "2209:13:10"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "2289:157:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2307:30:10",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "2324:1:10"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2327:1:10"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2334:1:10",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "2330:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2330:6:10"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nodeType": "YulIdentifier",
																			"src": "2317:6:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2317:20:10"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nodeType": "YulTypedName",
																			"src": "2311:2:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2354:18:10",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "2367:1:10"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2370:1:10"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "2363:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2363:9:10"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "2354:5:10"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2389:43:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nodeType": "YulIdentifier",
																						"src": "2406:2:10"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "2410:5:10"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "2402:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2402:14:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nodeType": "YulIdentifier",
																						"src": "2421:2:10"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "2425:5:10"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "2418:2:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2418:13:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2398:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2398:34:10"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nodeType": "YulIdentifier",
																			"src": "2389:5:10"
																		}
																	]
																}
															]
														},
														"evmVersion": "london",
														"externalReferences": [
															{
																"declaration": 1976,
																"isOffset": false,
																"isSlot": false,
																"src": "2354:5:10",
																"valueSize": 1
															},
															{
																"declaration": 1976,
																"isOffset": false,
																"isSlot": false,
																"src": "2410:5:10",
																"valueSize": 1
															},
															{
																"declaration": 1976,
																"isOffset": false,
																"isSlot": false,
																"src": "2425:5:10",
																"valueSize": 1
															},
															{
																"declaration": 1979,
																"isOffset": false,
																"isSlot": false,
																"src": "2389:5:10",
																"valueSize": 1
															},
															{
																"declaration": 1966,
																"isOffset": false,
																"isSlot": false,
																"src": "2324:1:10",
																"valueSize": 1
															},
															{
																"declaration": 1966,
																"isOffset": false,
																"isSlot": false,
																"src": "2367:1:10",
																"valueSize": 1
															},
															{
																"declaration": 1968,
																"isOffset": false,
																"isSlot": false,
																"src": "2327:1:10",
																"valueSize": 1
															},
															{
																"declaration": 1968,
																"isOffset": false,
																"isSlot": false,
																"src": "2370:1:10",
																"valueSize": 1
															}
														],
														"id": 1981,
														"nodeType": "InlineAssembly",
														"src": "2280:166:10"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1984,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1982,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1979,
																"src": "2527:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1983,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2536:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2527:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1990,
														"nodeType": "IfStatement",
														"src": "2523:75:10",
														"trueBody": {
															"id": 1989,
															"nodeType": "Block",
															"src": "2539:59:10",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1987,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1985,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1976,
																			"src": "2564:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 1986,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1970,
																			"src": "2572:11:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2564:19:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 1974,
																	"id": 1988,
																	"nodeType": "Return",
																	"src": "2557:26:10"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1994,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1992,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1970,
																		"src": "2708:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"id": 1993,
																		"name": "prod1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1979,
																		"src": "2722:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2708:19:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																],
																"id": 1991,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "2700:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																	"typeString": "function (bool) pure"
																}
															},
															"id": 1995,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2700:28:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1996,
														"nodeType": "ExpressionStatement",
														"src": "2700:28:10"
													},
													{
														"assignments": [
															1998
														],
														"declarations": [
															{
																"constant": false,
																"id": 1998,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "2992:9:10",
																"nodeType": "VariableDeclaration",
																"scope": 2083,
																"src": "2984:17:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1997,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2984:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1999,
														"nodeType": "VariableDeclarationStatement",
														"src": "2984:17:10"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "3024:291:10",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "3093:38:10",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "3113:1:10"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "3116:1:10"
																			},
																			{
																				"name": "denominator",
																				"nodeType": "YulIdentifier",
																				"src": "3119:11:10"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nodeType": "YulIdentifier",
																			"src": "3106:6:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3106:25:10"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nodeType": "YulIdentifier",
																			"src": "3093:9:10"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3213:41:10",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nodeType": "YulIdentifier",
																				"src": "3226:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nodeType": "YulIdentifier",
																						"src": "3236:9:10"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "3247:5:10"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nodeType": "YulIdentifier",
																					"src": "3233:2:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3233:20:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3222:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3222:32:10"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nodeType": "YulIdentifier",
																			"src": "3213:5:10"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3271:30:10",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "3284:5:10"
																			},
																			{
																				"name": "remainder",
																				"nodeType": "YulIdentifier",
																				"src": "3291:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3280:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3280:21:10"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "3271:5:10"
																		}
																	]
																}
															]
														},
														"evmVersion": "london",
														"externalReferences": [
															{
																"declaration": 1970,
																"isOffset": false,
																"isSlot": false,
																"src": "3119:11:10",
																"valueSize": 1
															},
															{
																"declaration": 1976,
																"isOffset": false,
																"isSlot": false,
																"src": "3247:5:10",
																"valueSize": 1
															},
															{
																"declaration": 1976,
																"isOffset": false,
																"isSlot": false,
																"src": "3271:5:10",
																"valueSize": 1
															},
															{
																"declaration": 1976,
																"isOffset": false,
																"isSlot": false,
																"src": "3284:5:10",
																"valueSize": 1
															},
															{
																"declaration": 1979,
																"isOffset": false,
																"isSlot": false,
																"src": "3213:5:10",
																"valueSize": 1
															},
															{
																"declaration": 1979,
																"isOffset": false,
																"isSlot": false,
																"src": "3226:5:10",
																"valueSize": 1
															},
															{
																"declaration": 1998,
																"isOffset": false,
																"isSlot": false,
																"src": "3093:9:10",
																"valueSize": 1
															},
															{
																"declaration": 1998,
																"isOffset": false,
																"isSlot": false,
																"src": "3236:9:10",
																"valueSize": 1
															},
															{
																"declaration": 1998,
																"isOffset": false,
																"isSlot": false,
																"src": "3291:9:10",
																"valueSize": 1
															},
															{
																"declaration": 1966,
																"isOffset": false,
																"isSlot": false,
																"src": "3113:1:10",
																"valueSize": 1
															},
															{
																"declaration": 1968,
																"isOffset": false,
																"isSlot": false,
																"src": "3116:1:10",
																"valueSize": 1
															}
														],
														"id": 2000,
														"nodeType": "InlineAssembly",
														"src": "3015:300:10"
													},
													{
														"assignments": [
															2002
														],
														"declarations": [
															{
																"constant": false,
																"id": 2002,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "3630:4:10",
																"nodeType": "VariableDeclaration",
																"scope": 2083,
																"src": "3622:12:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2001,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3622:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2010,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2009,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2003,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1970,
																"src": "3637:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2007,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2005,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "~",
																			"prefix": true,
																			"src": "3652:12:10",
																			"subExpression": {
																				"id": 2004,
																				"name": "denominator",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1970,
																				"src": "3653:11:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 2006,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3667:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3652:16:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2008,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3651:18:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3637:32:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "3622:47:10"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "3692:362:10",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "3757:37:10",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nodeType": "YulIdentifier",
																				"src": "3776:11:10"
																			},
																			{
																				"name": "twos",
																				"nodeType": "YulIdentifier",
																				"src": "3789:4:10"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "3772:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3772:22:10"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nodeType": "YulIdentifier",
																			"src": "3757:11:10"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3861:25:10",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "3874:5:10"
																			},
																			{
																				"name": "twos",
																				"nodeType": "YulIdentifier",
																				"src": "3881:4:10"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "3870:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3870:16:10"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "3861:5:10"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4001:39:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4021:1:10",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nodeType": "YulIdentifier",
																								"src": "4024:4:10"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "4017:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4017:12:10"
																					},
																					{
																						"name": "twos",
																						"nodeType": "YulIdentifier",
																						"src": "4031:4:10"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "4013:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4013:23:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4038:1:10",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4009:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4009:31:10"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nodeType": "YulIdentifier",
																			"src": "4001:4:10"
																		}
																	]
																}
															]
														},
														"evmVersion": "london",
														"externalReferences": [
															{
																"declaration": 1970,
																"isOffset": false,
																"isSlot": false,
																"src": "3757:11:10",
																"valueSize": 1
															},
															{
																"declaration": 1970,
																"isOffset": false,
																"isSlot": false,
																"src": "3776:11:10",
																"valueSize": 1
															},
															{
																"declaration": 1976,
																"isOffset": false,
																"isSlot": false,
																"src": "3861:5:10",
																"valueSize": 1
															},
															{
																"declaration": 1976,
																"isOffset": false,
																"isSlot": false,
																"src": "3874:5:10",
																"valueSize": 1
															},
															{
																"declaration": 2002,
																"isOffset": false,
																"isSlot": false,
																"src": "3789:4:10",
																"valueSize": 1
															},
															{
																"declaration": 2002,
																"isOffset": false,
																"isSlot": false,
																"src": "3881:4:10",
																"valueSize": 1
															},
															{
																"declaration": 2002,
																"isOffset": false,
																"isSlot": false,
																"src": "4001:4:10",
																"valueSize": 1
															},
															{
																"declaration": 2002,
																"isOffset": false,
																"isSlot": false,
																"src": "4024:4:10",
																"valueSize": 1
															},
															{
																"declaration": 2002,
																"isOffset": false,
																"isSlot": false,
																"src": "4031:4:10",
																"valueSize": 1
															}
														],
														"id": 2011,
														"nodeType": "InlineAssembly",
														"src": "3683:371:10"
													},
													{
														"expression": {
															"id": 2016,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2012,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1976,
																"src": "4120:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2015,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2013,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1979,
																	"src": "4129:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2014,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2002,
																	"src": "4137:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4129:12:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4120:21:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2017,
														"nodeType": "ExpressionStatement",
														"src": "4120:21:10"
													},
													{
														"assignments": [
															2019
														],
														"declarations": [
															{
																"constant": false,
																"id": 2019,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "4467:7:10",
																"nodeType": "VariableDeclaration",
																"scope": 2083,
																"src": "4459:15:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2018,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4459:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2026,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2025,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2022,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 2020,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4478:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 2021,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1970,
																			"src": "4482:11:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4478:15:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2023,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "4477:17:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 2024,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4497:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "4477:21:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4459:39:10"
													},
													{
														"expression": {
															"id": 2033,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2027,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2019,
																"src": "4715:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2032,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2028,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4726:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2031,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2029,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1970,
																		"src": "4730:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2030,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2019,
																		"src": "4744:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4730:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4726:25:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4715:36:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2034,
														"nodeType": "ExpressionStatement",
														"src": "4715:36:10"
													},
													{
														"expression": {
															"id": 2041,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2035,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2019,
																"src": "4784:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2040,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2036,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4795:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2039,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2037,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1970,
																		"src": "4799:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2038,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2019,
																		"src": "4813:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4799:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4795:25:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4784:36:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2042,
														"nodeType": "ExpressionStatement",
														"src": "4784:36:10"
													},
													{
														"expression": {
															"id": 2049,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2043,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2019,
																"src": "4854:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2048,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2044,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4865:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2047,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2045,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1970,
																		"src": "4869:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2046,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2019,
																		"src": "4883:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4869:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4865:25:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4854:36:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2050,
														"nodeType": "ExpressionStatement",
														"src": "4854:36:10"
													},
													{
														"expression": {
															"id": 2057,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2051,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2019,
																"src": "4924:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2056,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2052,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4935:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2055,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2053,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1970,
																		"src": "4939:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2054,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2019,
																		"src": "4953:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4939:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4935:25:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4924:36:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2058,
														"nodeType": "ExpressionStatement",
														"src": "4924:36:10"
													},
													{
														"expression": {
															"id": 2065,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2059,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2019,
																"src": "4994:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2064,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2060,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5005:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2063,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2061,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1970,
																		"src": "5009:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2062,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2019,
																		"src": "5023:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5009:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5005:25:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4994:36:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2066,
														"nodeType": "ExpressionStatement",
														"src": "4994:36:10"
													},
													{
														"expression": {
															"id": 2073,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2067,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2019,
																"src": "5065:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2072,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2068,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5076:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2071,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2069,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1970,
																		"src": "5080:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2070,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2019,
																		"src": "5094:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5080:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5076:25:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5065:36:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2074,
														"nodeType": "ExpressionStatement",
														"src": "5065:36:10"
													},
													{
														"expression": {
															"id": 2079,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2075,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1973,
																"src": "5535:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2078,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2076,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1976,
																	"src": "5544:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2077,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2019,
																	"src": "5552:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5544:15:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5535:24:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2080,
														"nodeType": "ExpressionStatement",
														"src": "5535:24:10"
													},
													{
														"expression": {
															"id": 2081,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1973,
															"src": "5580:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1974,
														"id": 2082,
														"nodeType": "Return",
														"src": "5573:13:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1964,
										"nodeType": "StructuredDocumentation",
										"src": "1368:305:10",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."
									},
									"id": 2085,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "1687:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1971,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1966,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "1711:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2085,
												"src": "1703:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1965,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1703:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1968,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "1730:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2085,
												"src": "1722:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1967,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1722:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1970,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "1749:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 2085,
												"src": "1741:19:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1969,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1741:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1693:73:10"
									},
									"returnParameters": {
										"id": 1974,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1973,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "1798:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 2085,
												"src": "1790:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1972,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1790:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1789:16:10"
									},
									"scope": 2737,
									"src": "1678:3925:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2128,
										"nodeType": "Block",
										"src": "5883:189:10",
										"statements": [
											{
												"assignments": [
													2101
												],
												"declarations": [
													{
														"constant": false,
														"id": 2101,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "5901:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 2128,
														"src": "5893:14:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2100,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5893:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2107,
												"initialValue": {
													"arguments": [
														{
															"id": 2103,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2088,
															"src": "5917:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2104,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2090,
															"src": "5920:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2105,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2092,
															"src": "5923:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2102,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2085,
															2129
														],
														"referencedDeclaration": 2085,
														"src": "5910:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5910:25:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5893:42:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2119,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_enum$_Rounding_$1879",
															"typeString": "enum MathUpgradeable.Rounding"
														},
														"id": 2111,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2108,
															"name": "rounding",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2095,
															"src": "5949:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$1879",
																"typeString": "enum MathUpgradeable.Rounding"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 2109,
																"name": "Rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1879,
																"src": "5961:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_Rounding_$1879_$",
																	"typeString": "type(enum MathUpgradeable.Rounding)"
																}
															},
															"id": 2110,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "Up",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1877,
															"src": "5961:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$1879",
																"typeString": "enum MathUpgradeable.Rounding"
															}
														},
														"src": "5949:23:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2118,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 2113,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2088,
																	"src": "5983:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2114,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2090,
																	"src": "5986:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2115,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2092,
																	"src": "5989:11:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2112,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "5976:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2116,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5976:25:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 2117,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6004:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "5976:29:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "5949:56:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2125,
												"nodeType": "IfStatement",
												"src": "5945:98:10",
												"trueBody": {
													"id": 2124,
													"nodeType": "Block",
													"src": "6007:36:10",
													"statements": [
														{
															"expression": {
																"id": 2122,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2120,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2101,
																	"src": "6021:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 2121,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6031:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "6021:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2123,
															"nodeType": "ExpressionStatement",
															"src": "6021:11:10"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2126,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2101,
													"src": "6059:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2099,
												"id": 2127,
												"nodeType": "Return",
												"src": "6052:13:10"
											}
										]
									},
									"documentation": {
										"id": 2086,
										"nodeType": "StructuredDocumentation",
										"src": "5609:121:10",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 2129,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "5744:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2096,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2088,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "5768:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2129,
												"src": "5760:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2087,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5760:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2090,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "5787:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2129,
												"src": "5779:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2089,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5779:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2092,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "5806:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 2129,
												"src": "5798:19:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2091,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5798:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2095,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "5836:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2129,
												"src": "5827:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1879",
													"typeString": "enum MathUpgradeable.Rounding"
												},
												"typeName": {
													"id": 2094,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2093,
														"name": "Rounding",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1879,
														"src": "5827:8:10"
													},
													"referencedDeclaration": 1879,
													"src": "5827:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1879",
														"typeString": "enum MathUpgradeable.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5750:100:10"
									},
									"returnParameters": {
										"id": 2099,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2098,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2129,
												"src": "5874:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2097,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5874:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5873:9:10"
									},
									"scope": 2737,
									"src": "5735:337:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2240,
										"nodeType": "Block",
										"src": "6348:1585:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2137,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2132,
														"src": "6362:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2138,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6367:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6362:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2143,
												"nodeType": "IfStatement",
												"src": "6358:45:10",
												"trueBody": {
													"id": 2142,
													"nodeType": "Block",
													"src": "6370:33:10",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 2140,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6391:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 2136,
															"id": 2141,
															"nodeType": "Return",
															"src": "6384:8:10"
														}
													]
												}
											},
											{
												"assignments": [
													2145
												],
												"declarations": [
													{
														"constant": false,
														"id": 2145,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "7090:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 2240,
														"src": "7082:14:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2144,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7082:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2154,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2153,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 2146,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7099:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2151,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 2148,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2132,
																			"src": "7110:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2147,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			2409,
																			2445
																		],
																		"referencedDeclaration": 2409,
																		"src": "7105:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2149,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7105:7:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2150,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7116:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7105:12:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2152,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "7104:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7099:19:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7082:36:10"
											},
											{
												"id": 2239,
												"nodeType": "UncheckedBlock",
												"src": "7519:408:10",
												"statements": [
													{
														"expression": {
															"id": 2164,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2155,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2145,
																"src": "7543:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2163,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2160,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2156,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2145,
																				"src": "7553:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2159,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2157,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2132,
																					"src": "7562:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2158,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2145,
																					"src": "7566:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7562:10:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7553:19:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2161,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7552:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2162,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7577:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7552:26:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7543:35:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2165,
														"nodeType": "ExpressionStatement",
														"src": "7543:35:10"
													},
													{
														"expression": {
															"id": 2175,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2166,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2145,
																"src": "7592:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2174,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2171,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2167,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2145,
																				"src": "7602:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2170,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2168,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2132,
																					"src": "7611:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2169,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2145,
																					"src": "7615:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7611:10:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7602:19:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2172,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7601:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2173,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7626:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7601:26:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7592:35:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2176,
														"nodeType": "ExpressionStatement",
														"src": "7592:35:10"
													},
													{
														"expression": {
															"id": 2186,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2177,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2145,
																"src": "7641:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2185,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2182,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2178,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2145,
																				"src": "7651:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2181,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2179,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2132,
																					"src": "7660:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2180,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2145,
																					"src": "7664:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7660:10:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7651:19:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2183,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7650:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2184,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7675:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7650:26:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7641:35:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2187,
														"nodeType": "ExpressionStatement",
														"src": "7641:35:10"
													},
													{
														"expression": {
															"id": 2197,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2188,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2145,
																"src": "7690:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2196,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2193,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2189,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2145,
																				"src": "7700:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2192,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2190,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2132,
																					"src": "7709:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2191,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2145,
																					"src": "7713:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7709:10:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7700:19:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2194,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7699:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2195,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7724:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7699:26:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7690:35:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2198,
														"nodeType": "ExpressionStatement",
														"src": "7690:35:10"
													},
													{
														"expression": {
															"id": 2208,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2199,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2145,
																"src": "7739:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2207,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2204,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2200,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2145,
																				"src": "7749:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2203,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2201,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2132,
																					"src": "7758:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2202,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2145,
																					"src": "7762:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7758:10:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7749:19:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2205,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7748:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2206,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7773:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7748:26:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7739:35:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2209,
														"nodeType": "ExpressionStatement",
														"src": "7739:35:10"
													},
													{
														"expression": {
															"id": 2219,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2210,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2145,
																"src": "7788:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2218,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2215,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2211,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2145,
																				"src": "7798:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2214,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2212,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2132,
																					"src": "7807:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2213,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2145,
																					"src": "7811:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7807:10:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7798:19:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2216,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7797:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2217,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7822:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7797:26:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7788:35:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2220,
														"nodeType": "ExpressionStatement",
														"src": "7788:35:10"
													},
													{
														"expression": {
															"id": 2230,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2221,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2145,
																"src": "7837:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2229,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2226,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2222,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2145,
																				"src": "7847:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2225,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2223,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2132,
																					"src": "7856:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2224,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2145,
																					"src": "7860:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7856:10:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7847:19:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2227,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7846:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2228,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7871:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7846:26:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7837:35:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2231,
														"nodeType": "ExpressionStatement",
														"src": "7837:35:10"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 2233,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2145,
																	"src": "7897:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2236,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2234,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2132,
																		"src": "7905:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2235,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2145,
																		"src": "7909:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7905:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2232,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1915,
																"src": "7893:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2237,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7893:23:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2136,
														"id": 2238,
														"nodeType": "Return",
														"src": "7886:30:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2130,
										"nodeType": "StructuredDocumentation",
										"src": "6078:208:10",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 2241,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "6300:4:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2132,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6313:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2241,
												"src": "6305:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2131,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6305:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6304:11:10"
									},
									"returnParameters": {
										"id": 2136,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2135,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2241,
												"src": "6339:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2134,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6339:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6338:9:10"
									},
									"scope": 2737,
									"src": "6291:1642:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2276,
										"nodeType": "Block",
										"src": "8109:161:10",
										"statements": [
											{
												"id": 2275,
												"nodeType": "UncheckedBlock",
												"src": "8119:145:10",
												"statements": [
													{
														"assignments": [
															2253
														],
														"declarations": [
															{
																"constant": false,
																"id": 2253,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "8151:6:10",
																"nodeType": "VariableDeclaration",
																"scope": 2275,
																"src": "8143:14:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2252,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "8143:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2257,
														"initialValue": {
															"arguments": [
																{
																	"id": 2255,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2244,
																	"src": "8165:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2254,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2241,
																	2277
																],
																"referencedDeclaration": 2241,
																"src": "8160:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2256,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8160:7:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "8143:24:10"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2273,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2258,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2253,
																"src": "8188:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2268,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$1879",
																					"typeString": "enum MathUpgradeable.Rounding"
																				},
																				"id": 2262,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2259,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2247,
																					"src": "8198:8:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1879",
																						"typeString": "enum MathUpgradeable.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 2260,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1879,
																						"src": "8210:8:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$1879_$",
																							"typeString": "type(enum MathUpgradeable.Rounding)"
																						}
																					},
																					"id": 2261,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1877,
																					"src": "8210:11:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1879",
																						"typeString": "enum MathUpgradeable.Rounding"
																					}
																				},
																				"src": "8198:23:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2267,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2265,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2263,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2253,
																						"src": "8225:6:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 2264,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2253,
																						"src": "8234:6:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "8225:15:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2266,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2244,
																					"src": "8243:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8225:19:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "8198:46:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2270,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8251:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2271,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "8198:54:10",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2269,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8247:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2272,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "8197:56:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "8188:65:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2251,
														"id": 2274,
														"nodeType": "Return",
														"src": "8181:72:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2242,
										"nodeType": "StructuredDocumentation",
										"src": "7939:89:10",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 2277,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8042:4:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2244,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8055:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2277,
												"src": "8047:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2243,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8047:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2247,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8067:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2277,
												"src": "8058:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1879",
													"typeString": "enum MathUpgradeable.Rounding"
												},
												"typeName": {
													"id": 2246,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2245,
														"name": "Rounding",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1879,
														"src": "8058:8:10"
													},
													"referencedDeclaration": 1879,
													"src": "8058:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1879",
														"typeString": "enum MathUpgradeable.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8046:30:10"
									},
									"returnParameters": {
										"id": 2251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2250,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2277,
												"src": "8100:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2249,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8100:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8099:9:10"
									},
									"scope": 2737,
									"src": "8033:237:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2408,
										"nodeType": "Block",
										"src": "8455:922:10",
										"statements": [
											{
												"assignments": [
													2286
												],
												"declarations": [
													{
														"constant": false,
														"id": 2286,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8473:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 2408,
														"src": "8465:14:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2285,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8465:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2288,
												"initialValue": {
													"hexValue": "30",
													"id": 2287,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8482:1:10",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8465:18:10"
											},
											{
												"id": 2405,
												"nodeType": "UncheckedBlock",
												"src": "8493:855:10",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2293,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2291,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2289,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2280,
																	"src": "8521:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2290,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8530:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "8521:12:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2292,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8536:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8521:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2303,
														"nodeType": "IfStatement",
														"src": "8517:99:10",
														"trueBody": {
															"id": 2302,
															"nodeType": "Block",
															"src": "8539:77:10",
															"statements": [
																{
																	"expression": {
																		"id": 2296,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2294,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2280,
																			"src": "8557:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2295,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8567:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "8557:13:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2297,
																	"nodeType": "ExpressionStatement",
																	"src": "8557:13:10"
																},
																{
																	"expression": {
																		"id": 2300,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2298,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2286,
																			"src": "8588:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2299,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8598:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "8588:13:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2301,
																	"nodeType": "ExpressionStatement",
																	"src": "8588:13:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2308,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2306,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2304,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2280,
																	"src": "8633:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2305,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8642:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "8633:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2307,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8647:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8633:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2318,
														"nodeType": "IfStatement",
														"src": "8629:96:10",
														"trueBody": {
															"id": 2317,
															"nodeType": "Block",
															"src": "8650:75:10",
															"statements": [
																{
																	"expression": {
																		"id": 2311,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2309,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2280,
																			"src": "8668:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2310,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8678:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "8668:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2312,
																	"nodeType": "ExpressionStatement",
																	"src": "8668:12:10"
																},
																{
																	"expression": {
																		"id": 2315,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2313,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2286,
																			"src": "8698:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2314,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8708:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "8698:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2316,
																	"nodeType": "ExpressionStatement",
																	"src": "8698:12:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2323,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2321,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2319,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2280,
																	"src": "8742:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2320,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8751:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "8742:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2322,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8756:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8742:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2333,
														"nodeType": "IfStatement",
														"src": "8738:96:10",
														"trueBody": {
															"id": 2332,
															"nodeType": "Block",
															"src": "8759:75:10",
															"statements": [
																{
																	"expression": {
																		"id": 2326,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2324,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2280,
																			"src": "8777:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2325,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8787:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "8777:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2327,
																	"nodeType": "ExpressionStatement",
																	"src": "8777:12:10"
																},
																{
																	"expression": {
																		"id": 2330,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2328,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2286,
																			"src": "8807:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2329,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8817:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "8807:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2331,
																	"nodeType": "ExpressionStatement",
																	"src": "8807:12:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2338,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2336,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2334,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2280,
																	"src": "8851:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2335,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8860:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "8851:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2337,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8865:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8851:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2348,
														"nodeType": "IfStatement",
														"src": "8847:96:10",
														"trueBody": {
															"id": 2347,
															"nodeType": "Block",
															"src": "8868:75:10",
															"statements": [
																{
																	"expression": {
																		"id": 2341,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2339,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2280,
																			"src": "8886:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2340,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8896:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "8886:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2342,
																	"nodeType": "ExpressionStatement",
																	"src": "8886:12:10"
																},
																{
																	"expression": {
																		"id": 2345,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2343,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2286,
																			"src": "8916:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2344,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8926:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "8916:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2346,
																	"nodeType": "ExpressionStatement",
																	"src": "8916:12:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2353,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2351,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2349,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2280,
																	"src": "8960:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2350,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8969:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "8960:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2352,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8973:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8960:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2363,
														"nodeType": "IfStatement",
														"src": "8956:93:10",
														"trueBody": {
															"id": 2362,
															"nodeType": "Block",
															"src": "8976:73:10",
															"statements": [
																{
																	"expression": {
																		"id": 2356,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2354,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2280,
																			"src": "8994:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2355,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9004:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "8994:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2357,
																	"nodeType": "ExpressionStatement",
																	"src": "8994:11:10"
																},
																{
																	"expression": {
																		"id": 2360,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2358,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2286,
																			"src": "9023:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2359,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9033:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "9023:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2361,
																	"nodeType": "ExpressionStatement",
																	"src": "9023:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2368,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2366,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2364,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2280,
																	"src": "9066:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2365,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9075:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "9066:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2367,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9079:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9066:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2378,
														"nodeType": "IfStatement",
														"src": "9062:93:10",
														"trueBody": {
															"id": 2377,
															"nodeType": "Block",
															"src": "9082:73:10",
															"statements": [
																{
																	"expression": {
																		"id": 2371,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2369,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2280,
																			"src": "9100:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2370,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9110:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "9100:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2372,
																	"nodeType": "ExpressionStatement",
																	"src": "9100:11:10"
																},
																{
																	"expression": {
																		"id": 2375,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2373,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2286,
																			"src": "9129:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2374,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9139:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "9129:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2376,
																	"nodeType": "ExpressionStatement",
																	"src": "9129:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2383,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2381,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2379,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2280,
																	"src": "9172:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2380,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9181:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "9172:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2382,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9185:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9172:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2393,
														"nodeType": "IfStatement",
														"src": "9168:93:10",
														"trueBody": {
															"id": 2392,
															"nodeType": "Block",
															"src": "9188:73:10",
															"statements": [
																{
																	"expression": {
																		"id": 2386,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2384,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2280,
																			"src": "9206:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2385,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9216:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "9206:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2387,
																	"nodeType": "ExpressionStatement",
																	"src": "9206:11:10"
																},
																{
																	"expression": {
																		"id": 2390,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2388,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2286,
																			"src": "9235:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2389,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9245:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "9235:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2391,
																	"nodeType": "ExpressionStatement",
																	"src": "9235:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2398,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2396,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2394,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2280,
																	"src": "9278:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2395,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9287:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9278:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2397,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9291:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9278:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2404,
														"nodeType": "IfStatement",
														"src": "9274:64:10",
														"trueBody": {
															"id": 2403,
															"nodeType": "Block",
															"src": "9294:44:10",
															"statements": [
																{
																	"expression": {
																		"id": 2401,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2399,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2286,
																			"src": "9312:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2400,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9322:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9312:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2402,
																	"nodeType": "ExpressionStatement",
																	"src": "9312:11:10"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2406,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2286,
													"src": "9364:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2284,
												"id": 2407,
												"nodeType": "Return",
												"src": "9357:13:10"
											}
										]
									},
									"documentation": {
										"id": 2278,
										"nodeType": "StructuredDocumentation",
										"src": "8276:113:10",
										"text": " @dev Return the log in base 2, rounded down, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2409,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "8403:4:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2280,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8416:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2409,
												"src": "8408:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2279,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8408:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8407:15:10"
									},
									"returnParameters": {
										"id": 2284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2283,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2409,
												"src": "8446:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8446:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8445:9:10"
									},
									"scope": 2737,
									"src": "8394:983:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2444,
										"nodeType": "Block",
										"src": "9610:165:10",
										"statements": [
											{
												"id": 2443,
												"nodeType": "UncheckedBlock",
												"src": "9620:149:10",
												"statements": [
													{
														"assignments": [
															2421
														],
														"declarations": [
															{
																"constant": false,
																"id": 2421,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "9652:6:10",
																"nodeType": "VariableDeclaration",
																"scope": 2443,
																"src": "9644:14:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2420,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "9644:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2425,
														"initialValue": {
															"arguments": [
																{
																	"id": 2423,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2412,
																	"src": "9666:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2422,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2409,
																	2445
																],
																"referencedDeclaration": 2409,
																"src": "9661:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2424,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9661:11:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "9644:28:10"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2441,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2426,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2421,
																"src": "9693:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2436,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$1879",
																					"typeString": "enum MathUpgradeable.Rounding"
																				},
																				"id": 2430,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2427,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2415,
																					"src": "9703:8:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1879",
																						"typeString": "enum MathUpgradeable.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 2428,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1879,
																						"src": "9715:8:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$1879_$",
																							"typeString": "type(enum MathUpgradeable.Rounding)"
																						}
																					},
																					"id": 2429,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1877,
																					"src": "9715:11:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1879",
																						"typeString": "enum MathUpgradeable.Rounding"
																					}
																				},
																				"src": "9703:23:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2435,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2433,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2431,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "9730:1:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 2432,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2421,
																						"src": "9735:6:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "9730:11:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2434,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2412,
																					"src": "9744:5:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9730:19:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "9703:46:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2438,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9756:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2439,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "9703:54:10",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2437,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9752:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2440,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "9702:56:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "9693:65:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2419,
														"id": 2442,
														"nodeType": "Return",
														"src": "9686:72:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2410,
										"nodeType": "StructuredDocumentation",
										"src": "9383:142:10",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2445,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "9539:4:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2416,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2412,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9552:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2445,
												"src": "9544:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2411,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9544:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2415,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "9568:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2445,
												"src": "9559:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1879",
													"typeString": "enum MathUpgradeable.Rounding"
												},
												"typeName": {
													"id": 2414,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2413,
														"name": "Rounding",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1879,
														"src": "9559:8:10"
													},
													"referencedDeclaration": 1879,
													"src": "9559:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1879",
														"typeString": "enum MathUpgradeable.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9543:34:10"
									},
									"returnParameters": {
										"id": 2419,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2418,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2445,
												"src": "9601:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2417,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9601:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9600:9:10"
									},
									"scope": 2737,
									"src": "9530:245:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2573,
										"nodeType": "Block",
										"src": "9962:828:10",
										"statements": [
											{
												"assignments": [
													2454
												],
												"declarations": [
													{
														"constant": false,
														"id": 2454,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "9980:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 2573,
														"src": "9972:14:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2453,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9972:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2456,
												"initialValue": {
													"hexValue": "30",
													"id": 2455,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "9989:1:10",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9972:18:10"
											},
											{
												"id": 2570,
												"nodeType": "UncheckedBlock",
												"src": "10000:761:10",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2461,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2457,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2448,
																"src": "10028:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 2460,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2458,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10037:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2459,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10041:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "10037:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "10028:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2473,
														"nodeType": "IfStatement",
														"src": "10024:99:10",
														"trueBody": {
															"id": 2472,
															"nodeType": "Block",
															"src": "10045:78:10",
															"statements": [
																{
																	"expression": {
																		"id": 2466,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2462,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2448,
																			"src": "10063:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 2465,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2463,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10072:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 2464,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10076:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "10072:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "10063:15:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2467,
																	"nodeType": "ExpressionStatement",
																	"src": "10063:15:10"
																},
																{
																	"expression": {
																		"id": 2470,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2468,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2454,
																			"src": "10096:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2469,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10106:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10096:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2471,
																	"nodeType": "ExpressionStatement",
																	"src": "10096:12:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2478,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2474,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2448,
																"src": "10140:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 2477,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2475,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10149:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2476,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10153:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "10149:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "10140:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2490,
														"nodeType": "IfStatement",
														"src": "10136:99:10",
														"trueBody": {
															"id": 2489,
															"nodeType": "Block",
															"src": "10157:78:10",
															"statements": [
																{
																	"expression": {
																		"id": 2483,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2479,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2448,
																			"src": "10175:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 2482,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2480,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10184:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 2481,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10188:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "10184:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "10175:15:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2484,
																	"nodeType": "ExpressionStatement",
																	"src": "10175:15:10"
																},
																{
																	"expression": {
																		"id": 2487,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2485,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2454,
																			"src": "10208:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2486,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10218:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "10208:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2488,
																	"nodeType": "ExpressionStatement",
																	"src": "10208:12:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2495,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2491,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2448,
																"src": "10252:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 2494,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2492,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10261:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2493,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10265:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "10261:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "10252:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2507,
														"nodeType": "IfStatement",
														"src": "10248:99:10",
														"trueBody": {
															"id": 2506,
															"nodeType": "Block",
															"src": "10269:78:10",
															"statements": [
																{
																	"expression": {
																		"id": 2500,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2496,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2448,
																			"src": "10287:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 2499,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2497,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10296:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 2498,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10300:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "10296:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "10287:15:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2501,
																	"nodeType": "ExpressionStatement",
																	"src": "10287:15:10"
																},
																{
																	"expression": {
																		"id": 2504,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2502,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2454,
																			"src": "10320:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2503,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10330:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "10320:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2505,
																	"nodeType": "ExpressionStatement",
																	"src": "10320:12:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2512,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2508,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2448,
																"src": "10364:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 2511,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2509,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10373:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2510,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10377:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "10373:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "10364:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2524,
														"nodeType": "IfStatement",
														"src": "10360:96:10",
														"trueBody": {
															"id": 2523,
															"nodeType": "Block",
															"src": "10380:76:10",
															"statements": [
																{
																	"expression": {
																		"id": 2517,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2513,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2448,
																			"src": "10398:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 2516,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2514,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10407:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 2515,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10411:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "10407:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "10398:14:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2518,
																	"nodeType": "ExpressionStatement",
																	"src": "10398:14:10"
																},
																{
																	"expression": {
																		"id": 2521,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2519,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2454,
																			"src": "10430:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2520,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10440:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "10430:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2522,
																	"nodeType": "ExpressionStatement",
																	"src": "10430:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2529,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2525,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2448,
																"src": "10473:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 2528,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2526,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10482:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2527,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10486:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "10482:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "10473:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2541,
														"nodeType": "IfStatement",
														"src": "10469:96:10",
														"trueBody": {
															"id": 2540,
															"nodeType": "Block",
															"src": "10489:76:10",
															"statements": [
																{
																	"expression": {
																		"id": 2534,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2530,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2448,
																			"src": "10507:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 2533,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2531,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10516:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 2532,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10520:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "10516:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "10507:14:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2535,
																	"nodeType": "ExpressionStatement",
																	"src": "10507:14:10"
																},
																{
																	"expression": {
																		"id": 2538,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2536,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2454,
																			"src": "10539:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2537,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10549:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "10539:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2539,
																	"nodeType": "ExpressionStatement",
																	"src": "10539:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2546,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2542,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2448,
																"src": "10582:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 2545,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2543,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10591:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2544,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10595:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "10591:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "10582:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2558,
														"nodeType": "IfStatement",
														"src": "10578:96:10",
														"trueBody": {
															"id": 2557,
															"nodeType": "Block",
															"src": "10598:76:10",
															"statements": [
																{
																	"expression": {
																		"id": 2551,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2547,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2448,
																			"src": "10616:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 2550,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2548,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10625:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 2549,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10629:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "10625:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "10616:14:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2552,
																	"nodeType": "ExpressionStatement",
																	"src": "10616:14:10"
																},
																{
																	"expression": {
																		"id": 2555,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2553,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2454,
																			"src": "10648:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2554,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10658:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "10648:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2556,
																	"nodeType": "ExpressionStatement",
																	"src": "10648:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2563,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2559,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2448,
																"src": "10691:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 2562,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2560,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10700:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2561,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10704:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10700:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "10691:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2569,
														"nodeType": "IfStatement",
														"src": "10687:64:10",
														"trueBody": {
															"id": 2568,
															"nodeType": "Block",
															"src": "10707:44:10",
															"statements": [
																{
																	"expression": {
																		"id": 2566,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2564,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2454,
																			"src": "10725:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2565,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10735:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "10725:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2567,
																	"nodeType": "ExpressionStatement",
																	"src": "10725:11:10"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2571,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2454,
													"src": "10777:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2452,
												"id": 2572,
												"nodeType": "Return",
												"src": "10770:13:10"
											}
										]
									},
									"documentation": {
										"id": 2446,
										"nodeType": "StructuredDocumentation",
										"src": "9781:114:10",
										"text": " @dev Return the log in base 10, rounded down, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2574,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "9909:5:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2449,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2448,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9923:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2574,
												"src": "9915:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2447,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9915:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9914:15:10"
									},
									"returnParameters": {
										"id": 2452,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2451,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2574,
												"src": "9953:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2450,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9953:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9952:9:10"
									},
									"scope": 2737,
									"src": "9900:890:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2609,
										"nodeType": "Block",
										"src": "11025:165:10",
										"statements": [
											{
												"id": 2608,
												"nodeType": "UncheckedBlock",
												"src": "11035:149:10",
												"statements": [
													{
														"assignments": [
															2586
														],
														"declarations": [
															{
																"constant": false,
																"id": 2586,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "11067:6:10",
																"nodeType": "VariableDeclaration",
																"scope": 2608,
																"src": "11059:14:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2585,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11059:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2590,
														"initialValue": {
															"arguments": [
																{
																	"id": 2588,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2577,
																	"src": "11082:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2587,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2574,
																	2610
																],
																"referencedDeclaration": 2574,
																"src": "11076:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2589,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11076:12:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11059:29:10"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2606,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2591,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2586,
																"src": "11109:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2601,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$1879",
																					"typeString": "enum MathUpgradeable.Rounding"
																				},
																				"id": 2595,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2592,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2580,
																					"src": "11119:8:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1879",
																						"typeString": "enum MathUpgradeable.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 2593,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1879,
																						"src": "11131:8:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$1879_$",
																							"typeString": "type(enum MathUpgradeable.Rounding)"
																						}
																					},
																					"id": 2594,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1877,
																					"src": "11131:11:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1879",
																						"typeString": "enum MathUpgradeable.Rounding"
																					}
																				},
																				"src": "11119:23:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2600,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2598,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 2596,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "11146:2:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 2597,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2586,
																						"src": "11150:6:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "11146:10:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2599,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2577,
																					"src": "11159:5:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11146:18:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "11119:45:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2603,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11171:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2604,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "11119:53:10",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2602,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11167:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2605,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "11118:55:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "11109:64:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2584,
														"id": 2607,
														"nodeType": "Return",
														"src": "11102:71:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2575,
										"nodeType": "StructuredDocumentation",
										"src": "10796:143:10",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2610,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "10953:5:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2581,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2577,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10967:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2610,
												"src": "10959:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2576,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10959:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2580,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "10983:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2610,
												"src": "10974:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1879",
													"typeString": "enum MathUpgradeable.Rounding"
												},
												"typeName": {
													"id": 2579,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2578,
														"name": "Rounding",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1879,
														"src": "10974:8:10"
													},
													"referencedDeclaration": 1879,
													"src": "10974:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1879",
														"typeString": "enum MathUpgradeable.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10958:34:10"
									},
									"returnParameters": {
										"id": 2584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2583,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2610,
												"src": "11016:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2582,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11016:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11015:9:10"
									},
									"scope": 2737,
									"src": "10944:246:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2696,
										"nodeType": "Block",
										"src": "11504:600:10",
										"statements": [
											{
												"assignments": [
													2619
												],
												"declarations": [
													{
														"constant": false,
														"id": 2619,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "11522:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 2696,
														"src": "11514:14:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2618,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11514:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2621,
												"initialValue": {
													"hexValue": "30",
													"id": 2620,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "11531:1:10",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11514:18:10"
											},
											{
												"id": 2693,
												"nodeType": "UncheckedBlock",
												"src": "11542:533:10",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2626,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2624,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2622,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2613,
																	"src": "11570:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2623,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11579:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "11570:12:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2625,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11585:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11570:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2636,
														"nodeType": "IfStatement",
														"src": "11566:98:10",
														"trueBody": {
															"id": 2635,
															"nodeType": "Block",
															"src": "11588:76:10",
															"statements": [
																{
																	"expression": {
																		"id": 2629,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2627,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2613,
																			"src": "11606:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2628,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11616:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "11606:13:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2630,
																	"nodeType": "ExpressionStatement",
																	"src": "11606:13:10"
																},
																{
																	"expression": {
																		"id": 2633,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2631,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2619,
																			"src": "11637:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2632,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11647:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11637:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2634,
																	"nodeType": "ExpressionStatement",
																	"src": "11637:12:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2641,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2639,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2637,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2613,
																	"src": "11681:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2638,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11690:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "11681:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2640,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11695:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11681:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2651,
														"nodeType": "IfStatement",
														"src": "11677:95:10",
														"trueBody": {
															"id": 2650,
															"nodeType": "Block",
															"src": "11698:74:10",
															"statements": [
																{
																	"expression": {
																		"id": 2644,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2642,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2613,
																			"src": "11716:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2643,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11726:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11716:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2645,
																	"nodeType": "ExpressionStatement",
																	"src": "11716:12:10"
																},
																{
																	"expression": {
																		"id": 2648,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2646,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2619,
																			"src": "11746:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2647,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11756:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11746:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2649,
																	"nodeType": "ExpressionStatement",
																	"src": "11746:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2656,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2654,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2652,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2613,
																	"src": "11789:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2653,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11798:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "11789:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2655,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11803:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11789:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2666,
														"nodeType": "IfStatement",
														"src": "11785:95:10",
														"trueBody": {
															"id": 2665,
															"nodeType": "Block",
															"src": "11806:74:10",
															"statements": [
																{
																	"expression": {
																		"id": 2659,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2657,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2613,
																			"src": "11824:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2658,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11834:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11824:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2660,
																	"nodeType": "ExpressionStatement",
																	"src": "11824:12:10"
																},
																{
																	"expression": {
																		"id": 2663,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2661,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2619,
																			"src": "11854:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2662,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11864:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11854:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2664,
																	"nodeType": "ExpressionStatement",
																	"src": "11854:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2671,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2669,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2667,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2613,
																	"src": "11897:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2668,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11906:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "11897:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2670,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11911:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11897:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2681,
														"nodeType": "IfStatement",
														"src": "11893:95:10",
														"trueBody": {
															"id": 2680,
															"nodeType": "Block",
															"src": "11914:74:10",
															"statements": [
																{
																	"expression": {
																		"id": 2674,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2672,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2613,
																			"src": "11932:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2673,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11942:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11932:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2675,
																	"nodeType": "ExpressionStatement",
																	"src": "11932:12:10"
																},
																{
																	"expression": {
																		"id": 2678,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2676,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2619,
																			"src": "11962:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2677,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11972:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11962:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2679,
																	"nodeType": "ExpressionStatement",
																	"src": "11962:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2686,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2684,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2682,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2613,
																	"src": "12005:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2683,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12014:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "12005:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2685,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12018:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12005:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2692,
														"nodeType": "IfStatement",
														"src": "12001:64:10",
														"trueBody": {
															"id": 2691,
															"nodeType": "Block",
															"src": "12021:44:10",
															"statements": [
																{
																	"expression": {
																		"id": 2689,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2687,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2619,
																			"src": "12039:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2688,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12049:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "12039:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2690,
																	"nodeType": "ExpressionStatement",
																	"src": "12039:11:10"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2694,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2619,
													"src": "12091:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2617,
												"id": 2695,
												"nodeType": "Return",
												"src": "12084:13:10"
											}
										]
									},
									"documentation": {
										"id": 2611,
										"nodeType": "StructuredDocumentation",
										"src": "11196:240:10",
										"text": " @dev Return the log in base 256, rounded down, of a positive value.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 2697,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "11450:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2614,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2613,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11465:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2697,
												"src": "11457:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2612,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11457:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11456:15:10"
									},
									"returnParameters": {
										"id": 2617,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2616,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2697,
												"src": "11495:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2615,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11495:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11494:9:10"
									},
									"scope": 2737,
									"src": "11441:663:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2735,
										"nodeType": "Block",
										"src": "12340:173:10",
										"statements": [
											{
												"id": 2734,
												"nodeType": "UncheckedBlock",
												"src": "12350:157:10",
												"statements": [
													{
														"assignments": [
															2709
														],
														"declarations": [
															{
																"constant": false,
																"id": 2709,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "12382:6:10",
																"nodeType": "VariableDeclaration",
																"scope": 2734,
																"src": "12374:14:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2708,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "12374:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2713,
														"initialValue": {
															"arguments": [
																{
																	"id": 2711,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2700,
																	"src": "12398:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2710,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2697,
																	2736
																],
																"referencedDeclaration": 2697,
																"src": "12391:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2712,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12391:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "12374:30:10"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2732,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2714,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2709,
																"src": "12425:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2727,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$1879",
																					"typeString": "enum MathUpgradeable.Rounding"
																				},
																				"id": 2718,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2715,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2703,
																					"src": "12435:8:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1879",
																						"typeString": "enum MathUpgradeable.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 2716,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1879,
																						"src": "12447:8:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$1879_$",
																							"typeString": "type(enum MathUpgradeable.Rounding)"
																						}
																					},
																					"id": 2717,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1877,
																					"src": "12447:11:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1879",
																						"typeString": "enum MathUpgradeable.Rounding"
																					}
																				},
																				"src": "12435:23:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2726,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2724,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2719,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12462:1:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 2722,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 2720,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2709,
																									"src": "12468:6:10",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "*",
																								"rightExpression": {
																									"hexValue": "38",
																									"id": 2721,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "12477:1:10",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_8_by_1",
																										"typeString": "int_const 8"
																									},
																									"value": "8"
																								},
																								"src": "12468:10:10",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 2723,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "12467:12:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12462:17:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2725,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2700,
																					"src": "12482:5:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12462:25:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12435:52:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2729,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12494:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2730,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12435:60:10",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2728,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12490:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2731,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12434:62:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "12425:71:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2707,
														"id": 2733,
														"nodeType": "Return",
														"src": "12418:78:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2698,
										"nodeType": "StructuredDocumentation",
										"src": "12110:143:10",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2736,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "12267:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2704,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2700,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12282:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2736,
												"src": "12274:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2699,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12274:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2703,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "12298:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2736,
												"src": "12289:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1879",
													"typeString": "enum MathUpgradeable.Rounding"
												},
												"typeName": {
													"id": 2702,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2701,
														"name": "Rounding",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1879,
														"src": "12289:8:10"
													},
													"referencedDeclaration": 1879,
													"src": "12289:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1879",
														"typeString": "enum MathUpgradeable.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12273:34:10"
									},
									"returnParameters": {
										"id": 2707,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2706,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2736,
												"src": "12331:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2705,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12331:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12330:9:10"
									},
									"scope": 2737,
									"src": "12258:255:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2738,
							"src": "202:12313:10",
							"usedErrors": []
						}
					],
					"src": "103:12413:10"
				},
				"id": 10
			}
		}
	}
}